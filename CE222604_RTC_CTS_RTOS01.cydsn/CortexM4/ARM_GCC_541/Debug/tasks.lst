ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB605:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0.1\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Standard includes. */
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <stdlib.h>
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <string.h>
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task.h is included from an application file. */
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* FreeRTOS includes. */
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "FreeRTOS.h"
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "task.h"
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "timers.h"
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "stack_macros.h"
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** functions but without including stdio.h here. */
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#include <stdio.h>
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * global, rather than file scope.
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define static
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	microcontroller architecture. */
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	state task. */
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			--uxTopPriority;																			\
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	being used. */
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	architecture being used. */
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																								\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** count overflows. */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {																									\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** to its original value when it is released. */
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* See the comments above the definition of
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** } tskTCB;
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef tskTCB TCB_t;
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** which static variables must be declared volatile. */
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** accessed from a critical section. */
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -restore */
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /**
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is in any other state.
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * creation of the first user task.
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and its TCB deleted.
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * a suspended list, etc.).
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * set to a value other than 1.
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * will exit the Blocked state.
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * human readable tables of task information.
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 */
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * under the control of the scheduler.
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * called by the function.
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure. */
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function - use them. */
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = NULL;
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							void * const pvParameters,
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							UBaseType_t uxPriority,
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the TCB then the stack. */
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allocation is being used. */
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				be deleted later if required. */
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB = NULL;
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxStack;
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxStack != NULL )
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it again. */
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxStack );
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = NULL;
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t x;
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	by the port. */
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			debugging. */
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		performed. */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			break;
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xRegions;
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the top of stack variable is updated. */
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	updated. */
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the suspended state - make this the current task. */
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				fails, but we will report the failure. */
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseTaskLists();
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			so far. */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTaskNumber++;
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then it should run now. */
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being deleted. */
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready list. */
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not return. */
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTaskNumber++;
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				required. */
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that has just been deleted. */
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been deleted. */
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			block. */
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				tick time is less than the wake time. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY();
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is resumed.
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				executing task. */
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eReturn;
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxStateList;
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eRunning;
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lists. */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eBlocked;
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					indefinitely? */
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eSuspended;
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eBlocked;
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					all. */
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					eReturn = eDeleted;
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Ready (including pending ready) state. */
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eReady;
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being queried. */
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being changed. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority than the calling task. */
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of a task other than the currently
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						raised above that of the running task? */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but the running task must already be the highest
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					there may now be another task of higher priority that
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is ready to execute. */
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					require a yield as the running task must be above the
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new priority of the task being modified. */
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				before its uxPriority member is changed so the
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					currently using an inherited priority. */
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				being used for anything else. */
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						there is no need to check again and the port level
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						reset macro can be called directly. */
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				optimised task selection is not being used. */
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being suspended. */
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			suspended list. */
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					now suspended, so no notification was received. */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is now in the Suspended state. */
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 31


1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The current task has just been suspended. */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is. */
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vTaskSwitchContext();
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
  28              		.loc 1 1732 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 32


1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		section. */
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1740 0
  35 0000 0246     		mov	r2, r0
  36 0002 40B9     		cbnz	r0, .L2
  37              	.LBB94:
  38              	.LBB95:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 33


  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR		char
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT		float
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE		double
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG		long
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT		short
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #else
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD() 															\
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {																				\
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 																				\
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 34


 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE	__inline
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdFALSE;
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	else
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdTRUE;
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return xReturn;
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
  40              		.loc 2 156 0
  41              		.syntax unified
  42              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 35


  43 0004 4FF02F03 			mov r3, #47												
  44 0008 83F31188 		msr basepri, r3											
  45 000c BFF36F8F 		isb														
  46 0010 BFF34F8F 		dsb														
  47              	
  48              	@ 0 "" 2
  49              	.LVL1:
  50              		.thumb
  51              		.syntax unified
  52              	.L3:
  53 0014 FEE7     		b	.L3
  54              	.L2:
  55              	.LBE95:
  56              	.LBE94:
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  57              		.loc 1 1743 0
  58 0016 4169     		ldr	r1, [r0, #20]
  59 0018 0A4B     		ldr	r3, .L12
  60 001a 9942     		cmp	r1, r3
  61 001c 01D1     		bne	.L7
  62 001e 0123     		movs	r3, #1
  63 0020 00E0     		b	.L4
  64              	.L7:
  65 0022 0023     		movs	r3, #0
  66              	.L4:
  67              		.loc 1 1743 0 is_stmt 0 discriminator 4
  68 0024 43B1     		cbz	r3, .L8
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  69              		.loc 1 1746 0 is_stmt 1
  70 0026 926A     		ldr	r2, [r2, #40]
  71 0028 0749     		ldr	r1, .L12+4
  72 002a 8A42     		cmp	r2, r1
  73 002c 06D0     		beq	.L9
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  74              		.loc 1 1750 0
  75 002e 02B1     		cbz	r2, .L6
  76 0030 0023     		movs	r3, #0
  77              	.L6:
  78              		.loc 1 1750 0 is_stmt 0 discriminator 4
  79 0032 2BB9     		cbnz	r3, .L11
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  80              		.loc 1 1733 0 is_stmt 1
  81 0034 0020     		movs	r0, #0
  82              	.LVL2:
  83 0036 7047     		bx	lr
  84              	.LVL3:
  85              	.L8:
  86 0038 0020     		movs	r0, #0
  87              	.LVL4:
  88 003a 7047     		bx	lr
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 36


  89              	.LVL5:
  90              	.L9:
  91 003c 0020     		movs	r0, #0
  92              	.LVL6:
  93 003e 7047     		bx	lr
  94              	.LVL7:
  95              	.L11:
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
  96              		.loc 1 1752 0
  97 0040 0120     		movs	r0, #1
  98              	.LVL8:
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  99              		.loc 1 1770 0
 100 0042 7047     		bx	lr
 101              	.L13:
 102              		.align	2
 103              	.L12:
 104 0044 00000000 		.word	.LANCHOR0
 105 0048 14000000 		.word	.LANCHOR0+20
 106              		.cfi_endproc
 107              	.LFE605:
 108              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
 109              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 113              		.type	prvResetNextTaskUnblockTime, %function
 114              	prvResetNextTaskUnblockTime:
 115              	.LFB633:
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 37


1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		currently executing task. */
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						next yield. */
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 38


1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended list to the ready list directly. */
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unsuspended. */
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 39


1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xYieldRequired;
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskStartScheduler( void )
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												ulIdleTaskStackSize,
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( void * ) NULL,
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xReturn == pdPASS )
1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 40


1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xReturn == pdPASS )
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the only macro called by the function. */
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		starts to run. */
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to the task that will run first. */
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portable interface. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function will not return. */
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 41


2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		or the timer task. */
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) xIdleTaskHandle;
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskEndScheduler( void )
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSuspendAll( void )
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	++uxSchedulerSuspended;
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xReturn;
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		running. */
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 42


2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			processed. */
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		--uxSchedulerSuspended;
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 43


2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				appropriate ready list. */
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					task then a yield must be performed. */
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					important for low power tickless implementations, where
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				time. */
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						do
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							else
2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							--uxPendedCounts;
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 44


2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						uxPendedTicks = 0;
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xAlreadyYielded;
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTicks = xTickCount;
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xTicks;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 45


2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTickCount;
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t. */
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queried. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t x;
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cNextChar;
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 46


2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mismatch. */
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Characters didn't match. */
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						found. */
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxReturn = pxNextTCB;
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxReturn != NULL )
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The handle has been found. */
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxReturn;
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t* pxTCB;
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 47


2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the ready lists. */
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxQueue--;
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Found the handle. */
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the delayed lists. */
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the suspended list. */
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the deleted list. */
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 48


2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Ready state. */
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				do
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxQueue--;
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Blocked state. */
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task in the Suspended state. */
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 49


2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xIdleTaskHandle;
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 1. */
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		each stepped tick. */
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 50


2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			it is actually in the Blocked state. */
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended. */
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskENTER_CRITICAL();
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch if preemption is turned off. */
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						is unsuspended. */
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 51


2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xItemValue;
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks to be unblocked. */
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		block. */
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		look any further down the list. */
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( ;; )
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unlikely that the
2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					next time through. */
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 52


2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be removed from the Blocked state. */
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						item value is the time at which the task at the head
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						state -	so record the item value in
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it from the event list. */
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list. */
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					context switch if preemption is turned off. */
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						only be performed if the unblocked task has a
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority that is equal to or higher than the
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						currently executing task. */
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 53


2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationTickHook();
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		++uxPendedTicks;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler is locked. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationTickHook();
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 54


2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xSwitchRequired;
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		getting set. */
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 55


2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSwitchContext( void )
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		switch. */
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 56


2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																									\
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																											\
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		optimised asm code. */
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to this task. */
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 57


2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event groups implementation. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	task that is not in the Blocked state. */
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the task level). */
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function should not be called by application code hence the
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		can be used in place of vListInsert. */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 58


2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TIMERS */
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	called from a critical section within an ISR. */
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the delayed list, and add it to the ready list.
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxEventList is not empty. */
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pending until the scheduler is resumed. */
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should force a context switch now. */
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 59


3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdFALSE;
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event flags implementation. */
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the new item value in the event list. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event flags. */
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	lists. */
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		a context switch is required.  This function is called with the
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 60


3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				but has the same result. */
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				specified is the maximum block time then the task should block
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 61


3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The tick count is greater than the time at which
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			was called. */
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait = 0;
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskMissedYield( void )
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = 0U;
3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 62


3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * -----------------------------------------------------------
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The Idle task.
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * ----------------------------------------------------------
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) pvParameters;
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	any. */
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( ;; )
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			see if any other task has become available.  If we are using
3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			will automatically get the processor anyway. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD();
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 63


3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timeslice.
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskYIELD();
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allows the application designer to add background functionality
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			without the overhead of a separate task.
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationIdleHook();
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		user defined low power mode	implementations require
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			test of the expected idle time is performed without the
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			valid. */
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskSuspendAll();
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					time can be sampled again, and this time its value can
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 64


3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be used. */
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if the application does not want
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) xTaskResumeAll();
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupts. */
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 65


3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = NULL;
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pvReturn;
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 66


3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the calling task. */
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	using list2. */
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TCB_t *pxTCB;
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		being called too often in the idle task. */
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 67


3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		state is just set to whatever is passed in. */
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( eState != eInvalid )
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 68


3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( eState == eSuspended )
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						vTaskSuspendAll();
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) xTaskResumeAll();
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 69


3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask++;
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulCount = 0U;
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulCount++;
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 70


3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the stack and TCB. */
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			check what was statically allocated before trying to free the
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			memory. */
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be freed. */
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 71


3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				only memory that must be freed. */
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing needs to be freed. */
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 116              		.loc 1 3742 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 121              		.loc 1 3745 0
 122 0000 094B     		ldr	r3, .L19
 123 0002 9B6A     		ldr	r3, [r3, #40]
 124 0004 1B68     		ldr	r3, [r3]
 125 0006 0BB9     		cbnz	r3, .L18
 126 0008 0123     		movs	r3, #1
 127 000a 00E0     		b	.L15
 128              	.L18:
 129 000c 0023     		movs	r3, #0
 130              	.L15:
 131              		.loc 1 3745 0 is_stmt 0 discriminator 4
 132 000e 23B1     		cbz	r3, .L16
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		there is an item in the delayed list. */
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 133              		.loc 1 3751 0 is_stmt 1
 134 0010 4FF0FF32 		mov	r2, #-1
 135 0014 044B     		ldr	r3, .L19
 136 0016 DA62     		str	r2, [r3, #44]
 137 0018 7047     		bx	lr
 138              	.L16:
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 72


3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from the Blocked state. */
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 139              		.loc 1 3759 0
 140 001a 034B     		ldr	r3, .L19
 141 001c 9A6A     		ldr	r2, [r3, #40]
 142 001e D268     		ldr	r2, [r2, #12]
 143 0020 D268     		ldr	r2, [r2, #12]
 144              	.LVL9:
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 145              		.loc 1 3760 0
 146 0022 5268     		ldr	r2, [r2, #4]
 147              	.LVL10:
 148 0024 DA62     		str	r2, [r3, #44]
 149 0026 7047     		bx	lr
 150              	.L20:
 151              		.align	2
 152              	.L19:
 153 0028 00000000 		.word	.LANCHOR0
 154              		.cfi_endproc
 155              	.LFE633:
 156              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 157              		.section	.text.prvDeleteTCB,"ax",%progbits
 158              		.align	2
 159              		.thumb
 160              		.thumb_func
 161              		.type	prvDeleteTCB, %function
 162              	prvDeleteTCB:
 163              	.LFB632:
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 164              		.loc 1 3688 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              	.LVL11:
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 0446     		mov	r4, r0
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
 174              		.loc 1 3706 0
 175 0004 006B     		ldr	r0, [r0, #48]
 176              	.LVL12:
 177 0006 FFF7FEFF 		bl	vPortFree
 178              	.LVL13:
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 179              		.loc 1 3707 0
 180 000a 2046     		mov	r0, r4
 181 000c FFF7FEFF 		bl	vPortFree
 182              	.LVL14:
 183 0010 10BD     		pop	{r4, pc}
 184              		.cfi_endproc
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 73


 185              	.LFE632:
 186              		.size	prvDeleteTCB, .-prvDeleteTCB
 187 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 191              		.type	prvInitialiseNewTask, %function
 192              	prvInitialiseNewTask:
 193              	.LFB596:
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 194              		.loc 1 831 0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL15:
 199 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 200              		.cfi_def_cfa_offset 32
 201              		.cfi_offset 4, -32
 202              		.cfi_offset 5, -28
 203              		.cfi_offset 6, -24
 204              		.cfi_offset 7, -20
 205              		.cfi_offset 8, -16
 206              		.cfi_offset 9, -12
 207              		.cfi_offset 10, -8
 208              		.cfi_offset 14, -4
 209 0004 8246     		mov	r10, r0
 210 0006 8946     		mov	r9, r1
 211 0008 1546     		mov	r5, r2
 212 000a 9846     		mov	r8, r3
 213 000c 089F     		ldr	r7, [sp, #32]
 214 000e 099E     		ldr	r6, [sp, #36]
 215 0010 0A9C     		ldr	r4, [sp, #40]
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 216              		.loc 1 853 0
 217 0012 9200     		lsls	r2, r2, #2
 218              	.LVL16:
 219 0014 A521     		movs	r1, #165
 220              	.LVL17:
 221 0016 206B     		ldr	r0, [r4, #48]
 222              	.LVL18:
 223 0018 FFF7FEFF 		bl	memset
 224              	.LVL19:
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 225              		.loc 1 863 0
 226 001c 236B     		ldr	r3, [r4, #48]
 227 001e 05F18042 		add	r2, r5, #1073741824
 228 0022 013A     		subs	r2, r2, #1
 229 0024 03EB8205 		add	r5, r3, r2, lsl #2
 230              	.LVL20:
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231              		.loc 1 864 0
 232 0028 25F00705 		bic	r5, r5, #7
 233              	.LVL21:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 234              		.loc 1 891 0
 235 002c 0023     		movs	r3, #0
 236 002e 08E0     		b	.L24
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 74


 237              	.LVL22:
 238              	.L26:
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 239              		.loc 1 893 0
 240 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 241 0034 E218     		adds	r2, r4, r3
 242 0036 82F83410 		strb	r1, [r2, #52]
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 243              		.loc 1 898 0
 244 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 245 003e 12B1     		cbz	r2, .L25
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 246              		.loc 1 891 0 discriminator 2
 247 0040 0133     		adds	r3, r3, #1
 248              	.LVL23:
 249              	.L24:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 250              		.loc 1 891 0 is_stmt 0 discriminator 1
 251 0042 0F2B     		cmp	r3, #15
 252 0044 F4D9     		bls	.L26
 253              	.L25:
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 254              		.loc 1 910 0 is_stmt 1
 255 0046 0023     		movs	r3, #0
 256              	.LVL24:
 257 0048 84F84330 		strb	r3, [r4, #67]
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 258              		.loc 1 914 0
 259 004c 132F     		cmp	r7, #19
 260 004e 00D9     		bls	.L27
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 261              		.loc 1 916 0
 262 0050 1327     		movs	r7, #19
 263              	.L27:
 264              	.LVL25:
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 265              		.loc 1 923 0
 266 0052 E762     		str	r7, [r4, #44]
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 267              		.loc 1 931 0
 268 0054 201D     		adds	r0, r4, #4
 269 0056 FFF7FEFF 		bl	vListInitialiseItem
 270              	.LVL26:
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 271              		.loc 1 932 0
 272 005a 04F11800 		add	r0, r4, #24
 273 005e FFF7FEFF 		bl	vListInitialiseItem
 274              	.LVL27:
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 275              		.loc 1 936 0
 276 0062 2461     		str	r4, [r4, #16]
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 277              		.loc 1 939 0
 278 0064 C7F11403 		rsb	r3, r7, #20
 279 0068 A361     		str	r3, [r4, #24]
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 280              		.loc 1 940 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 75


 281 006a 6462     		str	r4, [r4, #36]
 282              	.LVL28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 283              		.loc 1 973 0
 284 006c 0023     		movs	r3, #0
 285 006e 06E0     		b	.L28
 286              	.LVL29:
 287              	.L29:
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 288              		.loc 1 975 0 discriminator 3
 289 0070 03F11002 		add	r2, r3, #16
 290 0074 04EB8202 		add	r2, r4, r2, lsl #2
 291 0078 0021     		movs	r1, #0
 292 007a 5160     		str	r1, [r2, #4]
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 293              		.loc 1 973 0 discriminator 3
 294 007c 0133     		adds	r3, r3, #1
 295              	.LVL30:
 296              	.L28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 297              		.loc 1 973 0 is_stmt 0 discriminator 1
 298 007e 042B     		cmp	r3, #4
 299 0080 F6D9     		bls	.L29
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 300              		.loc 1 982 0 is_stmt 1
 301 0082 0023     		movs	r3, #0
 302              	.LVL31:
 303 0084 A365     		str	r3, [r4, #88]
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 304              		.loc 1 983 0
 305 0086 84F85C30 		strb	r3, [r4, #92]
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 306              		.loc 1 1010 0
 307 008a 4246     		mov	r2, r8
 308 008c 5146     		mov	r1, r10
 309 008e 2846     		mov	r0, r5
 310 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 311              	.LVL32:
 312 0094 2060     		str	r0, [r4]
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 313              		.loc 1 1014 0
 314 0096 06B1     		cbz	r6, .L23
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 315              		.loc 1 1018 0
 316 0098 3460     		str	r4, [r6]
 317              	.L23:
 318 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 319              		.cfi_endproc
 320              	.LFE596:
 321              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 322 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 326              		.type	prvInitialiseTaskLists, %function
 327              	prvInitialiseTaskLists:
 328              	.LFB630:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 76


3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
 329              		.loc 1 3448 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 70B5     		push	{r4, r5, r6, lr}
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 4, -16
 336              		.cfi_offset 5, -12
 337              		.cfi_offset 6, -8
 338              		.cfi_offset 14, -4
 339              	.LVL33:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 340              		.loc 1 3451 0
 341 0002 0024     		movs	r4, #0
 342 0004 07E0     		b	.L34
 343              	.LVL34:
 344              	.L35:
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 345              		.loc 1 3453 0 discriminator 3
 346 0006 04EB8402 		add	r2, r4, r4, lsl #2
 347 000a 9300     		lsls	r3, r2, #2
 348 000c 1048     		ldr	r0, .L37
 349 000e 1844     		add	r0, r0, r3
 350 0010 FFF7FEFF 		bl	vListInitialise
 351              	.LVL35:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 352              		.loc 1 3451 0 discriminator 3
 353 0014 0134     		adds	r4, r4, #1
 354              	.LVL36:
 355              	.L34:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 356              		.loc 1 3451 0 is_stmt 0 discriminator 1
 357 0016 132C     		cmp	r4, #19
 358 0018 F5D9     		bls	.L35
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 359              		.loc 1 3456 0 is_stmt 1
 360 001a 0E4C     		ldr	r4, .L37+4
 361              	.LVL37:
 362 001c 04F5E076 		add	r6, r4, #448
 363 0020 3046     		mov	r0, r6
 364 0022 FFF7FEFF 		bl	vListInitialise
 365              	.LVL38:
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 366              		.loc 1 3457 0
 367 0026 04F5EA75 		add	r5, r4, #468
 368 002a 2846     		mov	r0, r5
 369 002c FFF7FEFF 		bl	vListInitialise
 370              	.LVL39:
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371              		.loc 1 3458 0
 372 0030 04F11400 		add	r0, r4, #20
 373 0034 FFF7FEFF 		bl	vListInitialise
 374              	.LVL40:
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 375              		.loc 1 3462 0
 376 0038 04F5F470 		add	r0, r4, #488
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 77


 377 003c FFF7FEFF 		bl	vListInitialise
 378              	.LVL41:
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 379              		.loc 1 3468 0
 380 0040 2046     		mov	r0, r4
 381 0042 FFF7FEFF 		bl	vListInitialise
 382              	.LVL42:
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 383              		.loc 1 3474 0
 384 0046 A662     		str	r6, [r4, #40]
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 385              		.loc 1 3475 0
 386 0048 C4F8FC51 		str	r5, [r4, #508]
 387 004c 70BD     		pop	{r4, r5, r6, pc}
 388              	.L38:
 389 004e 00BF     		.align	2
 390              	.L37:
 391 0050 30000000 		.word	.LANCHOR0+48
 392 0054 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE630:
 395              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 396              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 397              		.align	2
 398              		.thumb
 399              		.thumb_func
 400              		.type	prvAddNewTaskToReadyList, %function
 401              	prvAddNewTaskToReadyList:
 402              	.LFB597:
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 403              		.loc 1 1028 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL43:
 408 0000 38B5     		push	{r3, r4, r5, lr}
 409              		.cfi_def_cfa_offset 16
 410              		.cfi_offset 3, -16
 411              		.cfi_offset 4, -12
 412              		.cfi_offset 5, -8
 413              		.cfi_offset 14, -4
 414 0002 0446     		mov	r4, r0
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 415              		.loc 1 1031 0
 416 0004 FFF7FEFF 		bl	vPortEnterCritical
 417              	.LVL44:
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 418              		.loc 1 1033 0
 419 0008 264B     		ldr	r3, .L45
 420 000a D3F80022 		ldr	r2, [r3, #512]
 421 000e 0132     		adds	r2, r2, #1
 422 0010 C3F80022 		str	r2, [r3, #512]
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 423              		.loc 1 1034 0
 424 0014 D3F80432 		ldr	r3, [r3, #516]
 425 0018 4BB9     		cbnz	r3, .L40
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 78


 426              		.loc 1 1038 0
 427 001a 224B     		ldr	r3, .L45
 428 001c C3F80442 		str	r4, [r3, #516]
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 429              		.loc 1 1040 0
 430 0020 D3F80032 		ldr	r3, [r3, #512]
 431 0024 012B     		cmp	r3, #1
 432 0026 10D1     		bne	.L41
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 433              		.loc 1 1045 0
 434 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 435              	.LVL45:
 436 002c 0DE0     		b	.L41
 437              	.L40:
1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 438              		.loc 1 1057 0
 439 002e 1D4B     		ldr	r3, .L45
 440 0030 D3F80832 		ldr	r3, [r3, #520]
 441 0034 4BB9     		cbnz	r3, .L41
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 442              		.loc 1 1059 0
 443 0036 1B4B     		ldr	r3, .L45
 444 0038 D3F80432 		ldr	r3, [r3, #516]
 445 003c DA6A     		ldr	r2, [r3, #44]
 446 003e E36A     		ldr	r3, [r4, #44]
 447 0040 9A42     		cmp	r2, r3
 448 0042 02D8     		bhi	.L41
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 449              		.loc 1 1061 0
 450 0044 174B     		ldr	r3, .L45
 451 0046 C3F80442 		str	r4, [r3, #516]
 452              	.L41:
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 453              		.loc 1 1074 0
 454 004a 164A     		ldr	r2, .L45
 455 004c D2F80C32 		ldr	r3, [r2, #524]
 456 0050 0133     		adds	r3, r3, #1
 457 0052 C2F80C32 		str	r3, [r2, #524]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 458              		.loc 1 1084 0
 459 0056 E36A     		ldr	r3, [r4, #44]
 460 0058 D2F81022 		ldr	r2, [r2, #528]
 461 005c 9342     		cmp	r3, r2
 462 005e 02D9     		bls	.L42
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 463              		.loc 1 1084 0 is_stmt 0 discriminator 1
 464 0060 104A     		ldr	r2, .L45
 465 0062 C2F81032 		str	r3, [r2, #528]
 466              	.L42:
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 467              		.loc 1 1084 0 discriminator 3
 468 0066 0F4D     		ldr	r5, .L45
 469 0068 05F13000 		add	r0, r5, #48
 470 006c 03EB8303 		add	r3, r3, r3, lsl #2
 471 0070 9A00     		lsls	r2, r3, #2
 472 0072 211D     		adds	r1, r4, #4
 473 0074 1044     		add	r0, r0, r2
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 79


 474 0076 FFF7FEFF 		bl	vListInsertEnd
 475              	.LVL46:
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 476              		.loc 1 1088 0 is_stmt 1 discriminator 3
 477 007a FFF7FEFF 		bl	vPortExitCritical
 478              	.LVL47:
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 479              		.loc 1 1090 0 discriminator 3
 480 007e D5F80832 		ldr	r3, [r5, #520]
 481 0082 6BB1     		cbz	r3, .L39
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 482              		.loc 1 1094 0
 483 0084 D5F80432 		ldr	r3, [r5, #516]
 484 0088 DA6A     		ldr	r2, [r3, #44]
 485 008a E36A     		ldr	r3, [r4, #44]
 486 008c 9A42     		cmp	r2, r3
 487 008e 07D2     		bcs	.L39
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 488              		.loc 1 1096 0
 489 0090 4FF08052 		mov	r2, #268435456
 490 0094 044B     		ldr	r3, .L45+4
 491 0096 1A60     		str	r2, [r3]
 492              		.syntax unified
 493              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 494 0098 BFF34F8F 		dsb
 495              	@ 0 "" 2
 496              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 497 009c BFF36F8F 		isb
 498              	@ 0 "" 2
 499              		.thumb
 500              		.syntax unified
 501              	.L39:
 502 00a0 38BD     		pop	{r3, r4, r5, pc}
 503              	.LVL48:
 504              	.L46:
 505 00a2 00BF     		.align	2
 506              	.L45:
 507 00a4 00000000 		.word	.LANCHOR0
 508 00a8 04ED00E0 		.word	-536810236
 509              		.cfi_endproc
 510              	.LFE597:
 511              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 512              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 513              		.align	2
 514              		.thumb
 515              		.thumb_func
 516              		.type	prvCheckTasksWaitingTermination, %function
 517              	prvCheckTasksWaitingTermination:
 518              	.LFB631:
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 519              		.loc 1 3480 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523 0000 38B5     		push	{r3, r4, r5, lr}
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 3, -16
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 80


 526              		.cfi_offset 4, -12
 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 529              	.LBB96:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 530              		.loc 1 3490 0
 531 0002 17E0     		b	.L48
 532              	.L49:
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 533              		.loc 1 3492 0
 534 0004 FFF7FEFF 		bl	vPortEnterCritical
 535              	.LVL49:
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 536              		.loc 1 3494 0
 537 0008 0D4C     		ldr	r4, .L51
 538 000a D4F8F431 		ldr	r3, [r4, #500]
 539 000e DD68     		ldr	r5, [r3, #12]
 540              	.LVL50:
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 541              		.loc 1 3495 0
 542 0010 281D     		adds	r0, r5, #4
 543 0012 FFF7FEFF 		bl	uxListRemove
 544              	.LVL51:
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 545              		.loc 1 3496 0
 546 0016 D4F80032 		ldr	r3, [r4, #512]
 547 001a 013B     		subs	r3, r3, #1
 548 001c C4F80032 		str	r3, [r4, #512]
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 549              		.loc 1 3497 0
 550 0020 D4F81432 		ldr	r3, [r4, #532]
 551 0024 013B     		subs	r3, r3, #1
 552 0026 C4F81432 		str	r3, [r4, #532]
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 553              		.loc 1 3499 0
 554 002a FFF7FEFF 		bl	vPortExitCritical
 555              	.LVL52:
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 556              		.loc 1 3501 0
 557 002e 2846     		mov	r0, r5
 558 0030 FFF7FEFF 		bl	prvDeleteTCB
 559              	.LVL53:
 560              	.L48:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 561              		.loc 1 3490 0
 562 0034 024B     		ldr	r3, .L51
 563 0036 D3F81432 		ldr	r3, [r3, #532]
 564 003a 002B     		cmp	r3, #0
 565 003c E2D1     		bne	.L49
 566              	.LBE96:
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 567              		.loc 1 3505 0
 568 003e 38BD     		pop	{r3, r4, r5, pc}
 569              	.L52:
 570              		.align	2
 571              	.L51:
 572 0040 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 81


 573              		.cfi_endproc
 574              	.LFE631:
 575              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 576              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 577              		.align	2
 578              		.thumb
 579              		.thumb_func
 580              		.type	prvAddCurrentTaskToDelayedList, %function
 581              	prvAddCurrentTaskToDelayedList:
 582              	.LFB643:
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		individual execution thread. */
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 82


3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not being used for anything else. */
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to be moved into a new list. */
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Just inherit the priority. */
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Inheritance occurred. */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 83


3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex.
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					not been the case. */
3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			be the running state task. */
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task? */
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 84


3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the holding task from the ready list. */
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new	ready list. */
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					running to give back the mutex. */
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This is only actually required in the corner case whereby
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					in an order different to that in which they were taken.
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a task is waiting on it or not. */
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 85


3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			one mutex. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holding task's base priority and the priority of the highest
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Does the priority need to change? */
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task has timed out because it already holds the
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					its own priority. */
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority to facilitate determining the subject task's
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					being used for anything else. */
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 86


4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					then the task that holds the mutex could be in either the
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					from its current state list if it is in the Ready state as
4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the task's priority is going to change and there is one
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready list per priority. */
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskEnterCritical( void )
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 87


4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			critical section. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskExitCritical( void )
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portENABLE_INTERRUPTS();
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	size_t x;
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Start by copying the entire string. */
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 88


4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		printed out. */
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Terminate. */
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return the new end of string. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return &( pcBuffer[ x ] );
4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cStatus;
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays task names, states and stack usage.
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * snprintf() implementation!).
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskList().
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 89


4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										to prevent static checking errors. */
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										cStatus = 0x00;
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				can be printed in tabular form more easily. */
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the rest of the string. */
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 90


4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * in both absolute and percentage terms.
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a full snprintf() implementation!).
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 91


4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* For percentage calculations. */
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulTotalTime /= 100UL;
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Avoid divide by zero errors. */
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulTotalTime > 0 )
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Write the task name to the string, padding with
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					easily. */
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 92


4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queues and semaphores. */
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxReturn;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxCurrentTCB;
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 93


4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulReturn != 0UL )
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ulReturn;
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 94


4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				clear the value to zero. */
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				have changed. */
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			unblocked because of a timeout. */
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 95


4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was not received. */
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was already pending or a notification was
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				received while the task was waiting. */
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 96


4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction:
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY();
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					because it will automatically get reset to a new value when
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					earliest possible time. */
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 97


4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 98


4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction :
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 99


4777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 100


4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			semaphore. */
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 101


4891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
4896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		its notification state cleared. */
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
4908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
4912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 583              		.loc 1 4924 0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              	.LVL54:
 588 0000 70B5     		push	{r4, r5, r6, lr}
 589              		.cfi_def_cfa_offset 16
 590              		.cfi_offset 4, -16
 591              		.cfi_offset 5, -12
 592              		.cfi_offset 6, -8
 593              		.cfi_offset 14, -4
 594 0002 0446     		mov	r4, r0
 595 0004 0E46     		mov	r6, r1
4925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTimeToWake;
4926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 596              		.loc 1 4926 0
 597 0006 174B     		ldr	r3, .L58
 598 0008 D3F81852 		ldr	r5, [r3, #536]
 599              	.LVL55:
4927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 102


4931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		when the task leaves the Blocked state. */
4933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
4936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	as the same list item is used for both lists. */
4939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 600              		.loc 1 4939 0
 601 000c D3F80402 		ldr	r0, [r3, #516]
 602              	.LVL56:
 603 0010 0430     		adds	r0, r0, #4
 604 0012 FFF7FEFF 		bl	uxListRemove
 605              	.LVL57:
4940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
4946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 606              		.loc 1 4952 0
 607 0016 B4F1FF3F 		cmp	r4, #-1
 608 001a 07D1     		bne	.L54
 609              		.loc 1 4952 0 is_stmt 0 discriminator 1
 610 001c 36B1     		cbz	r6, .L54
4953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			indefinitely. */
4957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 611              		.loc 1 4957 0 is_stmt 1
 612 001e 1148     		ldr	r0, .L58
 613 0020 D0F80412 		ldr	r1, [r0, #516]
 614 0024 0431     		adds	r1, r1, #4
 615 0026 FFF7FEFF 		bl	vListInsertEnd
 616              	.LVL58:
 617 002a 70BD     		pop	{r4, r5, r6, pc}
 618              	.LVL59:
 619              	.L54:
4958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			kernel will manage it correctly. */
4964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 620              		.loc 1 4964 0
 621 002c 2C44     		add	r4, r4, r5
 622              	.LVL60:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 103


4965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 623              		.loc 1 4967 0
 624 002e 0D4B     		ldr	r3, .L58
 625 0030 D3F80432 		ldr	r3, [r3, #516]
 626 0034 5C60     		str	r4, [r3, #4]
4968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 627              		.loc 1 4969 0
 628 0036 A542     		cmp	r5, r4
 629 0038 08D9     		bls	.L56
4970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list. */
4973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 630              		.loc 1 4973 0
 631 003a 0A4B     		ldr	r3, .L58
 632 003c D3F8FC01 		ldr	r0, [r3, #508]
 633 0040 D3F80412 		ldr	r1, [r3, #516]
 634 0044 0431     		adds	r1, r1, #4
 635 0046 FFF7FEFF 		bl	vListInsert
 636              	.LVL61:
 637 004a 70BD     		pop	{r4, r5, r6, pc}
 638              	.LVL62:
 639              	.L56:
4974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
4979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 640              		.loc 1 4979 0
 641 004c 054D     		ldr	r5, .L58
 642              	.LVL63:
 643 004e A86A     		ldr	r0, [r5, #40]
 644 0050 D5F80412 		ldr	r1, [r5, #516]
 645 0054 0431     		adds	r1, r1, #4
 646 0056 FFF7FEFF 		bl	vListInsert
 647              	.LVL64:
4980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				needs to be updated too. */
4984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 648              		.loc 1 4984 0
 649 005a EB6A     		ldr	r3, [r5, #44]
 650 005c 9C42     		cmp	r4, r3
 651 005e 00D2     		bcs	.L53
4985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 652              		.loc 1 4986 0
 653 0060 EC62     		str	r4, [r5, #44]
 654              	.L53:
 655 0062 70BD     		pop	{r4, r5, r6, pc}
 656              	.LVL65:
 657              	.L59:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 104


 658              		.align	2
 659              	.L58:
 660 0064 00000000 		.word	.LANCHOR0
 661              		.cfi_endproc
 662              	.LFE643:
 663              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 664              		.section	.text.prvIdleTask,"ax",%progbits
 665              		.align	2
 666              		.thumb
 667              		.thumb_func
 668              		.type	prvIdleTask, %function
 669              	prvIdleTask:
 670              	.LFB627:
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
 671              		.loc 1 3236 0
 672              		.cfi_startproc
 673              		@ Volatile: function does not return.
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              	.LVL66:
 677 0000 08B5     		push	{r3, lr}
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 3, -8
 680              		.cfi_offset 14, -4
 681              	.LVL67:
 682              	.L62:
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683              		.loc 1 3252 0
 684 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 685              	.LVL68:
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 686              		.loc 1 3275 0
 687 0006 074B     		ldr	r3, .L64
 688 0008 1B6B     		ldr	r3, [r3, #48]
 689 000a 012B     		cmp	r3, #1
 690 000c 07D9     		bls	.L61
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 691              		.loc 1 3277 0
 692 000e 4FF08052 		mov	r2, #268435456
 693 0012 054B     		ldr	r3, .L64+4
 694 0014 1A60     		str	r2, [r3]
 695              		.syntax unified
 696              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 697 0016 BFF34F8F 		dsb
 698              	@ 0 "" 2
 699              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 700 001a BFF36F8F 		isb
 701              	@ 0 "" 2
 702              		.thumb
 703              		.syntax unified
 704              	.L61:
 705              	.LBB97:
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 706              		.loc 1 3295 0
 707 001e FFF7FEFF 		bl	vApplicationIdleHook
 708              	.LVL69:
 709              	.LBE97:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 105


3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 710              		.loc 1 3348 0
 711 0022 EEE7     		b	.L62
 712              	.L65:
 713              		.align	2
 714              	.L64:
 715 0024 00000000 		.word	.LANCHOR0
 716 0028 04ED00E0 		.word	-536810236
 717              		.cfi_endproc
 718              	.LFE627:
 719              		.size	prvIdleTask, .-prvIdleTask
 720              		.section	.text.xTaskCreate,"ax",%progbits
 721              		.align	2
 722              		.global	xTaskCreate
 723              		.thumb
 724              		.thumb_func
 725              		.type	xTaskCreate, %function
 726              	xTaskCreate:
 727              	.LFB595:
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 728              		.loc 1 738 0
 729              		.cfi_startproc
 730              		@ args = 8, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              	.LVL70:
 733 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 734              		.cfi_def_cfa_offset 28
 735              		.cfi_offset 4, -28
 736              		.cfi_offset 5, -24
 737              		.cfi_offset 6, -20
 738              		.cfi_offset 7, -16
 739              		.cfi_offset 8, -12
 740              		.cfi_offset 9, -8
 741              		.cfi_offset 14, -4
 742 0004 85B0     		sub	sp, sp, #20
 743              		.cfi_def_cfa_offset 48
 744 0006 0646     		mov	r6, r0
 745 0008 0F46     		mov	r7, r1
 746 000a 1546     		mov	r5, r2
 747 000c 9846     		mov	r8, r3
 748              	.LBB98:
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 749              		.loc 1 772 0
 750 000e 9000     		lsls	r0, r2, #2
 751              	.LVL71:
 752 0010 FFF7FEFF 		bl	pvPortMalloc
 753              	.LVL72:
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754              		.loc 1 774 0
 755 0014 60B1     		cbz	r0, .L70
 756 0016 8146     		mov	r9, r0
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 757              		.loc 1 777 0
 758 0018 6020     		movs	r0, #96
 759              	.LVL73:
 760 001a FFF7FEFF 		bl	pvPortMalloc
 761              	.LVL74:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 106


 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 762              		.loc 1 779 0
 763 001e 0446     		mov	r4, r0
 764 0020 10B1     		cbz	r0, .L68
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765              		.loc 1 782 0
 766 0022 C0F83090 		str	r9, [r0, #48]
 767 0026 04E0     		b	.L67
 768              	.L68:
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 769              		.loc 1 788 0
 770 0028 4846     		mov	r0, r9
 771              	.LVL75:
 772 002a FFF7FEFF 		bl	vPortFree
 773              	.LVL76:
 774 002e 00E0     		b	.L67
 775              	.LVL77:
 776              	.L70:
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 777              		.loc 1 793 0
 778 0030 0024     		movs	r4, #0
 779              	.LVL78:
 780              	.L67:
 781              	.LBE98:
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 782              		.loc 1 798 0
 783 0032 8CB1     		cbz	r4, .L71
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 784              		.loc 1 808 0
 785 0034 0023     		movs	r3, #0
 786 0036 0393     		str	r3, [sp, #12]
 787 0038 0294     		str	r4, [sp, #8]
 788 003a 0D9B     		ldr	r3, [sp, #52]
 789 003c 0193     		str	r3, [sp, #4]
 790 003e 0C9B     		ldr	r3, [sp, #48]
 791 0040 0093     		str	r3, [sp]
 792 0042 4346     		mov	r3, r8
 793 0044 2A46     		mov	r2, r5
 794 0046 3946     		mov	r1, r7
 795 0048 3046     		mov	r0, r6
 796 004a FFF7FEFF 		bl	prvInitialiseNewTask
 797              	.LVL79:
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 798              		.loc 1 809 0
 799 004e 2046     		mov	r0, r4
 800 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 801              	.LVL80:
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 802              		.loc 1 810 0
 803 0054 0120     		movs	r0, #1
 804 0056 01E0     		b	.L69
 805              	.LVL81:
 806              	.L71:
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 807              		.loc 1 814 0
 808 0058 4FF0FF30 		mov	r0, #-1
 809              	.L69:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 107


 810              	.LVL82:
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 811              		.loc 1 818 0
 812 005c 05B0     		add	sp, sp, #20
 813              		.cfi_def_cfa_offset 28
 814              		@ sp needed
 815 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 816              		.cfi_endproc
 817              	.LFE595:
 818              		.size	xTaskCreate, .-xTaskCreate
 819 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 820              		.align	2
 821              		.global	vTaskDelete
 822              		.thumb
 823              		.thumb_func
 824              		.type	vTaskDelete, %function
 825              	vTaskDelete:
 826              	.LFB598:
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 827              		.loc 1 1113 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              	.LVL83:
 832 0000 70B5     		push	{r4, r5, r6, lr}
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 4, -16
 835              		.cfi_offset 5, -12
 836              		.cfi_offset 6, -8
 837              		.cfi_offset 14, -4
 838 0002 0446     		mov	r4, r0
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 839              		.loc 1 1116 0
 840 0004 FFF7FEFF 		bl	vPortEnterCritical
 841              	.LVL84:
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 842              		.loc 1 1120 0
 843 0008 14B9     		cbnz	r4, .L74
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 844              		.loc 1 1120 0 is_stmt 0 discriminator 1
 845 000a 274B     		ldr	r3, .L82
 846 000c D3F80442 		ldr	r4, [r3, #516]
 847              	.LVL85:
 848              	.L74:
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 849              		.loc 1 1123 0 is_stmt 1 discriminator 4
 850 0010 261D     		adds	r6, r4, #4
 851 0012 3046     		mov	r0, r6
 852 0014 FFF7FEFF 		bl	uxListRemove
 853              	.LVL86:
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 854              		.loc 1 1133 0 discriminator 4
 855 0018 A36A     		ldr	r3, [r4, #40]
 856 001a 1BB1     		cbz	r3, .L75
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 857              		.loc 1 1135 0
 858 001c 04F11800 		add	r0, r4, #24
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 108


 859 0020 FFF7FEFF 		bl	uxListRemove
 860              	.LVL87:
 861              	.L75:
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 862              		.loc 1 1146 0
 863 0024 204B     		ldr	r3, .L82
 864 0026 D3F80C22 		ldr	r2, [r3, #524]
 865 002a 0132     		adds	r2, r2, #1
 866 002c C3F80C22 		str	r2, [r3, #524]
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 867              		.loc 1 1148 0
 868 0030 D3F80432 		ldr	r3, [r3, #516]
 869 0034 9C42     		cmp	r4, r3
 870 0036 0BD1     		bne	.L76
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 871              		.loc 1 1155 0
 872 0038 1B4D     		ldr	r5, .L82
 873 003a 3146     		mov	r1, r6
 874 003c 05F5F470 		add	r0, r5, #488
 875 0040 FFF7FEFF 		bl	vListInsertEnd
 876              	.LVL88:
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 877              		.loc 1 1160 0
 878 0044 D5F81432 		ldr	r3, [r5, #532]
 879 0048 0133     		adds	r3, r3, #1
 880 004a C5F81432 		str	r3, [r5, #532]
 881 004e 0AE0     		b	.L77
 882              	.L76:
1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 883              		.loc 1 1171 0
 884 0050 154A     		ldr	r2, .L82
 885 0052 D2F80032 		ldr	r3, [r2, #512]
 886 0056 013B     		subs	r3, r3, #1
 887 0058 C2F80032 		str	r3, [r2, #512]
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 888              		.loc 1 1172 0
 889 005c 2046     		mov	r0, r4
 890 005e FFF7FEFF 		bl	prvDeleteTCB
 891              	.LVL89:
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 892              		.loc 1 1176 0
 893 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 894              	.LVL90:
 895              	.L77:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 896              		.loc 1 1181 0
 897 0066 FFF7FEFF 		bl	vPortExitCritical
 898              	.LVL91:
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 899              		.loc 1 1185 0
 900 006a 0F4B     		ldr	r3, .L82
 901 006c D3F80832 		ldr	r3, [r3, #520]
 902 0070 CBB1     		cbz	r3, .L73
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 903              		.loc 1 1187 0
 904 0072 0D4B     		ldr	r3, .L82
 905 0074 D3F80432 		ldr	r3, [r3, #516]
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 109


 906 0078 9C42     		cmp	r4, r3
 907 007a 14D1     		bne	.L73
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 908              		.loc 1 1189 0
 909 007c 0A4B     		ldr	r3, .L82
 910 007e D3F81C32 		ldr	r3, [r3, #540]
 911 0082 43B1     		cbz	r3, .L79
 912              	.LBB99:
 913              	.LBB100:
 914              		.loc 2 156 0
 915              		.syntax unified
 916              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 917 0084 4FF02F03 			mov r3, #47												
 918 0088 83F31188 		msr basepri, r3											
 919 008c BFF36F8F 		isb														
 920 0090 BFF34F8F 		dsb														
 921              	
 922              	@ 0 "" 2
 923              	.LVL92:
 924              		.thumb
 925              		.syntax unified
 926              	.L80:
 927 0094 FEE7     		b	.L80
 928              	.L79:
 929              	.LBE100:
 930              	.LBE99:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 931              		.loc 1 1190 0
 932 0096 4FF08052 		mov	r2, #268435456
 933 009a 044B     		ldr	r3, .L82+4
 934 009c 1A60     		str	r2, [r3]
 935              		.syntax unified
 936              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 937 009e BFF34F8F 		dsb
 938              	@ 0 "" 2
 939              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 940 00a2 BFF36F8F 		isb
 941              	@ 0 "" 2
 942              		.thumb
 943              		.syntax unified
 944              	.L73:
 945 00a6 70BD     		pop	{r4, r5, r6, pc}
 946              	.LVL93:
 947              	.L83:
 948              		.align	2
 949              	.L82:
 950 00a8 00000000 		.word	.LANCHOR0
 951 00ac 04ED00E0 		.word	-536810236
 952              		.cfi_endproc
 953              	.LFE598:
 954              		.size	vTaskDelete, .-vTaskDelete
 955              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 956              		.align	2
 957              		.global	uxTaskPriorityGet
 958              		.thumb
 959              		.thumb_func
 960              		.type	uxTaskPriorityGet, %function
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 110


 961              	uxTaskPriorityGet:
 962              	.LFB601:
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 963              		.loc 1 1405 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              	.LVL94:
 968 0000 10B5     		push	{r4, lr}
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 4, -8
 971              		.cfi_offset 14, -4
 972 0002 0446     		mov	r4, r0
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 973              		.loc 1 1409 0
 974 0004 FFF7FEFF 		bl	vPortEnterCritical
 975              	.LVL95:
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 976              		.loc 1 1413 0
 977 0008 14B9     		cbnz	r4, .L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 978              		.loc 1 1413 0 is_stmt 0 discriminator 1
 979 000a 044B     		ldr	r3, .L87
 980 000c D3F80442 		ldr	r4, [r3, #516]
 981              	.LVL96:
 982              	.L85:
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 983              		.loc 1 1414 0 is_stmt 1 discriminator 4
 984 0010 E46A     		ldr	r4, [r4, #44]
 985              	.LVL97:
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 986              		.loc 1 1416 0 discriminator 4
 987 0012 FFF7FEFF 		bl	vPortExitCritical
 988              	.LVL98:
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 989              		.loc 1 1419 0 discriminator 4
 990 0016 2046     		mov	r0, r4
 991 0018 10BD     		pop	{r4, pc}
 992              	.LVL99:
 993              	.L88:
 994 001a 00BF     		.align	2
 995              	.L87:
 996 001c 00000000 		.word	.LANCHOR0
 997              		.cfi_endproc
 998              	.LFE601:
 999              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 1000              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1001              		.align	2
 1002              		.global	uxTaskPriorityGetFromISR
 1003              		.thumb
 1004              		.thumb_func
 1005              		.type	uxTaskPriorityGetFromISR, %function
 1006              	uxTaskPriorityGetFromISR:
 1007              	.LFB602:
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1008              		.loc 1 1427 0
 1009              		.cfi_startproc
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 111


 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              	.LVL100:
 1013 0000 10B5     		push	{r4, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 4, -8
 1016              		.cfi_offset 14, -4
 1017 0002 0446     		mov	r4, r0
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1018              		.loc 1 1447 0
 1019 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1020              	.LVL101:
 1021              	.LBB101:
 1022              	.LBB102:
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1023              		.loc 2 172 0
 1024              		.syntax unified
 1025              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1026 0008 EFF31183 			mrs r3, basepri											
 1027 000c 4FF02F02 		mov r2, #47												
 1028 0010 82F31188 		msr basepri, r2											
 1029 0014 BFF36F8F 		isb														
 1030 0018 BFF34F8F 		dsb														
 1031              	
 1032              	@ 0 "" 2
 1033              		.thumb
 1034              		.syntax unified
 1035              	.LBE102:
 1036              	.LBE101:
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1037              		.loc 1 1453 0
 1038 001c 14B9     		cbnz	r4, .L90
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1039              		.loc 1 1453 0 is_stmt 0 discriminator 1
 1040 001e 034A     		ldr	r2, .L92
 1041 0020 D2F80442 		ldr	r4, [r2, #516]
 1042              	.LVL102:
 1043              	.L90:
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1044              		.loc 1 1454 0 is_stmt 1 discriminator 4
 1045 0024 E06A     		ldr	r0, [r4, #44]
 1046              	.LVL103:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 112


 1047              	.LBB103:
 1048              	.LBB104:
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	warnings. */
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1049              		.loc 2 190 0 discriminator 4
 1050              		.syntax unified
 1051              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1052 0026 83F31188 			msr basepri, r3	
 1053              	@ 0 "" 2
 1054              	.LVL104:
 1055              		.thumb
 1056              		.syntax unified
 1057              	.LBE104:
 1058              	.LBE103:
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1059              		.loc 1 1459 0 discriminator 4
 1060 002a 10BD     		pop	{r4, pc}
 1061              	.LVL105:
 1062              	.L93:
 1063              		.align	2
 1064              	.L92:
 1065 002c 00000000 		.word	.LANCHOR0
 1066              		.cfi_endproc
 1067              	.LFE602:
 1068              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1069              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1070              		.align	2
 1071              		.global	vTaskPrioritySet
 1072              		.thumb
 1073              		.thumb_func
 1074              		.type	vTaskPrioritySet, %function
 1075              	vTaskPrioritySet:
 1076              	.LFB603:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1077              		.loc 1 1467 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              	.LVL106:
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1082              		.loc 1 1472 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 113


 1083 0000 1329     		cmp	r1, #19
 1084 0002 08D9     		bls	.L95
 1085              	.LBB105:
 1086              	.LBB106:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1087              		.loc 2 156 0
 1088              		.syntax unified
 1089              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1090 0004 4FF02F03 			mov r3, #47												
 1091 0008 83F31188 		msr basepri, r3											
 1092 000c BFF36F8F 		isb														
 1093 0010 BFF34F8F 		dsb														
 1094              	
 1095              	@ 0 "" 2
 1096              	.LVL107:
 1097              		.thumb
 1098              		.syntax unified
 1099              	.L96:
 1100 0014 FEE7     		b	.L96
 1101              	.L95:
 1102              	.LBE106:
 1103              	.LBE105:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1104              		.loc 1 1467 0
 1105 0016 70B5     		push	{r4, r5, r6, lr}
 1106              		.cfi_def_cfa_offset 16
 1107              		.cfi_offset 4, -16
 1108              		.cfi_offset 5, -12
 1109              		.cfi_offset 6, -8
 1110              		.cfi_offset 14, -4
 1111 0018 0446     		mov	r4, r0
 1112 001a 0D46     		mov	r5, r1
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1113              		.loc 1 1475 0
 1114 001c 1329     		cmp	r1, #19
 1115 001e 00D9     		bls	.L97
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1116              		.loc 1 1477 0
 1117 0020 1325     		movs	r5, #19
 1118              	.L97:
 1119              	.LVL108:
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1120              		.loc 1 1484 0
 1121 0022 FFF7FEFF 		bl	vPortEnterCritical
 1122              	.LVL109:
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1123              		.loc 1 1488 0
 1124 0026 14B9     		cbnz	r4, .L98
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1125              		.loc 1 1488 0 is_stmt 0 discriminator 1
 1126 0028 294B     		ldr	r3, .L112
 1127 002a D3F80442 		ldr	r4, [r3, #516]
 1128              	.LVL110:
 1129              	.L98:
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1130              		.loc 1 1498 0 is_stmt 1 discriminator 4
 1131 002e E36A     		ldr	r3, [r4, #44]
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 114


 1132              	.LVL111:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1133              		.loc 1 1502 0 discriminator 4
 1134 0030 9D42     		cmp	r5, r3
 1135 0032 4AD0     		beq	.L99
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1136              		.loc 1 1506 0
 1137 0034 0CD9     		bls	.L100
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1138              		.loc 1 1508 0
 1139 0036 264A     		ldr	r2, .L112
 1140 0038 D2F80422 		ldr	r2, [r2, #516]
 1141 003c 9442     		cmp	r4, r2
 1142 003e 0ED0     		beq	.L107
1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1143              		.loc 1 1513 0
 1144 0040 234A     		ldr	r2, .L112
 1145 0042 D2F80422 		ldr	r2, [r2, #516]
 1146 0046 D26A     		ldr	r2, [r2, #44]
 1147 0048 9542     		cmp	r5, r2
 1148 004a 0AD2     		bcs	.L108
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1149              		.loc 1 1470 0
 1150 004c 0026     		movs	r6, #0
 1151 004e 0BE0     		b	.L101
 1152              	.L100:
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1153              		.loc 1 1529 0
 1154 0050 1F4A     		ldr	r2, .L112
 1155 0052 D2F80422 		ldr	r2, [r2, #516]
 1156 0056 9442     		cmp	r4, r2
 1157 0058 05D0     		beq	.L109
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1158              		.loc 1 1470 0
 1159 005a 0026     		movs	r6, #0
 1160 005c 04E0     		b	.L101
 1161              	.L107:
 1162 005e 0026     		movs	r6, #0
 1163 0060 02E0     		b	.L101
 1164              	.L108:
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1165              		.loc 1 1515 0
 1166 0062 0126     		movs	r6, #1
 1167 0064 00E0     		b	.L101
 1168              	.L109:
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1169              		.loc 1 1534 0
 1170 0066 0126     		movs	r6, #1
 1171              	.L101:
 1172              	.LVL112:
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1173              		.loc 1 1566 0
 1174 0068 E562     		str	r5, [r4, #44]
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1175              		.loc 1 1572 0
 1176 006a A269     		ldr	r2, [r4, #24]
 1177 006c 002A     		cmp	r2, #0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 115


 1178 006e 02DB     		blt	.L102
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1179              		.loc 1 1574 0
 1180 0070 C5F11405 		rsb	r5, r5, #20
 1181              	.LVL113:
 1182 0074 A561     		str	r5, [r4, #24]
 1183              	.L102:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1184              		.loc 1 1585 0
 1185 0076 6169     		ldr	r1, [r4, #20]
 1186 0078 03EB8303 		add	r3, r3, r3, lsl #2
 1187              	.LVL114:
 1188 007c 9A00     		lsls	r2, r3, #2
 1189 007e 154B     		ldr	r3, .L112+4
 1190 0080 1A44     		add	r2, r2, r3
 1191 0082 9142     		cmp	r1, r2
 1192 0084 01D1     		bne	.L110
 1193 0086 0123     		movs	r3, #1
 1194 0088 00E0     		b	.L103
 1195              	.L110:
 1196 008a 0023     		movs	r3, #0
 1197              	.L103:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1198              		.loc 1 1585 0 is_stmt 0 discriminator 4
 1199 008c A3B1     		cbz	r3, .L104
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1200              		.loc 1 1590 0 is_stmt 1
 1201 008e 251D     		adds	r5, r4, #4
 1202 0090 2846     		mov	r0, r5
 1203 0092 FFF7FEFF 		bl	uxListRemove
 1204              	.LVL115:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1205              		.loc 1 1601 0
 1206 0096 E36A     		ldr	r3, [r4, #44]
 1207 0098 0D4A     		ldr	r2, .L112
 1208 009a D2F81022 		ldr	r2, [r2, #528]
 1209 009e 9342     		cmp	r3, r2
 1210 00a0 02D9     		bls	.L105
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1211              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1212 00a2 0B4A     		ldr	r2, .L112
 1213 00a4 C2F81032 		str	r3, [r2, #528]
 1214              	.L105:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1215              		.loc 1 1601 0 discriminator 3
 1216 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 1217 00ac 9A00     		lsls	r2, r3, #2
 1218 00ae 2946     		mov	r1, r5
 1219 00b0 0848     		ldr	r0, .L112+4
 1220 00b2 1044     		add	r0, r0, r2
 1221 00b4 FFF7FEFF 		bl	vListInsertEnd
 1222              	.LVL116:
 1223              	.L104:
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1224              		.loc 1 1608 0 is_stmt 1
 1225 00b8 3EB1     		cbz	r6, .L99
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 116


 1226              		.loc 1 1610 0
 1227 00ba 4FF08052 		mov	r2, #268435456
 1228 00be 064B     		ldr	r3, .L112+8
 1229 00c0 1A60     		str	r2, [r3]
 1230              		.syntax unified
 1231              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1232 00c2 BFF34F8F 		dsb
 1233              	@ 0 "" 2
 1234              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1235 00c6 BFF36F8F 		isb
 1236              	@ 0 "" 2
 1237              	.LVL117:
 1238              		.thumb
 1239              		.syntax unified
 1240              	.L99:
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1241              		.loc 1 1622 0
 1242 00ca FFF7FEFF 		bl	vPortExitCritical
 1243              	.LVL118:
 1244 00ce 70BD     		pop	{r4, r5, r6, pc}
 1245              	.LVL119:
 1246              	.L113:
 1247              		.align	2
 1248              	.L112:
 1249 00d0 00000000 		.word	.LANCHOR0
 1250 00d4 30000000 		.word	.LANCHOR0+48
 1251 00d8 04ED00E0 		.word	-536810236
 1252              		.cfi_endproc
 1253              	.LFE603:
 1254              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1255              		.section	.text.vTaskResume,"ax",%progbits
 1256              		.align	2
 1257              		.global	vTaskResume
 1258              		.thumb
 1259              		.thumb_func
 1260              		.type	vTaskResume, %function
 1261              	vTaskResume:
 1262              	.LFB606:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1263              		.loc 1 1778 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              	.LVL120:
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1268              		.loc 1 1782 0
 1269 0000 40B9     		cbnz	r0, .L115
 1270              	.LBB107:
 1271              	.LBB108:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1272              		.loc 2 156 0
 1273              		.syntax unified
 1274              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1275 0002 4FF02F03 			mov r3, #47												
 1276 0006 83F31188 		msr basepri, r3											
 1277 000a BFF36F8F 		isb														
 1278 000e BFF34F8F 		dsb														
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 117


 1279              	
 1280              	@ 0 "" 2
 1281              	.LVL121:
 1282              		.thumb
 1283              		.syntax unified
 1284              	.L116:
 1285 0012 FEE7     		b	.L116
 1286              	.L115:
 1287              	.LBE108:
 1288              	.LBE107:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1289              		.loc 1 1778 0
 1290 0014 70B5     		push	{r4, r5, r6, lr}
 1291              		.cfi_def_cfa_offset 16
 1292              		.cfi_offset 4, -16
 1293              		.cfi_offset 5, -12
 1294              		.cfi_offset 6, -8
 1295              		.cfi_offset 14, -4
 1296 0016 0446     		mov	r4, r0
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1297              		.loc 1 1786 0
 1298 0018 88B3     		cbz	r0, .L114
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1299              		.loc 1 1786 0 is_stmt 0 discriminator 1
 1300 001a 194B     		ldr	r3, .L121
 1301 001c D3F80432 		ldr	r3, [r3, #516]
 1302 0020 9842     		cmp	r0, r3
 1303 0022 2CD0     		beq	.L114
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1304              		.loc 1 1788 0 is_stmt 1
 1305 0024 FFF7FEFF 		bl	vPortEnterCritical
 1306              	.LVL122:
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1307              		.loc 1 1790 0
 1308 0028 2046     		mov	r0, r4
 1309 002a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1310              	.LVL123:
 1311 002e 20B3     		cbz	r0, .L118
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1312              		.loc 1 1796 0
 1313 0030 261D     		adds	r6, r4, #4
 1314 0032 3046     		mov	r0, r6
 1315 0034 FFF7FEFF 		bl	uxListRemove
 1316              	.LVL124:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1317              		.loc 1 1797 0
 1318 0038 E36A     		ldr	r3, [r4, #44]
 1319 003a 114A     		ldr	r2, .L121
 1320 003c D2F81022 		ldr	r2, [r2, #528]
 1321 0040 9342     		cmp	r3, r2
 1322 0042 02D9     		bls	.L119
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1323              		.loc 1 1797 0 is_stmt 0 discriminator 1
 1324 0044 0E4A     		ldr	r2, .L121
 1325 0046 C2F81032 		str	r3, [r2, #528]
 1326              	.L119:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 118


 1327              		.loc 1 1797 0 discriminator 3
 1328 004a 0D4D     		ldr	r5, .L121
 1329 004c 05F13000 		add	r0, r5, #48
 1330 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1331 0054 9A00     		lsls	r2, r3, #2
 1332 0056 3146     		mov	r1, r6
 1333 0058 1044     		add	r0, r0, r2
 1334 005a FFF7FEFF 		bl	vListInsertEnd
 1335              	.LVL125:
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1336              		.loc 1 1800 0 is_stmt 1 discriminator 3
 1337 005e E26A     		ldr	r2, [r4, #44]
 1338 0060 D5F80432 		ldr	r3, [r5, #516]
 1339 0064 DB6A     		ldr	r3, [r3, #44]
 1340 0066 9A42     		cmp	r2, r3
 1341 0068 07D3     		bcc	.L118
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1342              		.loc 1 1805 0
 1343 006a 4FF08052 		mov	r2, #268435456
 1344 006e 054B     		ldr	r3, .L121+4
 1345 0070 1A60     		str	r2, [r3]
 1346              		.syntax unified
 1347              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1348 0072 BFF34F8F 		dsb
 1349              	@ 0 "" 2
 1350              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1351 0076 BFF36F8F 		isb
 1352              	@ 0 "" 2
 1353              		.thumb
 1354              		.syntax unified
 1355              	.L118:
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1356              		.loc 1 1817 0
 1357 007a FFF7FEFF 		bl	vPortExitCritical
 1358              	.LVL126:
 1359              	.L114:
 1360 007e 70BD     		pop	{r4, r5, r6, pc}
 1361              	.LVL127:
 1362              	.L122:
 1363              		.align	2
 1364              	.L121:
 1365 0080 00000000 		.word	.LANCHOR0
 1366 0084 04ED00E0 		.word	-536810236
 1367              		.cfi_endproc
 1368              	.LFE606:
 1369              		.size	vTaskResume, .-vTaskResume
 1370              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1371              		.align	2
 1372              		.global	xTaskResumeFromISR
 1373              		.thumb
 1374              		.thumb_func
 1375              		.type	xTaskResumeFromISR, %function
 1376              	xTaskResumeFromISR:
 1377              	.LFB607:
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1378              		.loc 1 1832 0
 1379              		.cfi_startproc
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 119


 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
 1382              	.LVL128:
 1383 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1384              		.cfi_def_cfa_offset 24
 1385              		.cfi_offset 3, -24
 1386              		.cfi_offset 4, -20
 1387              		.cfi_offset 5, -16
 1388              		.cfi_offset 6, -12
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391              	.LVL129:
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1392              		.loc 1 1837 0
 1393 0002 40B9     		cbnz	r0, .L124
 1394              	.LBB109:
 1395              	.LBB110:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1396              		.loc 2 156 0
 1397              		.syntax unified
 1398              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1399 0004 4FF02F03 			mov r3, #47												
 1400 0008 83F31188 		msr basepri, r3											
 1401 000c BFF36F8F 		isb														
 1402 0010 BFF34F8F 		dsb														
 1403              	
 1404              	@ 0 "" 2
 1405              	.LVL130:
 1406              		.thumb
 1407              		.syntax unified
 1408              	.L125:
 1409 0014 FEE7     		b	.L125
 1410              	.L124:
 1411 0016 0446     		mov	r4, r0
 1412              	.LBE110:
 1413              	.LBE109:
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1414              		.loc 1 1855 0
 1415 0018 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1416              	.LVL131:
 1417              	.LBB111:
 1418              	.LBB112:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1419              		.loc 2 172 0
 1420              		.syntax unified
 1421              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1422 001c EFF31187 			mrs r7, basepri											
 1423 0020 4FF02F03 		mov r3, #47												
 1424 0024 83F31188 		msr basepri, r3											
 1425 0028 BFF36F8F 		isb														
 1426 002c BFF34F8F 		dsb														
 1427              	
 1428              	@ 0 "" 2
 1429              		.thumb
 1430              		.syntax unified
 1431              	.LBE112:
 1432              	.LBE111:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 120


1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1433              		.loc 1 1859 0
 1434 0030 2046     		mov	r0, r4
 1435 0032 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1436              	.LVL132:
 1437 0036 50B3     		cbz	r0, .L130
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1438              		.loc 1 1864 0
 1439 0038 174B     		ldr	r3, .L133
 1440 003a D3F81C32 		ldr	r3, [r3, #540]
 1441 003e FBB9     		cbnz	r3, .L127
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1442              		.loc 1 1868 0
 1443 0040 E26A     		ldr	r2, [r4, #44]
 1444 0042 154B     		ldr	r3, .L133
 1445 0044 D3F80432 		ldr	r3, [r3, #516]
 1446 0048 DB6A     		ldr	r3, [r3, #44]
 1447 004a 9A42     		cmp	r2, r3
 1448 004c 01D2     		bcs	.L131
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1449              		.loc 1 1833 0
 1450 004e 0025     		movs	r5, #0
 1451 0050 00E0     		b	.L128
 1452              	.L131:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1453              		.loc 1 1870 0
 1454 0052 0125     		movs	r5, #1
 1455              	.L128:
 1456              	.LVL133:
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1457              		.loc 1 1877 0
 1458 0054 261D     		adds	r6, r4, #4
 1459 0056 3046     		mov	r0, r6
 1460 0058 FFF7FEFF 		bl	uxListRemove
 1461              	.LVL134:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1462              		.loc 1 1878 0
 1463 005c E36A     		ldr	r3, [r4, #44]
 1464 005e 0E4A     		ldr	r2, .L133
 1465 0060 D2F81022 		ldr	r2, [r2, #528]
 1466 0064 9342     		cmp	r3, r2
 1467 0066 02D9     		bls	.L129
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1468              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1469 0068 0B4A     		ldr	r2, .L133
 1470 006a C2F81032 		str	r3, [r2, #528]
 1471              	.L129:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1472              		.loc 1 1878 0 discriminator 3
 1473 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1474 0072 9A00     		lsls	r2, r3, #2
 1475 0074 3146     		mov	r1, r6
 1476 0076 0948     		ldr	r0, .L133+4
 1477 0078 1044     		add	r0, r0, r2
 1478 007a FFF7FEFF 		bl	vListInsertEnd
 1479              	.LVL135:
 1480 007e 07E0     		b	.L126
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 121


 1481              	.LVL136:
 1482              	.L127:
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1483              		.loc 1 1885 0 is_stmt 1
 1484 0080 04F11801 		add	r1, r4, #24
 1485 0084 0648     		ldr	r0, .L133+8
 1486 0086 FFF7FEFF 		bl	vListInsertEnd
 1487              	.LVL137:
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1488              		.loc 1 1833 0
 1489 008a 0025     		movs	r5, #0
 1490 008c 00E0     		b	.L126
 1491              	.L130:
 1492 008e 0025     		movs	r5, #0
 1493              	.LVL138:
 1494              	.L126:
 1495              	.LBB113:
 1496              	.LBB114:
 1497              		.loc 2 190 0
 1498              		.syntax unified
 1499              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1500 0090 87F31188 			msr basepri, r7	
 1501              	@ 0 "" 2
 1502              	.LVL139:
 1503              		.thumb
 1504              		.syntax unified
 1505              	.LBE114:
 1506              	.LBE113:
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1507              		.loc 1 1896 0
 1508 0094 2846     		mov	r0, r5
 1509 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1510              	.LVL140:
 1511              	.L134:
 1512              		.align	2
 1513              	.L133:
 1514 0098 00000000 		.word	.LANCHOR0
 1515 009c 30000000 		.word	.LANCHOR0+48
 1516 00a0 14000000 		.word	.LANCHOR0+20
 1517              		.cfi_endproc
 1518              	.LFE607:
 1519              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1520              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1521              		.align	2
 1522              		.global	vTaskStartScheduler
 1523              		.thumb
 1524              		.thumb_func
 1525              		.type	vTaskStartScheduler, %function
 1526              	vTaskStartScheduler:
 1527              	.LFB608:
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 1528              		.loc 1 1902 0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 0
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 1532 0000 00B5     		push	{lr}
 1533              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 122


 1534              		.cfi_offset 14, -4
 1535 0002 83B0     		sub	sp, sp, #12
 1536              		.cfi_def_cfa_offset 16
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
 1537              		.loc 1 1935 0
 1538 0004 194B     		ldr	r3, .L141
 1539 0006 0193     		str	r3, [sp, #4]
 1540 0008 0023     		movs	r3, #0
 1541 000a 0093     		str	r3, [sp]
 1542 000c 8022     		movs	r2, #128
 1543 000e 1849     		ldr	r1, .L141+4
 1544 0010 1848     		ldr	r0, .L141+8
 1545 0012 FFF7FEFF 		bl	xTaskCreate
 1546              	.LVL141:
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1547              		.loc 1 1946 0
 1548 0016 0128     		cmp	r0, #1
 1549 0018 01D1     		bne	.L136
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1550              		.loc 1 1948 0
 1551 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1552              	.LVL142:
 1553              	.L136:
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1554              		.loc 1 1957 0
 1555 001e 0128     		cmp	r0, #1
 1556 0020 14D1     		bne	.L137
 1557              	.LBB115:
 1558              	.LBB116:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1559              		.loc 2 156 0
 1560              		.syntax unified
 1561              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1562 0022 4FF02F03 			mov r3, #47												
 1563 0026 83F31188 		msr basepri, r3											
 1564 002a BFF36F8F 		isb														
 1565 002e BFF34F8F 		dsb														
 1566              	
 1567              	@ 0 "" 2
 1568              		.thumb
 1569              		.syntax unified
 1570              	.LBE116:
 1571              	.LBE115:
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1572              		.loc 1 1983 0
 1573 0032 114B     		ldr	r3, .L141+12
 1574 0034 4FF0FF32 		mov	r2, #-1
 1575 0038 DA62     		str	r2, [r3, #44]
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1576              		.loc 1 1984 0
 1577 003a 0122     		movs	r2, #1
 1578 003c C3F80822 		str	r2, [r3, #520]
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1579              		.loc 1 1985 0
 1580 0040 0022     		movs	r2, #0
 1581 0042 C3F81822 		str	r2, [r3, #536]
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 123


 1582              		.loc 1 1997 0
 1583 0046 FFF7FEFF 		bl	xPortStartScheduler
 1584              	.LVL143:
 1585 004a 0BE0     		b	.L135
 1586              	.LVL144:
 1587              	.L137:
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1588              		.loc 1 2012 0
 1589 004c B0F1FF3F 		cmp	r0, #-1
 1590 0050 08D1     		bne	.L135
 1591              	.LBB117:
 1592              	.LBB118:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1593              		.loc 2 156 0
 1594              		.syntax unified
 1595              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1596 0052 4FF02F03 			mov r3, #47												
 1597 0056 83F31188 		msr basepri, r3											
 1598 005a BFF36F8F 		isb														
 1599 005e BFF34F8F 		dsb														
 1600              	
 1601              	@ 0 "" 2
 1602              	.LVL145:
 1603              		.thumb
 1604              		.syntax unified
 1605              	.L139:
 1606 0062 FEE7     		b	.L139
 1607              	.LVL146:
 1608              	.L135:
 1609              	.LBE118:
 1610              	.LBE117:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1611              		.loc 1 2018 0
 1612 0064 03B0     		add	sp, sp, #12
 1613              		.cfi_def_cfa_offset 4
 1614              		@ sp needed
 1615 0066 5DF804FB 		ldr	pc, [sp], #4
 1616              	.L142:
 1617 006a 00BF     		.align	2
 1618              	.L141:
 1619 006c 20020000 		.word	.LANCHOR0+544
 1620 0070 00000000 		.word	.LC0
 1621 0074 00000000 		.word	prvIdleTask
 1622 0078 00000000 		.word	.LANCHOR0
 1623              		.cfi_endproc
 1624              	.LFE608:
 1625              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1626              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1627              		.align	2
 1628              		.global	vTaskEndScheduler
 1629              		.thumb
 1630              		.thumb_func
 1631              		.type	vTaskEndScheduler, %function
 1632              	vTaskEndScheduler:
 1633              	.LFB609:
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1634              		.loc 1 2022 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 124


 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 0
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638 0000 08B5     		push	{r3, lr}
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 3, -8
 1641              		.cfi_offset 14, -4
 1642              	.LBB119:
 1643              	.LBB120:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1644              		.loc 2 156 0
 1645              		.syntax unified
 1646              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1647 0002 4FF02F03 			mov r3, #47												
 1648 0006 83F31188 		msr basepri, r3											
 1649 000a BFF36F8F 		isb														
 1650 000e BFF34F8F 		dsb														
 1651              	
 1652              	@ 0 "" 2
 1653              		.thumb
 1654              		.syntax unified
 1655              	.LBE120:
 1656              	.LBE119:
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
 1657              		.loc 1 2027 0
 1658 0012 0022     		movs	r2, #0
 1659 0014 024B     		ldr	r3, .L145
 1660 0016 C3F80822 		str	r2, [r3, #520]
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1661              		.loc 1 2028 0
 1662 001a FFF7FEFF 		bl	vPortEndScheduler
 1663              	.LVL147:
 1664 001e 08BD     		pop	{r3, pc}
 1665              	.L146:
 1666              		.align	2
 1667              	.L145:
 1668 0020 00000000 		.word	.LANCHOR0
 1669              		.cfi_endproc
 1670              	.LFE609:
 1671              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1672              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1673              		.align	2
 1674              		.global	vTaskSuspendAll
 1675              		.thumb
 1676              		.thumb_func
 1677              		.type	vTaskSuspendAll, %function
 1678              	vTaskSuspendAll:
 1679              	.LFB610:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1680              		.loc 1 2033 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1685              		.loc 1 2038 0
 1686 0000 034A     		ldr	r2, .L148
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 125


 1687 0002 D2F81C32 		ldr	r3, [r2, #540]
 1688 0006 0133     		adds	r3, r3, #1
 1689 0008 C2F81C32 		str	r3, [r2, #540]
 1690 000c 7047     		bx	lr
 1691              	.L149:
 1692 000e 00BF     		.align	2
 1693              	.L148:
 1694 0010 00000000 		.word	.LANCHOR0
 1695              		.cfi_endproc
 1696              	.LFE610:
 1697              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1698              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1699              		.align	2
 1700              		.global	xTaskGetTickCount
 1701              		.thumb
 1702              		.thumb_func
 1703              		.type	xTaskGetTickCount, %function
 1704              	xTaskGetTickCount:
 1705              	.LFB612:
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
 1706              		.loc 1 2216 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710              		@ link register save eliminated.
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1711              		.loc 1 2222 0
 1712 0000 014B     		ldr	r3, .L151
 1713 0002 D3F81802 		ldr	r0, [r3, #536]
 1714              	.LVL148:
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1715              		.loc 1 2227 0
 1716 0006 7047     		bx	lr
 1717              	.L152:
 1718              		.align	2
 1719              	.L151:
 1720 0008 00000000 		.word	.LANCHOR0
 1721              		.cfi_endproc
 1722              	.LFE612:
 1723              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1724              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1725              		.align	2
 1726              		.global	xTaskGetTickCountFromISR
 1727              		.thumb
 1728              		.thumb_func
 1729              		.type	xTaskGetTickCountFromISR, %function
 1730              	xTaskGetTickCountFromISR:
 1731              	.LFB613:
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
 1732              		.loc 1 2231 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 0
 1735              		@ frame_needed = 0, uses_anonymous_args = 0
 1736 0000 08B5     		push	{r3, lr}
 1737              		.cfi_def_cfa_offset 8
 1738              		.cfi_offset 3, -8
 1739              		.cfi_offset 14, -4
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 126


2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1740              		.loc 1 2249 0
 1741 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1742              	.LVL149:
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1743              		.loc 1 2253 0
 1744 0006 024B     		ldr	r3, .L155
 1745 0008 D3F81802 		ldr	r0, [r3, #536]
 1746              	.LVL150:
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1747              		.loc 1 2258 0
 1748 000c 08BD     		pop	{r3, pc}
 1749              	.L156:
 1750 000e 00BF     		.align	2
 1751              	.L155:
 1752 0010 00000000 		.word	.LANCHOR0
 1753              		.cfi_endproc
 1754              	.LFE613:
 1755              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1756              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1757              		.align	2
 1758              		.global	uxTaskGetNumberOfTasks
 1759              		.thumb
 1760              		.thumb_func
 1761              		.type	uxTaskGetNumberOfTasks, %function
 1762              	uxTaskGetNumberOfTasks:
 1763              	.LFB614:
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1764              		.loc 1 2262 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1769              		.loc 1 2265 0
 1770 0000 014B     		ldr	r3, .L158
 1771 0002 D3F80002 		ldr	r0, [r3, #512]
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1772              		.loc 1 2266 0
 1773 0006 7047     		bx	lr
 1774              	.L159:
 1775              		.align	2
 1776              	.L158:
 1777 0008 00000000 		.word	.LANCHOR0
 1778              		.cfi_endproc
 1779              	.LFE614:
 1780              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1781              		.section	.text.pcTaskGetName,"ax",%progbits
 1782              		.align	2
 1783              		.global	pcTaskGetName
 1784              		.thumb
 1785              		.thumb_func
 1786              		.type	pcTaskGetName, %function
 1787              	pcTaskGetName:
 1788              	.LFB615:
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
 1789              		.loc 1 2270 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 127


 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 0
 1792              		@ frame_needed = 0, uses_anonymous_args = 0
 1793              		@ link register save eliminated.
 1794              	.LVL151:
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1795              		.loc 1 2275 0
 1796 0000 0346     		mov	r3, r0
 1797 0002 10B9     		cbnz	r0, .L161
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1798              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1799 0004 074B     		ldr	r3, .L164
 1800 0006 D3F80432 		ldr	r3, [r3, #516]
 1801              	.LVL152:
 1802              	.L161:
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1803              		.loc 1 2276 0 is_stmt 1 discriminator 4
 1804 000a 43B9     		cbnz	r3, .L162
 1805              	.LBB121:
 1806              	.LBB122:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1807              		.loc 2 156 0
 1808              		.syntax unified
 1809              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1810 000c 4FF02F03 			mov r3, #47												
 1811 0010 83F31188 		msr basepri, r3											
 1812 0014 BFF36F8F 		isb														
 1813 0018 BFF34F8F 		dsb														
 1814              	
 1815              	@ 0 "" 2
 1816              	.LVL153:
 1817              		.thumb
 1818              		.syntax unified
 1819              	.L163:
 1820 001c FEE7     		b	.L163
 1821              	.LVL154:
 1822              	.L162:
 1823              	.LBE122:
 1824              	.LBE121:
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1825              		.loc 1 2278 0
 1826 001e 03F13400 		add	r0, r3, #52
 1827 0022 7047     		bx	lr
 1828              	.L165:
 1829              		.align	2
 1830              	.L164:
 1831 0024 00000000 		.word	.LANCHOR0
 1832              		.cfi_endproc
 1833              	.LFE615:
 1834              		.size	pcTaskGetName, .-pcTaskGetName
 1835              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1836              		.align	2
 1837              		.global	xTaskIncrementTick
 1838              		.thumb
 1839              		.thumb_func
 1840              		.type	xTaskIncrementTick, %function
 1841              	xTaskIncrementTick:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 128


 1842              	.LFB616:
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
 1843              		.loc 1 2590 0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1848              		.cfi_def_cfa_offset 24
 1849              		.cfi_offset 4, -24
 1850              		.cfi_offset 5, -20
 1851              		.cfi_offset 6, -16
 1852              		.cfi_offset 7, -12
 1853              		.cfi_offset 8, -8
 1854              		.cfi_offset 14, -4
 1855              	.LVL155:
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1856              		.loc 1 2599 0
 1857 0004 3C4B     		ldr	r3, .L186
 1858 0006 D3F81C32 		ldr	r3, [r3, #540]
 1859 000a 002B     		cmp	r3, #0
 1860 000c 65D1     		bne	.L167
 1861              	.LBB123:
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1862              		.loc 1 2603 0
 1863 000e 3A4B     		ldr	r3, .L186
 1864 0010 D3F81842 		ldr	r4, [r3, #536]
 1865 0014 0134     		adds	r4, r4, #1
 1866              	.LVL156:
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1867              		.loc 1 2607 0
 1868 0016 C3F81842 		str	r4, [r3, #536]
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1869              		.loc 1 2609 0
 1870 001a CCB9     		cbnz	r4, .L168
 1871              	.LBB124:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1872              		.loc 1 2611 0
 1873 001c 9B6A     		ldr	r3, [r3, #40]
 1874 001e 1B68     		ldr	r3, [r3]
 1875 0020 43B1     		cbz	r3, .L169
 1876              	.LBB125:
 1877              	.LBB126:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1878              		.loc 2 156 0
 1879              		.syntax unified
 1880              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1881 0022 4FF02F03 			mov r3, #47												
 1882 0026 83F31188 		msr basepri, r3											
 1883 002a BFF36F8F 		isb														
 1884 002e BFF34F8F 		dsb														
 1885              	
 1886              	@ 0 "" 2
 1887              	.LVL157:
 1888              		.thumb
 1889              		.syntax unified
 1890              	.L170:
 1891 0032 FEE7     		b	.L170
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 129


 1892              	.L169:
 1893              	.LBE126:
 1894              	.LBE125:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1895              		.loc 1 2611 0 discriminator 2
 1896 0034 304B     		ldr	r3, .L186
 1897 0036 9A6A     		ldr	r2, [r3, #40]
 1898              	.LVL158:
 1899 0038 D3F8FC11 		ldr	r1, [r3, #508]
 1900 003c 9962     		str	r1, [r3, #40]
 1901 003e C3F8FC21 		str	r2, [r3, #508]
 1902 0042 D3F82422 		ldr	r2, [r3, #548]
 1903              	.LVL159:
 1904 0046 0132     		adds	r2, r2, #1
 1905 0048 C3F82422 		str	r2, [r3, #548]
 1906              	.LVL160:
 1907 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1908              	.LVL161:
 1909              	.L168:
 1910              	.LBE124:
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1911              		.loc 1 2622 0
 1912 0050 294B     		ldr	r3, .L186
 1913 0052 DB6A     		ldr	r3, [r3, #44]
 1914 0054 9C42     		cmp	r4, r3
 1915 0056 03D2     		bcs	.L181
 1916              	.LBE123:
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1917              		.loc 1 2593 0
 1918 0058 0026     		movs	r6, #0
 1919 005a 45E0     		b	.L172
 1920              	.LVL162:
 1921              	.L183:
 1922              	.LBB127:
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1923              		.loc 1 2688 0
 1924 005c 0126     		movs	r6, #1
 1925              	.LVL163:
 1926 005e 00E0     		b	.L171
 1927              	.LVL164:
 1928              	.L181:
 1929 0060 0026     		movs	r6, #0
 1930              	.LVL165:
 1931              	.L171:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1932              		.loc 1 2626 0
 1933 0062 254B     		ldr	r3, .L186
 1934 0064 9B6A     		ldr	r3, [r3, #40]
 1935 0066 1B68     		ldr	r3, [r3]
 1936 0068 0BB9     		cbnz	r3, .L182
 1937 006a 0123     		movs	r3, #1
 1938 006c 00E0     		b	.L173
 1939              	.L182:
 1940 006e 0023     		movs	r3, #0
 1941              	.L173:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1942              		.loc 1 2626 0 is_stmt 0 discriminator 4
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 130


 1943 0070 23B1     		cbz	r3, .L174
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 1944              		.loc 1 2633 0 is_stmt 1
 1945 0072 4FF0FF32 		mov	r2, #-1
 1946 0076 204B     		ldr	r3, .L186
 1947 0078 DA62     		str	r2, [r3, #44]
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1948              		.loc 1 2634 0
 1949 007a 35E0     		b	.L172
 1950              	.L174:
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1951              		.loc 1 2642 0
 1952 007c 1E4B     		ldr	r3, .L186
 1953 007e 9B6A     		ldr	r3, [r3, #40]
 1954 0080 DB68     		ldr	r3, [r3, #12]
 1955 0082 DD68     		ldr	r5, [r3, #12]
 1956              	.LVL166:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1957              		.loc 1 2643 0
 1958 0084 6B68     		ldr	r3, [r5, #4]
 1959              	.LVL167:
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1960              		.loc 1 2645 0
 1961 0086 9C42     		cmp	r4, r3
 1962 0088 02D2     		bcs	.L175
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
 1963              		.loc 1 2652 0
 1964 008a 1B4A     		ldr	r2, .L186
 1965 008c D362     		str	r3, [r2, #44]
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1966              		.loc 1 2653 0
 1967 008e 2BE0     		b	.L172
 1968              	.L175:
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1969              		.loc 1 2661 0
 1970 0090 05F10408 		add	r8, r5, #4
 1971 0094 4046     		mov	r0, r8
 1972 0096 FFF7FEFF 		bl	uxListRemove
 1973              	.LVL168:
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1974              		.loc 1 2665 0
 1975 009a AB6A     		ldr	r3, [r5, #40]
 1976 009c 1BB1     		cbz	r3, .L176
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1977              		.loc 1 2667 0
 1978 009e 05F11800 		add	r0, r5, #24
 1979 00a2 FFF7FEFF 		bl	uxListRemove
 1980              	.LVL169:
 1981              	.L176:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1982              		.loc 1 2676 0
 1983 00a6 EB6A     		ldr	r3, [r5, #44]
 1984 00a8 134A     		ldr	r2, .L186
 1985 00aa D2F81022 		ldr	r2, [r2, #528]
 1986 00ae 9342     		cmp	r3, r2
 1987 00b0 02D9     		bls	.L177
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 131


 1988              		.loc 1 2676 0 is_stmt 0 discriminator 1
 1989 00b2 114A     		ldr	r2, .L186
 1990 00b4 C2F81032 		str	r3, [r2, #528]
 1991              	.L177:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1992              		.loc 1 2676 0 discriminator 3
 1993 00b8 0F4F     		ldr	r7, .L186
 1994 00ba 07F13000 		add	r0, r7, #48
 1995 00be 03EB8303 		add	r3, r3, r3, lsl #2
 1996 00c2 9A00     		lsls	r2, r3, #2
 1997 00c4 4146     		mov	r1, r8
 1998 00c6 1044     		add	r0, r0, r2
 1999 00c8 FFF7FEFF 		bl	vListInsertEnd
 2000              	.LVL170:
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 2001              		.loc 1 2686 0 is_stmt 1 discriminator 3
 2002 00cc EA6A     		ldr	r2, [r5, #44]
 2003 00ce D7F80432 		ldr	r3, [r7, #516]
 2004 00d2 DB6A     		ldr	r3, [r3, #44]
 2005 00d4 9A42     		cmp	r2, r3
 2006 00d6 C1D2     		bcs	.L183
 2007 00d8 C3E7     		b	.L171
 2008              	.LVL171:
 2009              	.L167:
 2010              	.LBE127:
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2011              		.loc 1 2733 0
 2012 00da 074A     		ldr	r2, .L186
 2013 00dc D2F82832 		ldr	r3, [r2, #552]
 2014 00e0 0133     		adds	r3, r3, #1
 2015 00e2 C2F82832 		str	r3, [r2, #552]
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2016              		.loc 1 2593 0
 2017 00e6 0026     		movs	r6, #0
 2018              	.LVL172:
 2019              	.L172:
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2020              		.loc 1 2746 0
 2021 00e8 034B     		ldr	r3, .L186
 2022 00ea D3F82C32 		ldr	r3, [r3, #556]
 2023 00ee 03B1     		cbz	r3, .L180
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2024              		.loc 1 2748 0
 2025 00f0 0126     		movs	r6, #1
 2026              	.LVL173:
 2027              	.L180:
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2028              		.loc 1 2758 0
 2029 00f2 3046     		mov	r0, r6
 2030 00f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2031              	.LVL174:
 2032              	.L187:
 2033              		.align	2
 2034              	.L186:
 2035 00f8 00000000 		.word	.LANCHOR0
 2036              		.cfi_endproc
 2037              	.LFE616:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 132


 2038              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 2039              		.section	.text.xTaskResumeAll,"ax",%progbits
 2040              		.align	2
 2041              		.global	xTaskResumeAll
 2042              		.thumb
 2043              		.thumb_func
 2044              		.type	xTaskResumeAll, %function
 2045              	xTaskResumeAll:
 2046              	.LFB611:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2047              		.loc 1 2106 0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051              	.LVL175:
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2052              		.loc 1 2112 0
 2053 0000 394B     		ldr	r3, .L204
 2054 0002 D3F81C32 		ldr	r3, [r3, #540]
 2055 0006 43B9     		cbnz	r3, .L189
 2056              	.LBB128:
 2057              	.LBB129:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2058              		.loc 2 156 0
 2059              		.syntax unified
 2060              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2061 0008 4FF02F03 			mov r3, #47												
 2062 000c 83F31188 		msr basepri, r3											
 2063 0010 BFF36F8F 		isb														
 2064 0014 BFF34F8F 		dsb														
 2065              	
 2066              	@ 0 "" 2
 2067              	.LVL176:
 2068              		.thumb
 2069              		.syntax unified
 2070              	.L190:
 2071 0018 FEE7     		b	.L190
 2072              	.L189:
 2073              	.LBE129:
 2074              	.LBE128:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2075              		.loc 1 2106 0
 2076 001a 70B5     		push	{r4, r5, r6, lr}
 2077              		.cfi_def_cfa_offset 16
 2078              		.cfi_offset 4, -16
 2079              		.cfi_offset 5, -12
 2080              		.cfi_offset 6, -8
 2081              		.cfi_offset 14, -4
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2082              		.loc 1 2119 0
 2083 001c FFF7FEFF 		bl	vPortEnterCritical
 2084              	.LVL177:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2085              		.loc 1 2121 0
 2086 0020 314B     		ldr	r3, .L204
 2087 0022 D3F81C22 		ldr	r2, [r3, #540]
 2088 0026 013A     		subs	r2, r2, #1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 133


 2089 0028 C3F81C22 		str	r2, [r3, #540]
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2090              		.loc 1 2123 0
 2091 002c D3F81C32 		ldr	r3, [r3, #540]
 2092 0030 002B     		cmp	r3, #0
 2093 0032 52D1     		bne	.L200
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2094              		.loc 1 2125 0
 2095 0034 2C4B     		ldr	r3, .L204
 2096 0036 D3F80032 		ldr	r3, [r3, #512]
 2097 003a 3BBB     		cbnz	r3, .L201
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2098              		.loc 1 2108 0
 2099 003c 0024     		movs	r4, #0
 2100 003e 4FE0     		b	.L191
 2101              	.LVL178:
 2102              	.L195:
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2103              		.loc 1 2131 0
 2104 0040 294D     		ldr	r5, .L204
 2105 0042 2B6A     		ldr	r3, [r5, #32]
 2106 0044 DC68     		ldr	r4, [r3, #12]
 2107              	.LVL179:
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2108              		.loc 1 2132 0
 2109 0046 04F11800 		add	r0, r4, #24
 2110 004a FFF7FEFF 		bl	uxListRemove
 2111              	.LVL180:
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2112              		.loc 1 2133 0
 2113 004e 261D     		adds	r6, r4, #4
 2114 0050 3046     		mov	r0, r6
 2115 0052 FFF7FEFF 		bl	uxListRemove
 2116              	.LVL181:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2117              		.loc 1 2134 0
 2118 0056 E36A     		ldr	r3, [r4, #44]
 2119 0058 D5F81022 		ldr	r2, [r5, #528]
 2120 005c 9342     		cmp	r3, r2
 2121 005e 01D9     		bls	.L193
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2122              		.loc 1 2134 0 is_stmt 0 discriminator 1
 2123 0060 C5F81032 		str	r3, [r5, #528]
 2124              	.L193:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2125              		.loc 1 2134 0 discriminator 3
 2126 0064 204D     		ldr	r5, .L204
 2127 0066 05F13000 		add	r0, r5, #48
 2128 006a 03EB8303 		add	r3, r3, r3, lsl #2
 2129 006e 9A00     		lsls	r2, r3, #2
 2130 0070 3146     		mov	r1, r6
 2131 0072 1044     		add	r0, r0, r2
 2132 0074 FFF7FEFF 		bl	vListInsertEnd
 2133              	.LVL182:
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2134              		.loc 1 2138 0 is_stmt 1 discriminator 3
 2135 0078 E26A     		ldr	r2, [r4, #44]
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 134


 2136 007a D5F80432 		ldr	r3, [r5, #516]
 2137 007e DB6A     		ldr	r3, [r3, #44]
 2138 0080 9A42     		cmp	r2, r3
 2139 0082 04D3     		bcc	.L192
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2140              		.loc 1 2140 0
 2141 0084 0122     		movs	r2, #1
 2142 0086 C5F82C22 		str	r2, [r5, #556]
 2143 008a 00E0     		b	.L192
 2144              	.LVL183:
 2145              	.L201:
 2146 008c 0024     		movs	r4, #0
 2147              	.LVL184:
 2148              	.L192:
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2149              		.loc 1 2129 0
 2150 008e 164B     		ldr	r3, .L204
 2151 0090 5B69     		ldr	r3, [r3, #20]
 2152 0092 002B     		cmp	r3, #0
 2153 0094 D4D1     		bne	.L195
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2154              		.loc 1 2148 0
 2155 0096 0CB1     		cbz	r4, .L196
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2156              		.loc 1 2156 0
 2157 0098 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2158              	.LVL185:
 2159              	.L196:
 2160              	.LBB130:
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2161              		.loc 1 2164 0
 2162 009c 124B     		ldr	r3, .L204
 2163 009e D3F82842 		ldr	r4, [r3, #552]
 2164              	.LVL186:
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2165              		.loc 1 2166 0
 2166 00a2 64B1     		cbz	r4, .L197
 2167              	.L199:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
 2168              		.loc 1 2170 0
 2169 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2170              	.LVL187:
 2171 00a8 18B1     		cbz	r0, .L198
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
 2172              		.loc 1 2172 0
 2173 00aa 0122     		movs	r2, #1
 2174 00ac 0E4B     		ldr	r3, .L204
 2175 00ae C3F82C22 		str	r2, [r3, #556]
 2176              	.L198:
 2177              	.LVL188:
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2178              		.loc 1 2179 0
 2179 00b2 013C     		subs	r4, r4, #1
 2180              	.LVL189:
 2181 00b4 F6D1     		bne	.L199
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2182              		.loc 1 2181 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 135


 2183 00b6 0022     		movs	r2, #0
 2184 00b8 0B4B     		ldr	r3, .L204
 2185 00ba C3F82822 		str	r2, [r3, #552]
 2186              	.L197:
 2187              	.LBE130:
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2188              		.loc 1 2189 0
 2189 00be 0A4B     		ldr	r3, .L204
 2190 00c0 D3F82C32 		ldr	r3, [r3, #556]
 2191 00c4 5BB1     		cbz	r3, .L202
 2192              	.LVL190:
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2193              		.loc 1 2196 0
 2194 00c6 4FF08052 		mov	r2, #268435456
 2195 00ca 084B     		ldr	r3, .L204+4
 2196 00cc 1A60     		str	r2, [r3]
 2197              		.syntax unified
 2198              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2199 00ce BFF34F8F 		dsb
 2200              	@ 0 "" 2
 2201              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2202 00d2 BFF36F8F 		isb
 2203              	@ 0 "" 2
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2204              		.loc 1 2193 0
 2205              		.thumb
 2206              		.syntax unified
 2207 00d6 0124     		movs	r4, #1
 2208              	.LVL191:
 2209 00d8 02E0     		b	.L191
 2210              	.LVL192:
 2211              	.L200:
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2212              		.loc 1 2108 0
 2213 00da 0024     		movs	r4, #0
 2214 00dc 00E0     		b	.L191
 2215              	.LVL193:
 2216              	.L202:
 2217 00de 0024     		movs	r4, #0
 2218              	.LVL194:
 2219              	.L191:
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2220              		.loc 1 2209 0
 2221 00e0 FFF7FEFF 		bl	vPortExitCritical
 2222              	.LVL195:
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2223              		.loc 1 2212 0
 2224 00e4 2046     		mov	r0, r4
 2225 00e6 70BD     		pop	{r4, r5, r6, pc}
 2226              	.LVL196:
 2227              	.L205:
 2228              		.align	2
 2229              	.L204:
 2230 00e8 00000000 		.word	.LANCHOR0
 2231 00ec 04ED00E0 		.word	-536810236
 2232              		.cfi_endproc
 2233              	.LFE611:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 136


 2234              		.size	xTaskResumeAll, .-xTaskResumeAll
 2235              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2236              		.align	2
 2237              		.global	vTaskDelayUntil
 2238              		.thumb
 2239              		.thumb_func
 2240              		.type	vTaskDelayUntil, %function
 2241              	vTaskDelayUntil:
 2242              	.LFB599:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
 2243              		.loc 1 1205 0
 2244              		.cfi_startproc
 2245              		@ args = 0, pretend = 0, frame = 0
 2246              		@ frame_needed = 0, uses_anonymous_args = 0
 2247              	.LVL197:
 2248 0000 38B5     		push	{r3, r4, r5, lr}
 2249              		.cfi_def_cfa_offset 16
 2250              		.cfi_offset 3, -16
 2251              		.cfi_offset 4, -12
 2252              		.cfi_offset 5, -8
 2253              		.cfi_offset 14, -4
 2254              	.LVL198:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2255              		.loc 1 1209 0
 2256 0002 40B9     		cbnz	r0, .L207
 2257              	.LBB131:
 2258              	.LBB132:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2259              		.loc 2 156 0
 2260              		.syntax unified
 2261              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2262 0004 4FF02F03 			mov r3, #47												
 2263 0008 83F31188 		msr basepri, r3											
 2264 000c BFF36F8F 		isb														
 2265 0010 BFF34F8F 		dsb														
 2266              	
 2267              	@ 0 "" 2
 2268              	.LVL199:
 2269              		.thumb
 2270              		.syntax unified
 2271              	.L208:
 2272 0014 FEE7     		b	.L208
 2273              	.L207:
 2274 0016 0546     		mov	r5, r0
 2275              	.LBE132:
 2276              	.LBE131:
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2277              		.loc 1 1210 0
 2278 0018 41B9     		cbnz	r1, .L209
 2279              	.LBB133:
 2280              	.LBB134:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2281              		.loc 2 156 0
 2282              		.syntax unified
 2283              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2284 001a 4FF02F03 			mov r3, #47												
 2285 001e 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 137


 2286 0022 BFF36F8F 		isb														
 2287 0026 BFF34F8F 		dsb														
 2288              	
 2289              	@ 0 "" 2
 2290              	.LVL200:
 2291              		.thumb
 2292              		.syntax unified
 2293              	.L210:
 2294 002a FEE7     		b	.L210
 2295              	.L209:
 2296              	.LBE134:
 2297              	.LBE133:
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2298              		.loc 1 1211 0
 2299 002c 1D4B     		ldr	r3, .L222
 2300 002e D3F81C32 		ldr	r3, [r3, #540]
 2301 0032 43B1     		cbz	r3, .L211
 2302              	.LBB135:
 2303              	.LBB136:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2304              		.loc 2 156 0
 2305              		.syntax unified
 2306              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2307 0034 4FF02F03 			mov r3, #47												
 2308 0038 83F31188 		msr basepri, r3											
 2309 003c BFF36F8F 		isb														
 2310 0040 BFF34F8F 		dsb														
 2311              	
 2312              	@ 0 "" 2
 2313              	.LVL201:
 2314              		.thumb
 2315              		.syntax unified
 2316              	.L212:
 2317 0044 FEE7     		b	.L212
 2318              	.L211:
 2319 0046 0C46     		mov	r4, r1
 2320              	.LBE136:
 2321              	.LBE135:
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2322              		.loc 1 1213 0
 2323 0048 FFF7FEFF 		bl	vTaskSuspendAll
 2324              	.LVL202:
 2325              	.LBB137:
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2326              		.loc 1 1217 0
 2327 004c 154B     		ldr	r3, .L222
 2328 004e D3F81802 		ldr	r0, [r3, #536]
 2329              	.LVL203:
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2330              		.loc 1 1220 0
 2331 0052 2A68     		ldr	r2, [r5]
 2332 0054 A318     		adds	r3, r4, r2
 2333              	.LVL204:
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2334              		.loc 1 1222 0
 2335 0056 9042     		cmp	r0, r2
 2336 0058 05D2     		bcs	.L213
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 138


1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2337              		.loc 1 1229 0
 2338 005a 9A42     		cmp	r2, r3
 2339 005c 09D9     		bls	.L217
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2340              		.loc 1 1229 0 is_stmt 0 discriminator 1
 2341 005e 9842     		cmp	r0, r3
 2342 0060 09D3     		bcc	.L218
 2343              	.LBE137:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2344              		.loc 1 1207 0 is_stmt 1
 2345 0062 0022     		movs	r2, #0
 2346 0064 0CE0     		b	.L214
 2347              	.L213:
 2348              	.LBB138:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2349              		.loc 1 1243 0
 2350 0066 9A42     		cmp	r2, r3
 2351 0068 07D8     		bhi	.L219
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2352              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2353 006a 9842     		cmp	r0, r3
 2354 006c 07D3     		bcc	.L220
 2355              	.LBE138:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2356              		.loc 1 1207 0 is_stmt 1
 2357 006e 0022     		movs	r2, #0
 2358 0070 06E0     		b	.L214
 2359              	.L217:
 2360 0072 0022     		movs	r2, #0
 2361 0074 04E0     		b	.L214
 2362              	.L218:
 2363              	.LBB139:
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2364              		.loc 1 1231 0
 2365 0076 0122     		movs	r2, #1
 2366 0078 02E0     		b	.L214
 2367              	.L219:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2368              		.loc 1 1245 0
 2369 007a 0122     		movs	r2, #1
 2370 007c 00E0     		b	.L214
 2371              	.L220:
 2372 007e 0122     		movs	r2, #1
 2373              	.L214:
 2374              	.LVL205:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2375              		.loc 1 1254 0
 2376 0080 2B60     		str	r3, [r5]
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2377              		.loc 1 1256 0
 2378 0082 1AB1     		cbz	r2, .L215
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2379              		.loc 1 1262 0
 2380 0084 0021     		movs	r1, #0
 2381 0086 181A     		subs	r0, r3, r0
 2382              	.LVL206:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 139


 2383 0088 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2384              	.LVL207:
 2385              	.L215:
 2386              	.LBE139:
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2387              		.loc 1 1269 0
 2388 008c FFF7FEFF 		bl	xTaskResumeAll
 2389              	.LVL208:
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2390              		.loc 1 1273 0
 2391 0090 38B9     		cbnz	r0, .L206
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2392              		.loc 1 1275 0
 2393 0092 4FF08052 		mov	r2, #268435456
 2394 0096 044B     		ldr	r3, .L222+4
 2395 0098 1A60     		str	r2, [r3]
 2396              		.syntax unified
 2397              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2398 009a BFF34F8F 		dsb
 2399              	@ 0 "" 2
 2400              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2401 009e BFF36F8F 		isb
 2402              	@ 0 "" 2
 2403              		.thumb
 2404              		.syntax unified
 2405              	.L206:
 2406 00a2 38BD     		pop	{r3, r4, r5, pc}
 2407              	.LVL209:
 2408              	.L223:
 2409              		.align	2
 2410              	.L222:
 2411 00a4 00000000 		.word	.LANCHOR0
 2412 00a8 04ED00E0 		.word	-536810236
 2413              		.cfi_endproc
 2414              	.LFE599:
 2415              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2416              		.section	.text.vTaskDelay,"ax",%progbits
 2417              		.align	2
 2418              		.global	vTaskDelay
 2419              		.thumb
 2420              		.thumb_func
 2421              		.type	vTaskDelay, %function
 2422              	vTaskDelay:
 2423              	.LFB600:
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2424              		.loc 1 1289 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 0
 2427              		@ frame_needed = 0, uses_anonymous_args = 0
 2428              	.LVL210:
 2429 0000 10B5     		push	{r4, lr}
 2430              		.cfi_def_cfa_offset 8
 2431              		.cfi_offset 4, -8
 2432              		.cfi_offset 14, -4
 2433              	.LVL211:
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2434              		.loc 1 1293 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 140


 2435 0002 B0B1     		cbz	r0, .L229
 2436 0004 0446     		mov	r4, r0
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
 2437              		.loc 1 1295 0
 2438 0006 104B     		ldr	r3, .L231
 2439 0008 D3F81C32 		ldr	r3, [r3, #540]
 2440 000c 43B1     		cbz	r3, .L226
 2441              	.LBB140:
 2442              	.LBB141:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2443              		.loc 2 156 0
 2444              		.syntax unified
 2445              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2446 000e 4FF02F03 			mov r3, #47												
 2447 0012 83F31188 		msr basepri, r3											
 2448 0016 BFF36F8F 		isb														
 2449 001a BFF34F8F 		dsb														
 2450              	
 2451              	@ 0 "" 2
 2452              	.LVL212:
 2453              		.thumb
 2454              		.syntax unified
 2455              	.L227:
 2456 001e FEE7     		b	.L227
 2457              	.L226:
 2458              	.LBE141:
 2459              	.LBE140:
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2460              		.loc 1 1296 0
 2461 0020 FFF7FEFF 		bl	vTaskSuspendAll
 2462              	.LVL213:
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2463              		.loc 1 1307 0
 2464 0024 0021     		movs	r1, #0
 2465 0026 2046     		mov	r0, r4
 2466 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2467              	.LVL214:
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2468              		.loc 1 1309 0
 2469 002c FFF7FEFF 		bl	xTaskResumeAll
 2470              	.LVL215:
 2471 0030 00E0     		b	.L225
 2472              	.LVL216:
 2473              	.L229:
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2474              		.loc 1 1290 0
 2475 0032 0020     		movs	r0, #0
 2476              	.LVL217:
 2477              	.L225:
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2478              		.loc 1 1318 0
 2479 0034 38B9     		cbnz	r0, .L224
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2480              		.loc 1 1320 0
 2481 0036 4FF08052 		mov	r2, #268435456
 2482 003a 044B     		ldr	r3, .L231+4
 2483 003c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 141


 2484              		.syntax unified
 2485              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2486 003e BFF34F8F 		dsb
 2487              	@ 0 "" 2
 2488              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2489 0042 BFF36F8F 		isb
 2490              	@ 0 "" 2
 2491              		.thumb
 2492              		.syntax unified
 2493              	.L224:
 2494 0046 10BD     		pop	{r4, pc}
 2495              	.L232:
 2496              		.align	2
 2497              	.L231:
 2498 0048 00000000 		.word	.LANCHOR0
 2499 004c 04ED00E0 		.word	-536810236
 2500              		.cfi_endproc
 2501              	.LFE600:
 2502              		.size	vTaskDelay, .-vTaskDelay
 2503              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2504              		.align	2
 2505              		.global	vTaskSwitchContext
 2506              		.thumb
 2507              		.thumb_func
 2508              		.type	vTaskSwitchContext, %function
 2509              	vTaskSwitchContext:
 2510              	.LFB617:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2511              		.loc 1 2852 0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2515              		.loc 1 2853 0
 2516 0000 304B     		ldr	r3, .L244
 2517 0002 D3F81C32 		ldr	r3, [r3, #540]
 2518 0006 23B1     		cbz	r3, .L234
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 2519              		.loc 1 2857 0
 2520 0008 0122     		movs	r2, #1
 2521 000a 2E4B     		ldr	r3, .L244
 2522 000c C3F82C22 		str	r2, [r3, #556]
 2523 0010 7047     		bx	lr
 2524              	.L234:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2525              		.loc 1 2852 0
 2526 0012 10B5     		push	{r4, lr}
 2527              		.cfi_def_cfa_offset 8
 2528              		.cfi_offset 4, -8
 2529              		.cfi_offset 14, -4
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2530              		.loc 1 2861 0
 2531 0014 2B4B     		ldr	r3, .L244
 2532 0016 0022     		movs	r2, #0
 2533 0018 C3F82C22 		str	r2, [r3, #556]
 2534              	.LBB142:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 142


 2535              		.loc 1 2893 0
 2536 001c D3F80432 		ldr	r3, [r3, #516]
 2537 0020 1B6B     		ldr	r3, [r3, #48]
 2538              	.LVL218:
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2539              		.loc 1 2896 0
 2540 0022 1A68     		ldr	r2, [r3]
 2541 0024 B2F1A53F 		cmp	r2, #-1515870811
 2542 0028 0BD1     		bne	.L236
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2543              		.loc 1 2897 0 discriminator 1
 2544 002a 5A68     		ldr	r2, [r3, #4]
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2545              		.loc 1 2896 0 discriminator 1
 2546 002c B2F1A53F 		cmp	r2, #-1515870811
 2547 0030 07D1     		bne	.L236
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2548              		.loc 1 2898 0
 2549 0032 9A68     		ldr	r2, [r3, #8]
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2550              		.loc 1 2897 0
 2551 0034 B2F1A53F 		cmp	r2, #-1515870811
 2552 0038 03D1     		bne	.L236
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
 2553              		.loc 1 2899 0
 2554 003a DB68     		ldr	r3, [r3, #12]
 2555              	.LVL219:
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2556              		.loc 1 2898 0
 2557 003c B3F1A53F 		cmp	r3, #-1515870811
 2558 0040 07D0     		beq	.L237
 2559              	.L236:
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
 2560              		.loc 1 2901 0
 2561 0042 204B     		ldr	r3, .L244
 2562 0044 D3F80402 		ldr	r0, [r3, #516]
 2563 0048 D3F80412 		ldr	r1, [r3, #516]
 2564 004c 3431     		adds	r1, r1, #52
 2565 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2566              	.LVL220:
 2567              	.L237:
 2568              	.LBE142:
 2569              	.LBB143:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2570              		.loc 1 2907 0
 2571 0052 1C4B     		ldr	r3, .L244
 2572 0054 D3F81032 		ldr	r3, [r3, #528]
 2573              	.LVL221:
 2574 0058 0AE0     		b	.L238
 2575              	.L241:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2576              		.loc 1 2907 0 is_stmt 0 discriminator 5
 2577 005a 43B9     		cbnz	r3, .L239
 2578              	.LBB144:
 2579              	.LBB145:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2580              		.loc 2 156 0 is_stmt 1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 143


 2581              		.syntax unified
 2582              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2583 005c 4FF02F03 			mov r3, #47												
 2584 0060 83F31188 		msr basepri, r3											
 2585 0064 BFF36F8F 		isb														
 2586 0068 BFF34F8F 		dsb														
 2587              	
 2588              	@ 0 "" 2
 2589              	.LVL222:
 2590              		.thumb
 2591              		.syntax unified
 2592              	.L240:
 2593 006c FEE7     		b	.L240
 2594              	.LVL223:
 2595              	.L239:
 2596              	.LBE145:
 2597              	.LBE144:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2598              		.loc 1 2907 0 discriminator 3
 2599 006e 013B     		subs	r3, r3, #1
 2600              	.LVL224:
 2601              	.L238:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2602              		.loc 1 2907 0 is_stmt 0 discriminator 4
 2603 0070 03EB8301 		add	r1, r3, r3, lsl #2
 2604 0074 8A00     		lsls	r2, r1, #2
 2605 0076 1349     		ldr	r1, .L244
 2606 0078 0A44     		add	r2, r2, r1
 2607 007a 126B     		ldr	r2, [r2, #48]
 2608 007c 002A     		cmp	r2, #0
 2609 007e ECD0     		beq	.L241
 2610              	.LVL225:
 2611              	.LBB146:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2612              		.loc 1 2907 0 discriminator 6
 2613 0080 0846     		mov	r0, r1
 2614 0082 9900     		lsls	r1, r3, #2
 2615 0084 CC18     		adds	r4, r1, r3
 2616 0086 A200     		lsls	r2, r4, #2
 2617 0088 0244     		add	r2, r2, r0
 2618 008a 546B     		ldr	r4, [r2, #52]
 2619 008c 6468     		ldr	r4, [r4, #4]
 2620 008e 5463     		str	r4, [r2, #52]
 2621 0090 3030     		adds	r0, r0, #48
 2622 0092 1944     		add	r1, r1, r3
 2623 0094 8A00     		lsls	r2, r1, #2
 2624 0096 0832     		adds	r2, r2, #8
 2625 0098 0244     		add	r2, r2, r0
 2626 009a 9442     		cmp	r4, r2
 2627 009c 06D1     		bne	.L242
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2628              		.loc 1 2907 0 discriminator 7
 2629 009e 6068     		ldr	r0, [r4, #4]
 2630 00a0 03EB8301 		add	r1, r3, r3, lsl #2
 2631 00a4 8A00     		lsls	r2, r1, #2
 2632 00a6 0749     		ldr	r1, .L244
 2633 00a8 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 144


 2634 00aa 5063     		str	r0, [r2, #52]
 2635              	.L242:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2636              		.loc 1 2907 0 discriminator 9
 2637 00ac 0549     		ldr	r1, .L244
 2638 00ae 03EB8300 		add	r0, r3, r3, lsl #2
 2639 00b2 8200     		lsls	r2, r0, #2
 2640 00b4 0A44     		add	r2, r2, r1
 2641 00b6 526B     		ldr	r2, [r2, #52]
 2642 00b8 D268     		ldr	r2, [r2, #12]
 2643 00ba C1F80422 		str	r2, [r1, #516]
 2644              	.LBE146:
 2645 00be C1F81032 		str	r3, [r1, #528]
 2646 00c2 10BD     		pop	{r4, pc}
 2647              	.L245:
 2648              		.align	2
 2649              	.L244:
 2650 00c4 00000000 		.word	.LANCHOR0
 2651              	.LBE143:
 2652              		.cfi_endproc
 2653              	.LFE617:
 2654              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2655              		.section	.text.vTaskSuspend,"ax",%progbits
 2656              		.align	2
 2657              		.global	vTaskSuspend
 2658              		.thumb
 2659              		.thumb_func
 2660              		.type	vTaskSuspend, %function
 2661              	vTaskSuspend:
 2662              	.LFB604:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 2663              		.loc 1 1631 0 is_stmt 1
 2664              		.cfi_startproc
 2665              		@ args = 0, pretend = 0, frame = 0
 2666              		@ frame_needed = 0, uses_anonymous_args = 0
 2667              	.LVL226:
 2668 0000 38B5     		push	{r3, r4, r5, lr}
 2669              		.cfi_def_cfa_offset 16
 2670              		.cfi_offset 3, -16
 2671              		.cfi_offset 4, -12
 2672              		.cfi_offset 5, -8
 2673              		.cfi_offset 14, -4
 2674 0002 0446     		mov	r4, r0
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2675              		.loc 1 1634 0
 2676 0004 FFF7FEFF 		bl	vPortEnterCritical
 2677              	.LVL227:
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2678              		.loc 1 1638 0
 2679 0008 14B9     		cbnz	r4, .L247
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2680              		.loc 1 1638 0 is_stmt 0 discriminator 1
 2681 000a 294B     		ldr	r3, .L257
 2682 000c D3F80442 		ldr	r4, [r3, #516]
 2683              	.LVL228:
 2684              	.L247:
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 145


 2685              		.loc 1 1644 0 is_stmt 1 discriminator 4
 2686 0010 251D     		adds	r5, r4, #4
 2687 0012 2846     		mov	r0, r5
 2688 0014 FFF7FEFF 		bl	uxListRemove
 2689              	.LVL229:
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2690              		.loc 1 1654 0 discriminator 4
 2691 0018 A36A     		ldr	r3, [r4, #40]
 2692 001a 1BB1     		cbz	r3, .L248
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2693              		.loc 1 1656 0
 2694 001c 04F11800 		add	r0, r4, #24
 2695 0020 FFF7FEFF 		bl	uxListRemove
 2696              	.LVL230:
 2697              	.L248:
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2698              		.loc 1 1663 0
 2699 0024 2946     		mov	r1, r5
 2700 0026 2248     		ldr	r0, .L257
 2701 0028 FFF7FEFF 		bl	vListInsertEnd
 2702              	.LVL231:
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2703              		.loc 1 1667 0
 2704 002c 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 2705 0030 DBB2     		uxtb	r3, r3
 2706 0032 012B     		cmp	r3, #1
 2707 0034 02D1     		bne	.L249
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2708              		.loc 1 1671 0
 2709 0036 0023     		movs	r3, #0
 2710 0038 84F85C30 		strb	r3, [r4, #92]
 2711              	.L249:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2712              		.loc 1 1676 0
 2713 003c FFF7FEFF 		bl	vPortExitCritical
 2714              	.LVL232:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2715              		.loc 1 1678 0
 2716 0040 1B4B     		ldr	r3, .L257
 2717 0042 D3F80832 		ldr	r3, [r3, #520]
 2718 0046 2BB1     		cbz	r3, .L250
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2719              		.loc 1 1682 0
 2720 0048 FFF7FEFF 		bl	vPortEnterCritical
 2721              	.LVL233:
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2722              		.loc 1 1684 0
 2723 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2724              	.LVL234:
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2725              		.loc 1 1686 0
 2726 0050 FFF7FEFF 		bl	vPortExitCritical
 2727              	.LVL235:
 2728              	.L250:
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2729              		.loc 1 1693 0
 2730 0054 164B     		ldr	r3, .L257
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 146


 2731 0056 D3F80432 		ldr	r3, [r3, #516]
 2732 005a 9C42     		cmp	r4, r3
 2733 005c 26D1     		bne	.L246
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2734              		.loc 1 1695 0
 2735 005e 144B     		ldr	r3, .L257
 2736 0060 D3F80832 		ldr	r3, [r3, #520]
 2737 0064 ABB1     		cbz	r3, .L252
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2738              		.loc 1 1698 0
 2739 0066 124B     		ldr	r3, .L257
 2740 0068 D3F81C32 		ldr	r3, [r3, #540]
 2741 006c 43B1     		cbz	r3, .L253
 2742              	.LBB147:
 2743              	.LBB148:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2744              		.loc 2 156 0
 2745              		.syntax unified
 2746              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2747 006e 4FF02F03 			mov r3, #47												
 2748 0072 83F31188 		msr basepri, r3											
 2749 0076 BFF36F8F 		isb														
 2750 007a BFF34F8F 		dsb														
 2751              	
 2752              	@ 0 "" 2
 2753              	.LVL236:
 2754              		.thumb
 2755              		.syntax unified
 2756              	.L254:
 2757 007e FEE7     		b	.L254
 2758              	.L253:
 2759              	.LBE148:
 2760              	.LBE147:
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2761              		.loc 1 1699 0
 2762 0080 4FF08052 		mov	r2, #268435456
 2763 0084 0B4B     		ldr	r3, .L257+4
 2764 0086 1A60     		str	r2, [r3]
 2765              		.syntax unified
 2766              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2767 0088 BFF34F8F 		dsb
 2768              	@ 0 "" 2
 2769              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2770 008c BFF36F8F 		isb
 2771              	@ 0 "" 2
 2772              		.thumb
 2773              		.syntax unified
 2774 0090 38BD     		pop	{r3, r4, r5, pc}
 2775              	.LVL237:
 2776              	.L252:
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2777              		.loc 1 1706 0
 2778 0092 074B     		ldr	r3, .L257
 2779 0094 1A68     		ldr	r2, [r3]
 2780 0096 D3F80032 		ldr	r3, [r3, #512]
 2781 009a 9A42     		cmp	r2, r3
 2782 009c 04D1     		bne	.L255
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 147


1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2783              		.loc 1 1712 0
 2784 009e 0022     		movs	r2, #0
 2785 00a0 034B     		ldr	r3, .L257
 2786 00a2 C3F80422 		str	r2, [r3, #516]
 2787 00a6 38BD     		pop	{r3, r4, r5, pc}
 2788              	.LVL238:
 2789              	.L255:
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2790              		.loc 1 1716 0
 2791 00a8 FFF7FEFF 		bl	vTaskSwitchContext
 2792              	.LVL239:
 2793              	.L246:
 2794 00ac 38BD     		pop	{r3, r4, r5, pc}
 2795              	.LVL240:
 2796              	.L258:
 2797 00ae 00BF     		.align	2
 2798              	.L257:
 2799 00b0 00000000 		.word	.LANCHOR0
 2800 00b4 04ED00E0 		.word	-536810236
 2801              		.cfi_endproc
 2802              	.LFE604:
 2803              		.size	vTaskSuspend, .-vTaskSuspend
 2804              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2805              		.align	2
 2806              		.global	vTaskPlaceOnEventList
 2807              		.thumb
 2808              		.thumb_func
 2809              		.type	vTaskPlaceOnEventList, %function
 2810              	vTaskPlaceOnEventList:
 2811              	.LFB618:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2812              		.loc 1 2922 0
 2813              		.cfi_startproc
 2814              		@ args = 0, pretend = 0, frame = 0
 2815              		@ frame_needed = 0, uses_anonymous_args = 0
 2816              	.LVL241:
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2817              		.loc 1 2923 0
 2818 0000 40B9     		cbnz	r0, .L260
 2819              	.LBB149:
 2820              	.LBB150:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2821              		.loc 2 156 0
 2822              		.syntax unified
 2823              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2824 0002 4FF02F03 			mov r3, #47												
 2825 0006 83F31188 		msr basepri, r3											
 2826 000a BFF36F8F 		isb														
 2827 000e BFF34F8F 		dsb														
 2828              	
 2829              	@ 0 "" 2
 2830              	.LVL242:
 2831              		.thumb
 2832              		.syntax unified
 2833              	.L261:
 2834 0012 FEE7     		b	.L261
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 148


 2835              	.L260:
 2836              	.LBE150:
 2837              	.LBE149:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2838              		.loc 1 2922 0
 2839 0014 10B5     		push	{r4, lr}
 2840              		.cfi_def_cfa_offset 8
 2841              		.cfi_offset 4, -8
 2842              		.cfi_offset 14, -4
 2843 0016 0C46     		mov	r4, r1
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2844              		.loc 1 2932 0
 2845 0018 054B     		ldr	r3, .L263
 2846 001a D3F80412 		ldr	r1, [r3, #516]
 2847              	.LVL243:
 2848 001e 1831     		adds	r1, r1, #24
 2849 0020 FFF7FEFF 		bl	vListInsert
 2850              	.LVL244:
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2851              		.loc 1 2934 0
 2852 0024 0121     		movs	r1, #1
 2853 0026 2046     		mov	r0, r4
 2854 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2855              	.LVL245:
 2856 002c 10BD     		pop	{r4, pc}
 2857              	.LVL246:
 2858              	.L264:
 2859 002e 00BF     		.align	2
 2860              	.L263:
 2861 0030 00000000 		.word	.LANCHOR0
 2862              		.cfi_endproc
 2863              	.LFE618:
 2864              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2865              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2866              		.align	2
 2867              		.global	vTaskPlaceOnUnorderedEventList
 2868              		.thumb
 2869              		.thumb_func
 2870              		.type	vTaskPlaceOnUnorderedEventList, %function
 2871              	vTaskPlaceOnUnorderedEventList:
 2872              	.LFB619:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2873              		.loc 1 2939 0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 0
 2876              		@ frame_needed = 0, uses_anonymous_args = 0
 2877              	.LVL247:
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2878              		.loc 1 2940 0
 2879 0000 40B9     		cbnz	r0, .L266
 2880              	.LBB151:
 2881              	.LBB152:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2882              		.loc 2 156 0
 2883              		.syntax unified
 2884              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2885 0002 4FF02F03 			mov r3, #47												
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 149


 2886 0006 83F31188 		msr basepri, r3											
 2887 000a BFF36F8F 		isb														
 2888 000e BFF34F8F 		dsb														
 2889              	
 2890              	@ 0 "" 2
 2891              	.LVL248:
 2892              		.thumb
 2893              		.syntax unified
 2894              	.L267:
 2895 0012 FEE7     		b	.L267
 2896              	.L266:
 2897 0014 0346     		mov	r3, r0
 2898              	.LBE152:
 2899              	.LBE151:
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2900              		.loc 1 2944 0
 2901 0016 1048     		ldr	r0, .L271
 2902              	.LVL249:
 2903 0018 D0F81C02 		ldr	r0, [r0, #540]
 2904 001c 40B9     		cbnz	r0, .L268
 2905              	.LBB153:
 2906              	.LBB154:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2907              		.loc 2 156 0
 2908              		.syntax unified
 2909              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2910 001e 4FF02F03 			mov r3, #47												
 2911 0022 83F31188 		msr basepri, r3											
 2912 0026 BFF36F8F 		isb														
 2913 002a BFF34F8F 		dsb														
 2914              	
 2915              	@ 0 "" 2
 2916              	.LVL250:
 2917              		.thumb
 2918              		.syntax unified
 2919              	.L269:
 2920 002e FEE7     		b	.L269
 2921              	.LVL251:
 2922              	.L268:
 2923              	.LBE154:
 2924              	.LBE153:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2925              		.loc 1 2939 0
 2926 0030 10B5     		push	{r4, lr}
 2927              		.cfi_def_cfa_offset 8
 2928              		.cfi_offset 4, -8
 2929              		.cfi_offset 14, -4
 2930 0032 1846     		mov	r0, r3
 2931 0034 1446     		mov	r4, r2
 2932 0036 0B46     		mov	r3, r1
 2933              	.LVL252:
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2934              		.loc 1 2949 0
 2935 0038 074A     		ldr	r2, .L271
 2936              	.LVL253:
 2937 003a D2F80412 		ldr	r1, [r2, #516]
 2938              	.LVL254:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 150


 2939 003e 43F00043 		orr	r3, r3, #-2147483648
 2940              	.LVL255:
 2941 0042 8B61     		str	r3, [r1, #24]
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2942              		.loc 1 2956 0
 2943 0044 D2F80412 		ldr	r1, [r2, #516]
 2944 0048 1831     		adds	r1, r1, #24
 2945 004a FFF7FEFF 		bl	vListInsertEnd
 2946              	.LVL256:
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2947              		.loc 1 2958 0
 2948 004e 0121     		movs	r1, #1
 2949 0050 2046     		mov	r0, r4
 2950 0052 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2951              	.LVL257:
 2952 0056 10BD     		pop	{r4, pc}
 2953              	.LVL258:
 2954              	.L272:
 2955              		.align	2
 2956              	.L271:
 2957 0058 00000000 		.word	.LANCHOR0
 2958              		.cfi_endproc
 2959              	.LFE619:
 2960              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2961              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2962              		.align	2
 2963              		.global	vTaskPlaceOnEventListRestricted
 2964              		.thumb
 2965              		.thumb_func
 2966              		.type	vTaskPlaceOnEventListRestricted, %function
 2967              	vTaskPlaceOnEventListRestricted:
 2968              	.LFB620:
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
 2969              		.loc 1 2965 0
 2970              		.cfi_startproc
 2971              		@ args = 0, pretend = 0, frame = 0
 2972              		@ frame_needed = 0, uses_anonymous_args = 0
 2973              	.LVL259:
 2974 0000 38B5     		push	{r3, r4, r5, lr}
 2975              		.cfi_def_cfa_offset 16
 2976              		.cfi_offset 3, -16
 2977              		.cfi_offset 4, -12
 2978              		.cfi_offset 5, -8
 2979              		.cfi_offset 14, -4
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2980              		.loc 1 2966 0
 2981 0002 40B9     		cbnz	r0, .L274
 2982              	.LBB155:
 2983              	.LBB156:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2984              		.loc 2 156 0
 2985              		.syntax unified
 2986              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2987 0004 4FF02F03 			mov r3, #47												
 2988 0008 83F31188 		msr basepri, r3											
 2989 000c BFF36F8F 		isb														
 2990 0010 BFF34F8F 		dsb														
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 151


 2991              	
 2992              	@ 0 "" 2
 2993              	.LVL260:
 2994              		.thumb
 2995              		.syntax unified
 2996              	.L275:
 2997 0014 FEE7     		b	.L275
 2998              	.L274:
 2999 0016 0C46     		mov	r4, r1
 3000 0018 1546     		mov	r5, r2
 3001              	.LBE156:
 3002              	.LBE155:
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3003              		.loc 1 2978 0
 3004 001a 074A     		ldr	r2, .L279
 3005              	.LVL261:
 3006 001c D2F80412 		ldr	r1, [r2, #516]
 3007              	.LVL262:
 3008 0020 1831     		adds	r1, r1, #24
 3009 0022 FFF7FEFF 		bl	vListInsertEnd
 3010              	.LVL263:
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3011              		.loc 1 2983 0
 3012 0026 0DB1     		cbz	r5, .L276
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3013              		.loc 1 2985 0
 3014 0028 4FF0FF34 		mov	r4, #-1
 3015              	.LVL264:
 3016              	.L276:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3017              		.loc 1 2989 0
 3018 002c 2946     		mov	r1, r5
 3019 002e 2046     		mov	r0, r4
 3020 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3021              	.LVL265:
 3022 0034 38BD     		pop	{r3, r4, r5, pc}
 3023              	.LVL266:
 3024              	.L280:
 3025 0036 00BF     		.align	2
 3026              	.L279:
 3027 0038 00000000 		.word	.LANCHOR0
 3028              		.cfi_endproc
 3029              	.LFE620:
 3030              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 3031              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3032              		.align	2
 3033              		.global	xTaskRemoveFromEventList
 3034              		.thumb
 3035              		.thumb_func
 3036              		.type	xTaskRemoveFromEventList, %function
 3037              	xTaskRemoveFromEventList:
 3038              	.LFB621:
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3039              		.loc 1 2996 0
 3040              		.cfi_startproc
 3041              		@ args = 0, pretend = 0, frame = 0
 3042              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 152


 3043              	.LVL267:
 3044 0000 38B5     		push	{r3, r4, r5, lr}
 3045              		.cfi_def_cfa_offset 16
 3046              		.cfi_offset 3, -16
 3047              		.cfi_offset 4, -12
 3048              		.cfi_offset 5, -8
 3049              		.cfi_offset 14, -4
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3050              		.loc 1 3013 0
 3051 0002 C368     		ldr	r3, [r0, #12]
 3052 0004 DC68     		ldr	r4, [r3, #12]
 3053              	.LVL268:
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3054              		.loc 1 3014 0
 3055 0006 44B9     		cbnz	r4, .L282
 3056              	.LBB157:
 3057              	.LBB158:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3058              		.loc 2 156 0
 3059              		.syntax unified
 3060              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3061 0008 4FF02F03 			mov r3, #47												
 3062 000c 83F31188 		msr basepri, r3											
 3063 0010 BFF36F8F 		isb														
 3064 0014 BFF34F8F 		dsb														
 3065              	
 3066              	@ 0 "" 2
 3067              	.LVL269:
 3068              		.thumb
 3069              		.syntax unified
 3070              	.L283:
 3071 0018 FEE7     		b	.L283
 3072              	.L282:
 3073              	.LBE158:
 3074              	.LBE157:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3075              		.loc 1 3015 0
 3076 001a 04F11805 		add	r5, r4, #24
 3077 001e 2846     		mov	r0, r5
 3078              	.LVL270:
 3079 0020 FFF7FEFF 		bl	uxListRemove
 3080              	.LVL271:
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3081              		.loc 1 3017 0
 3082 0024 154B     		ldr	r3, .L290
 3083 0026 D3F81C32 		ldr	r3, [r3, #540]
 3084 002a ABB9     		cbnz	r3, .L284
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3085              		.loc 1 3019 0
 3086 002c 251D     		adds	r5, r4, #4
 3087 002e 2846     		mov	r0, r5
 3088 0030 FFF7FEFF 		bl	uxListRemove
 3089              	.LVL272:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3090              		.loc 1 3020 0
 3091 0034 E36A     		ldr	r3, [r4, #44]
 3092 0036 114A     		ldr	r2, .L290
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 153


 3093 0038 D2F81022 		ldr	r2, [r2, #528]
 3094 003c 9342     		cmp	r3, r2
 3095 003e 02D9     		bls	.L285
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3096              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3097 0040 0E4A     		ldr	r2, .L290
 3098 0042 C2F81032 		str	r3, [r2, #528]
 3099              	.L285:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3100              		.loc 1 3020 0 discriminator 3
 3101 0046 03EB8303 		add	r3, r3, r3, lsl #2
 3102 004a 9A00     		lsls	r2, r3, #2
 3103 004c 2946     		mov	r1, r5
 3104 004e 0C48     		ldr	r0, .L290+4
 3105 0050 1044     		add	r0, r0, r2
 3106 0052 FFF7FEFF 		bl	vListInsertEnd
 3107              	.LVL273:
 3108 0056 03E0     		b	.L286
 3109              	.L284:
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3110              		.loc 1 3026 0 is_stmt 1
 3111 0058 2946     		mov	r1, r5
 3112 005a 0A48     		ldr	r0, .L290+8
 3113 005c FFF7FEFF 		bl	vListInsertEnd
 3114              	.LVL274:
 3115              	.L286:
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3116              		.loc 1 3029 0
 3117 0060 E26A     		ldr	r2, [r4, #44]
 3118 0062 064B     		ldr	r3, .L290
 3119 0064 D3F80432 		ldr	r3, [r3, #516]
 3120 0068 DB6A     		ldr	r3, [r3, #44]
 3121 006a 9A42     		cmp	r2, r3
 3122 006c 04D9     		bls	.L288
 3123              	.LVL275:
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3124              		.loc 1 3038 0
 3125 006e 0120     		movs	r0, #1
 3126 0070 024B     		ldr	r3, .L290
 3127 0072 C3F82C02 		str	r0, [r3, #556]
 3128 0076 38BD     		pop	{r3, r4, r5, pc}
 3129              	.LVL276:
 3130              	.L288:
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3131              		.loc 1 3042 0
 3132 0078 0020     		movs	r0, #0
 3133              	.LVL277:
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3134              		.loc 1 3060 0
 3135 007a 38BD     		pop	{r3, r4, r5, pc}
 3136              	.LVL278:
 3137              	.L291:
 3138              		.align	2
 3139              	.L290:
 3140 007c 00000000 		.word	.LANCHOR0
 3141 0080 30000000 		.word	.LANCHOR0+48
 3142 0084 14000000 		.word	.LANCHOR0+20
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 154


 3143              		.cfi_endproc
 3144              	.LFE621:
 3145              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 3146              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3147              		.align	2
 3148              		.global	vTaskRemoveFromUnorderedEventList
 3149              		.thumb
 3150              		.thumb_func
 3151              		.type	vTaskRemoveFromUnorderedEventList, %function
 3152              	vTaskRemoveFromUnorderedEventList:
 3153              	.LFB622:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3154              		.loc 1 3064 0
 3155              		.cfi_startproc
 3156              		@ args = 0, pretend = 0, frame = 0
 3157              		@ frame_needed = 0, uses_anonymous_args = 0
 3158              	.LVL279:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3159              		.loc 1 3069 0
 3160 0000 1F4B     		ldr	r3, .L300
 3161 0002 D3F81C32 		ldr	r3, [r3, #540]
 3162 0006 43B9     		cbnz	r3, .L293
 3163              	.LBB159:
 3164              	.LBB160:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3165              		.loc 2 156 0
 3166              		.syntax unified
 3167              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3168 0008 4FF02F03 			mov r3, #47												
 3169 000c 83F31188 		msr basepri, r3											
 3170 0010 BFF36F8F 		isb														
 3171 0014 BFF34F8F 		dsb														
 3172              	
 3173              	@ 0 "" 2
 3174              	.LVL280:
 3175              		.thumb
 3176              		.syntax unified
 3177              	.L294:
 3178 0018 FEE7     		b	.L294
 3179              	.L293:
 3180              	.LBE160:
 3181              	.LBE159:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3182              		.loc 1 3064 0
 3183 001a 70B5     		push	{r4, r5, r6, lr}
 3184              		.cfi_def_cfa_offset 16
 3185              		.cfi_offset 4, -16
 3186              		.cfi_offset 5, -12
 3187              		.cfi_offset 6, -8
 3188              		.cfi_offset 14, -4
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3189              		.loc 1 3072 0
 3190 001c 41F00043 		orr	r3, r1, #-2147483648
 3191 0020 0360     		str	r3, [r0]
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3192              		.loc 1 3076 0
 3193 0022 C468     		ldr	r4, [r0, #12]
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 155


 3194              	.LVL281:
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3195              		.loc 1 3077 0
 3196 0024 44B9     		cbnz	r4, .L295
 3197              	.LBB161:
 3198              	.LBB162:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3199              		.loc 2 156 0
 3200              		.syntax unified
 3201              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3202 0026 4FF02F03 			mov r3, #47												
 3203 002a 83F31188 		msr basepri, r3											
 3204 002e BFF36F8F 		isb														
 3205 0032 BFF34F8F 		dsb														
 3206              	
 3207              	@ 0 "" 2
 3208              	.LVL282:
 3209              		.thumb
 3210              		.syntax unified
 3211              	.L296:
 3212 0036 FEE7     		b	.L296
 3213              	.L295:
 3214              	.LBE162:
 3215              	.LBE161:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3216              		.loc 1 3078 0
 3217 0038 FFF7FEFF 		bl	uxListRemove
 3218              	.LVL283:
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3219              		.loc 1 3083 0
 3220 003c 261D     		adds	r6, r4, #4
 3221 003e 3046     		mov	r0, r6
 3222 0040 FFF7FEFF 		bl	uxListRemove
 3223              	.LVL284:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3224              		.loc 1 3084 0
 3225 0044 E36A     		ldr	r3, [r4, #44]
 3226 0046 0E4A     		ldr	r2, .L300
 3227 0048 D2F81022 		ldr	r2, [r2, #528]
 3228 004c 9342     		cmp	r3, r2
 3229 004e 02D9     		bls	.L297
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3230              		.loc 1 3084 0 is_stmt 0 discriminator 1
 3231 0050 0B4A     		ldr	r2, .L300
 3232 0052 C2F81032 		str	r3, [r2, #528]
 3233              	.L297:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3234              		.loc 1 3084 0 discriminator 3
 3235 0056 0A4D     		ldr	r5, .L300
 3236 0058 05F13000 		add	r0, r5, #48
 3237 005c 03EB8303 		add	r3, r3, r3, lsl #2
 3238 0060 9A00     		lsls	r2, r3, #2
 3239 0062 3146     		mov	r1, r6
 3240 0064 1044     		add	r0, r0, r2
 3241 0066 FFF7FEFF 		bl	vListInsertEnd
 3242              	.LVL285:
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 156


 3243              		.loc 1 3086 0 is_stmt 1 discriminator 3
 3244 006a E26A     		ldr	r2, [r4, #44]
 3245 006c D5F80432 		ldr	r3, [r5, #516]
 3246 0070 DB6A     		ldr	r3, [r3, #44]
 3247 0072 9A42     		cmp	r2, r3
 3248 0074 02D9     		bls	.L292
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3249              		.loc 1 3092 0
 3250 0076 0122     		movs	r2, #1
 3251 0078 C5F82C22 		str	r2, [r5, #556]
 3252              	.L292:
 3253 007c 70BD     		pop	{r4, r5, r6, pc}
 3254              	.LVL286:
 3255              	.L301:
 3256 007e 00BF     		.align	2
 3257              	.L300:
 3258 0080 00000000 		.word	.LANCHOR0
 3259              		.cfi_endproc
 3260              	.LFE622:
 3261              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 3262              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3263              		.align	2
 3264              		.global	vTaskSetTimeOutState
 3265              		.thumb
 3266              		.thumb_func
 3267              		.type	vTaskSetTimeOutState, %function
 3268              	vTaskSetTimeOutState:
 3269              	.LFB623:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3270              		.loc 1 3098 0
 3271              		.cfi_startproc
 3272              		@ args = 0, pretend = 0, frame = 0
 3273              		@ frame_needed = 0, uses_anonymous_args = 0
 3274              	.LVL287:
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
 3275              		.loc 1 3099 0
 3276 0000 40B9     		cbnz	r0, .L303
 3277              	.LBB163:
 3278              	.LBB164:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3279              		.loc 2 156 0
 3280              		.syntax unified
 3281              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3282 0002 4FF02F03 			mov r3, #47												
 3283 0006 83F31188 		msr basepri, r3											
 3284 000a BFF36F8F 		isb														
 3285 000e BFF34F8F 		dsb														
 3286              	
 3287              	@ 0 "" 2
 3288              	.LVL288:
 3289              		.thumb
 3290              		.syntax unified
 3291              	.L304:
 3292 0012 FEE7     		b	.L304
 3293              	.L303:
 3294              	.LBE164:
 3295              	.LBE163:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 157


3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3296              		.loc 1 3098 0
 3297 0014 10B5     		push	{r4, lr}
 3298              		.cfi_def_cfa_offset 8
 3299              		.cfi_offset 4, -8
 3300              		.cfi_offset 14, -4
 3301 0016 0446     		mov	r4, r0
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3302              		.loc 1 3100 0
 3303 0018 FFF7FEFF 		bl	vPortEnterCritical
 3304              	.LVL289:
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3305              		.loc 1 3102 0
 3306 001c 044B     		ldr	r3, .L306
 3307 001e D3F82422 		ldr	r2, [r3, #548]
 3308 0022 2260     		str	r2, [r4]
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3309              		.loc 1 3103 0
 3310 0024 D3F81832 		ldr	r3, [r3, #536]
 3311 0028 6360     		str	r3, [r4, #4]
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3312              		.loc 1 3105 0
 3313 002a FFF7FEFF 		bl	vPortExitCritical
 3314              	.LVL290:
 3315 002e 10BD     		pop	{r4, pc}
 3316              	.LVL291:
 3317              	.L307:
 3318              		.align	2
 3319              	.L306:
 3320 0030 00000000 		.word	.LANCHOR0
 3321              		.cfi_endproc
 3322              	.LFE623:
 3323              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3324              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3325              		.align	2
 3326              		.global	vTaskInternalSetTimeOutState
 3327              		.thumb
 3328              		.thumb_func
 3329              		.type	vTaskInternalSetTimeOutState, %function
 3330              	vTaskInternalSetTimeOutState:
 3331              	.LFB624:
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3332              		.loc 1 3110 0
 3333              		.cfi_startproc
 3334              		@ args = 0, pretend = 0, frame = 0
 3335              		@ frame_needed = 0, uses_anonymous_args = 0
 3336              		@ link register save eliminated.
 3337              	.LVL292:
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3338              		.loc 1 3112 0
 3339 0000 034B     		ldr	r3, .L309
 3340 0002 D3F82422 		ldr	r2, [r3, #548]
 3341 0006 0260     		str	r2, [r0]
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3342              		.loc 1 3113 0
 3343 0008 D3F81832 		ldr	r3, [r3, #536]
 3344 000c 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 158


 3345 000e 7047     		bx	lr
 3346              	.L310:
 3347              		.align	2
 3348              	.L309:
 3349 0010 00000000 		.word	.LANCHOR0
 3350              		.cfi_endproc
 3351              	.LFE624:
 3352              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 3353              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3354              		.align	2
 3355              		.global	xTaskCheckForTimeOut
 3356              		.thumb
 3357              		.thumb_func
 3358              		.type	xTaskCheckForTimeOut, %function
 3359              	xTaskCheckForTimeOut:
 3360              	.LFB625:
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 3361              		.loc 1 3118 0
 3362              		.cfi_startproc
 3363              		@ args = 0, pretend = 0, frame = 0
 3364              		@ frame_needed = 0, uses_anonymous_args = 0
 3365              	.LVL293:
 3366 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3367              		.cfi_def_cfa_offset 24
 3368              		.cfi_offset 3, -24
 3369              		.cfi_offset 4, -20
 3370              		.cfi_offset 5, -16
 3371              		.cfi_offset 6, -12
 3372              		.cfi_offset 7, -8
 3373              		.cfi_offset 14, -4
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3374              		.loc 1 3121 0
 3375 0002 40B9     		cbnz	r0, .L312
 3376              	.LBB165:
 3377              	.LBB166:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3378              		.loc 2 156 0
 3379              		.syntax unified
 3380              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3381 0004 4FF02F03 			mov r3, #47												
 3382 0008 83F31188 		msr basepri, r3											
 3383 000c BFF36F8F 		isb														
 3384 0010 BFF34F8F 		dsb														
 3385              	
 3386              	@ 0 "" 2
 3387              	.LVL294:
 3388              		.thumb
 3389              		.syntax unified
 3390              	.L313:
 3391 0014 FEE7     		b	.L313
 3392              	.L312:
 3393 0016 0546     		mov	r5, r0
 3394              	.LBE166:
 3395              	.LBE165:
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3396              		.loc 1 3122 0
 3397 0018 41B9     		cbnz	r1, .L314
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 159


 3398              	.LBB167:
 3399              	.LBB168:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3400              		.loc 2 156 0
 3401              		.syntax unified
 3402              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3403 001a 4FF02F03 			mov r3, #47												
 3404 001e 83F31188 		msr basepri, r3											
 3405 0022 BFF36F8F 		isb														
 3406 0026 BFF34F8F 		dsb														
 3407              	
 3408              	@ 0 "" 2
 3409              	.LVL295:
 3410              		.thumb
 3411              		.syntax unified
 3412              	.L315:
 3413 002a FEE7     		b	.L315
 3414              	.L314:
 3415 002c 0C46     		mov	r4, r1
 3416              	.LBE168:
 3417              	.LBE167:
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3418              		.loc 1 3124 0
 3419 002e FFF7FEFF 		bl	vPortEnterCritical
 3420              	.LVL296:
 3421              	.LBB169:
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3422              		.loc 1 3127 0
 3423 0032 124B     		ldr	r3, .L322
 3424 0034 D3F81802 		ldr	r0, [r3, #536]
 3425              	.LVL297:
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3426              		.loc 1 3128 0
 3427 0038 6968     		ldr	r1, [r5, #4]
 3428 003a 421A     		subs	r2, r0, r1
 3429              	.LVL298:
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3430              		.loc 1 3142 0
 3431 003c 2368     		ldr	r3, [r4]
 3432 003e B3F1FF3F 		cmp	r3, #-1
 3433 0042 14D0     		beq	.L319
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3434              		.loc 1 3152 0
 3435 0044 2F68     		ldr	r7, [r5]
 3436 0046 0D4E     		ldr	r6, .L322
 3437 0048 D6F82462 		ldr	r6, [r6, #548]
 3438 004c B742     		cmp	r7, r6
 3439 004e 01D0     		beq	.L317
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3440              		.loc 1 3152 0 is_stmt 0 discriminator 1
 3441 0050 8842     		cmp	r0, r1
 3442 0052 0ED2     		bcs	.L320
 3443              	.L317:
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3444              		.loc 1 3161 0 is_stmt 1
 3445 0054 9A42     		cmp	r2, r3
 3446 0056 06D2     		bcs	.L318
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 160


3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3447              		.loc 1 3164 0
 3448 0058 9B1A     		subs	r3, r3, r2
 3449 005a 2360     		str	r3, [r4]
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
 3450              		.loc 1 3165 0
 3451 005c 2846     		mov	r0, r5
 3452              	.LVL299:
 3453 005e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3454              	.LVL300:
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3455              		.loc 1 3166 0
 3456 0062 0024     		movs	r4, #0
 3457              	.LVL301:
 3458 0064 06E0     		b	.L316
 3459              	.LVL302:
 3460              	.L318:
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
 3461              		.loc 1 3170 0
 3462 0066 0023     		movs	r3, #0
 3463 0068 2360     		str	r3, [r4]
 3464              	.LVL303:
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3465              		.loc 1 3171 0
 3466 006a 0124     		movs	r4, #1
 3467              	.LVL304:
 3468 006c 02E0     		b	.L316
 3469              	.LVL305:
 3470              	.L319:
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3471              		.loc 1 3147 0
 3472 006e 0024     		movs	r4, #0
 3473              	.LVL306:
 3474 0070 00E0     		b	.L316
 3475              	.LVL307:
 3476              	.L320:
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3477              		.loc 1 3159 0
 3478 0072 0124     		movs	r4, #1
 3479              	.LVL308:
 3480              	.L316:
 3481              	.LBE169:
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3482              		.loc 1 3174 0
 3483 0074 FFF7FEFF 		bl	vPortExitCritical
 3484              	.LVL309:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3485              		.loc 1 3177 0
 3486 0078 2046     		mov	r0, r4
 3487 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3488              	.LVL310:
 3489              	.L323:
 3490              		.align	2
 3491              	.L322:
 3492 007c 00000000 		.word	.LANCHOR0
 3493              		.cfi_endproc
 3494              	.LFE625:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 161


 3495              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3496              		.section	.text.vTaskMissedYield,"ax",%progbits
 3497              		.align	2
 3498              		.global	vTaskMissedYield
 3499              		.thumb
 3500              		.thumb_func
 3501              		.type	vTaskMissedYield, %function
 3502              	vTaskMissedYield:
 3503              	.LFB626:
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3504              		.loc 1 3181 0
 3505              		.cfi_startproc
 3506              		@ args = 0, pretend = 0, frame = 0
 3507              		@ frame_needed = 0, uses_anonymous_args = 0
 3508              		@ link register save eliminated.
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3509              		.loc 1 3182 0
 3510 0000 0122     		movs	r2, #1
 3511 0002 024B     		ldr	r3, .L325
 3512 0004 C3F82C22 		str	r2, [r3, #556]
 3513 0008 7047     		bx	lr
 3514              	.L326:
 3515 000a 00BF     		.align	2
 3516              	.L325:
 3517 000c 00000000 		.word	.LANCHOR0
 3518              		.cfi_endproc
 3519              	.LFE626:
 3520              		.size	vTaskMissedYield, .-vTaskMissedYield
 3521              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3522              		.align	2
 3523              		.global	vTaskSetThreadLocalStoragePointer
 3524              		.thumb
 3525              		.thumb_func
 3526              		.type	vTaskSetThreadLocalStoragePointer, %function
 3527              	vTaskSetThreadLocalStoragePointer:
 3528              	.LFB628:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3529              		.loc 1 3395 0
 3530              		.cfi_startproc
 3531              		@ args = 0, pretend = 0, frame = 0
 3532              		@ frame_needed = 0, uses_anonymous_args = 0
 3533              		@ link register save eliminated.
 3534              	.LVL311:
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3535              		.loc 1 3398 0
 3536 0000 0429     		cmp	r1, #4
 3537 0002 07DC     		bgt	.L327
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3538              		.loc 1 3400 0
 3539 0004 10B9     		cbnz	r0, .L329
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3540              		.loc 1 3400 0 is_stmt 0 discriminator 1
 3541 0006 044B     		ldr	r3, .L330
 3542 0008 D3F80402 		ldr	r0, [r3, #516]
 3543              	.LVL312:
 3544              	.L329:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 162


 3545              		.loc 1 3401 0 is_stmt 1 discriminator 4
 3546 000c 1031     		adds	r1, r1, #16
 3547              	.LVL313:
 3548 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3549              	.LVL314:
 3550 0012 4A60     		str	r2, [r1, #4]
 3551              	.LVL315:
 3552              	.L327:
 3553 0014 7047     		bx	lr
 3554              	.L331:
 3555 0016 00BF     		.align	2
 3556              	.L330:
 3557 0018 00000000 		.word	.LANCHOR0
 3558              		.cfi_endproc
 3559              	.LFE628:
 3560              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3561              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3562              		.align	2
 3563              		.global	pvTaskGetThreadLocalStoragePointer
 3564              		.thumb
 3565              		.thumb_func
 3566              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3567              	pvTaskGetThreadLocalStoragePointer:
 3568              	.LFB629:
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
 3569              		.loc 1 3411 0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 0
 3572              		@ frame_needed = 0, uses_anonymous_args = 0
 3573              		@ link register save eliminated.
 3574              	.LVL316:
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3575              		.loc 1 3415 0
 3576 0000 0429     		cmp	r1, #4
 3577 0002 08DC     		bgt	.L335
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3578              		.loc 1 3417 0
 3579 0004 10B9     		cbnz	r0, .L334
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3580              		.loc 1 3417 0 is_stmt 0 discriminator 1
 3581 0006 054B     		ldr	r3, .L336
 3582 0008 D3F80402 		ldr	r0, [r3, #516]
 3583              	.LVL317:
 3584              	.L334:
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3585              		.loc 1 3418 0 is_stmt 1 discriminator 4
 3586 000c 1031     		adds	r1, r1, #16
 3587              	.LVL318:
 3588 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3589              	.LVL319:
 3590 0012 4068     		ldr	r0, [r0, #4]
 3591              	.LVL320:
 3592 0014 7047     		bx	lr
 3593              	.LVL321:
 3594              	.L335:
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3595              		.loc 1 3422 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 163


 3596 0016 0020     		movs	r0, #0
 3597              	.LVL322:
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3598              		.loc 1 3426 0
 3599 0018 7047     		bx	lr
 3600              	.L337:
 3601 001a 00BF     		.align	2
 3602              	.L336:
 3603 001c 00000000 		.word	.LANCHOR0
 3604              		.cfi_endproc
 3605              	.LFE629:
 3606              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3607              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3608              		.align	2
 3609              		.global	xTaskGetCurrentTaskHandle
 3610              		.thumb
 3611              		.thumb_func
 3612              		.type	xTaskGetCurrentTaskHandle, %function
 3613              	xTaskGetCurrentTaskHandle:
 3614              	.LFB634:
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 3615              		.loc 1 3768 0
 3616              		.cfi_startproc
 3617              		@ args = 0, pretend = 0, frame = 0
 3618              		@ frame_needed = 0, uses_anonymous_args = 0
 3619              		@ link register save eliminated.
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3620              		.loc 1 3774 0
 3621 0000 014B     		ldr	r3, .L339
 3622 0002 D3F80402 		ldr	r0, [r3, #516]
 3623              	.LVL323:
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3624              		.loc 1 3777 0
 3625 0006 7047     		bx	lr
 3626              	.L340:
 3627              		.align	2
 3628              	.L339:
 3629 0008 00000000 		.word	.LANCHOR0
 3630              		.cfi_endproc
 3631              	.LFE634:
 3632              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3633              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3634              		.align	2
 3635              		.global	xTaskGetSchedulerState
 3636              		.thumb
 3637              		.thumb_func
 3638              		.type	xTaskGetSchedulerState, %function
 3639              	xTaskGetSchedulerState:
 3640              	.LFB635:
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3641              		.loc 1 3785 0
 3642              		.cfi_startproc
 3643              		@ args = 0, pretend = 0, frame = 0
 3644              		@ frame_needed = 0, uses_anonymous_args = 0
 3645              		@ link register save eliminated.
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3646              		.loc 1 3788 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 164


 3647 0000 064B     		ldr	r3, .L345
 3648 0002 D3F80832 		ldr	r3, [r3, #520]
 3649 0006 2BB1     		cbz	r3, .L343
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3650              		.loc 1 3794 0
 3651 0008 044B     		ldr	r3, .L345
 3652 000a D3F81C32 		ldr	r3, [r3, #540]
 3653 000e 1BB9     		cbnz	r3, .L344
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3654              		.loc 1 3796 0
 3655 0010 0220     		movs	r0, #2
 3656 0012 7047     		bx	lr
 3657              	.L343:
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3658              		.loc 1 3790 0
 3659 0014 0120     		movs	r0, #1
 3660 0016 7047     		bx	lr
 3661              	.L344:
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3662              		.loc 1 3800 0
 3663 0018 0020     		movs	r0, #0
 3664              	.LVL324:
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3665              		.loc 1 3805 0
 3666 001a 7047     		bx	lr
 3667              	.L346:
 3668              		.align	2
 3669              	.L345:
 3670 001c 00000000 		.word	.LANCHOR0
 3671              		.cfi_endproc
 3672              	.LFE635:
 3673              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3674              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3675              		.align	2
 3676              		.global	uxTaskResetEventItemValue
 3677              		.thumb
 3678              		.thumb_func
 3679              		.type	uxTaskResetEventItemValue, %function
 3680              	uxTaskResetEventItemValue:
 3681              	.LFB636:
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
 3682              		.loc 1 4394 0
 3683              		.cfi_startproc
 3684              		@ args = 0, pretend = 0, frame = 0
 3685              		@ frame_needed = 0, uses_anonymous_args = 0
 3686              		@ link register save eliminated.
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3687              		.loc 1 4397 0
 3688 0000 064B     		ldr	r3, .L348
 3689 0002 D3F80422 		ldr	r2, [r3, #516]
 3690 0006 9069     		ldr	r0, [r2, #24]
 3691              	.LVL325:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3692              		.loc 1 4401 0
 3693 0008 D3F80422 		ldr	r2, [r3, #516]
 3694 000c D3F80432 		ldr	r3, [r3, #516]
 3695 0010 DB6A     		ldr	r3, [r3, #44]
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 165


 3696 0012 C3F11403 		rsb	r3, r3, #20
 3697 0016 9361     		str	r3, [r2, #24]
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3698              		.loc 1 4404 0
 3699 0018 7047     		bx	lr
 3700              	.L349:
 3701 001a 00BF     		.align	2
 3702              	.L348:
 3703 001c 00000000 		.word	.LANCHOR0
 3704              		.cfi_endproc
 3705              	.LFE636:
 3706              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3707              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3708              		.align	2
 3709              		.global	ulTaskNotifyTake
 3710              		.thumb
 3711              		.thumb_func
 3712              		.type	ulTaskNotifyTake, %function
 3713              	ulTaskNotifyTake:
 3714              	.LFB637:
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
 3715              		.loc 1 4427 0
 3716              		.cfi_startproc
 3717              		@ args = 0, pretend = 0, frame = 0
 3718              		@ frame_needed = 0, uses_anonymous_args = 0
 3719              	.LVL326:
 3720 0000 38B5     		push	{r3, r4, r5, lr}
 3721              		.cfi_def_cfa_offset 16
 3722              		.cfi_offset 3, -16
 3723              		.cfi_offset 4, -12
 3724              		.cfi_offset 5, -8
 3725              		.cfi_offset 14, -4
 3726 0002 0546     		mov	r5, r0
 3727 0004 0C46     		mov	r4, r1
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3728              		.loc 1 4430 0
 3729 0006 FFF7FEFF 		bl	vPortEnterCritical
 3730              	.LVL327:
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3731              		.loc 1 4433 0
 3732 000a 1B4B     		ldr	r3, .L355
 3733 000c D3F80432 		ldr	r3, [r3, #516]
 3734 0010 9B6D     		ldr	r3, [r3, #88]
 3735 0012 93B9     		cbnz	r3, .L351
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3736              		.loc 1 4436 0
 3737 0014 184B     		ldr	r3, .L355
 3738 0016 D3F80432 		ldr	r3, [r3, #516]
 3739 001a 0122     		movs	r2, #1
 3740 001c 83F85C20 		strb	r2, [r3, #92]
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3741              		.loc 1 4438 0
 3742 0020 5CB1     		cbz	r4, .L351
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3743              		.loc 1 4440 0
 3744 0022 1146     		mov	r1, r2
 3745 0024 2046     		mov	r0, r4
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 166


 3746 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3747              	.LVL328:
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3748              		.loc 1 4447 0
 3749 002a 4FF08052 		mov	r2, #268435456
 3750 002e 134B     		ldr	r3, .L355+4
 3751 0030 1A60     		str	r2, [r3]
 3752              		.syntax unified
 3753              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3754 0032 BFF34F8F 		dsb
 3755              	@ 0 "" 2
 3756              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3757 0036 BFF36F8F 		isb
 3758              	@ 0 "" 2
 3759              		.thumb
 3760              		.syntax unified
 3761              	.L351:
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3762              		.loc 1 4459 0
 3763 003a FFF7FEFF 		bl	vPortExitCritical
 3764              	.LVL329:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3765              		.loc 1 4461 0
 3766 003e FFF7FEFF 		bl	vPortEnterCritical
 3767              	.LVL330:
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3768              		.loc 1 4464 0
 3769 0042 0D4B     		ldr	r3, .L355
 3770 0044 D3F80432 		ldr	r3, [r3, #516]
 3771 0048 9C6D     		ldr	r4, [r3, #88]
 3772              	.LVL331:
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3773              		.loc 1 4466 0
 3774 004a 5CB1     		cbz	r4, .L352
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3775              		.loc 1 4468 0
 3776 004c 2DB1     		cbz	r5, .L353
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3777              		.loc 1 4470 0
 3778 004e 0A4B     		ldr	r3, .L355
 3779 0050 D3F80432 		ldr	r3, [r3, #516]
 3780 0054 0022     		movs	r2, #0
 3781 0056 9A65     		str	r2, [r3, #88]
 3782 0058 04E0     		b	.L352
 3783              	.L353:
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3784              		.loc 1 4474 0
 3785 005a 074B     		ldr	r3, .L355
 3786 005c D3F80432 		ldr	r3, [r3, #516]
 3787 0060 621E     		subs	r2, r4, #1
 3788 0062 9A65     		str	r2, [r3, #88]
 3789              	.L352:
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3790              		.loc 1 4482 0
 3791 0064 044B     		ldr	r3, .L355
 3792 0066 D3F80432 		ldr	r3, [r3, #516]
 3793 006a 0022     		movs	r2, #0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 167


 3794 006c 83F85C20 		strb	r2, [r3, #92]
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3795              		.loc 1 4484 0
 3796 0070 FFF7FEFF 		bl	vPortExitCritical
 3797              	.LVL332:
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3798              		.loc 1 4487 0
 3799 0074 2046     		mov	r0, r4
 3800 0076 38BD     		pop	{r3, r4, r5, pc}
 3801              	.LVL333:
 3802              	.L356:
 3803              		.align	2
 3804              	.L355:
 3805 0078 00000000 		.word	.LANCHOR0
 3806 007c 04ED00E0 		.word	-536810236
 3807              		.cfi_endproc
 3808              	.LFE637:
 3809              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3810              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3811              		.align	2
 3812              		.global	xTaskNotifyWait
 3813              		.thumb
 3814              		.thumb_func
 3815              		.type	xTaskNotifyWait, %function
 3816              	xTaskNotifyWait:
 3817              	.LFB638:
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3818              		.loc 1 4495 0
 3819              		.cfi_startproc
 3820              		@ args = 0, pretend = 0, frame = 0
 3821              		@ frame_needed = 0, uses_anonymous_args = 0
 3822              	.LVL334:
 3823 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3824              		.cfi_def_cfa_offset 24
 3825              		.cfi_offset 3, -24
 3826              		.cfi_offset 4, -20
 3827              		.cfi_offset 5, -16
 3828              		.cfi_offset 6, -12
 3829              		.cfi_offset 7, -8
 3830              		.cfi_offset 14, -4
 3831 0002 0746     		mov	r7, r0
 3832 0004 0D46     		mov	r5, r1
 3833 0006 1446     		mov	r4, r2
 3834 0008 1E46     		mov	r6, r3
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3835              		.loc 1 4498 0
 3836 000a FFF7FEFF 		bl	vPortEnterCritical
 3837              	.LVL335:
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3838              		.loc 1 4501 0
 3839 000e 234B     		ldr	r3, .L363
 3840 0010 D3F80432 		ldr	r3, [r3, #516]
 3841 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3842 0018 DBB2     		uxtb	r3, r3
 3843 001a 022B     		cmp	r3, #2
 3844 001c 18D0     		beq	.L358
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 168


 3845              		.loc 1 4506 0
 3846 001e 1F4B     		ldr	r3, .L363
 3847 0020 D3F80422 		ldr	r2, [r3, #516]
 3848 0024 906D     		ldr	r0, [r2, #88]
 3849 0026 20EA0700 		bic	r0, r0, r7
 3850 002a 9065     		str	r0, [r2, #88]
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3851              		.loc 1 4509 0
 3852 002c D3F80432 		ldr	r3, [r3, #516]
 3853 0030 0122     		movs	r2, #1
 3854 0032 83F85C20 		strb	r2, [r3, #92]
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3855              		.loc 1 4511 0
 3856 0036 5EB1     		cbz	r6, .L358
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3857              		.loc 1 4513 0
 3858 0038 1146     		mov	r1, r2
 3859 003a 3046     		mov	r0, r6
 3860 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3861              	.LVL336:
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3862              		.loc 1 4520 0
 3863 0040 4FF08052 		mov	r2, #268435456
 3864 0044 164B     		ldr	r3, .L363+4
 3865 0046 1A60     		str	r2, [r3]
 3866              		.syntax unified
 3867              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3868 0048 BFF34F8F 		dsb
 3869              	@ 0 "" 2
 3870              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3871 004c BFF36F8F 		isb
 3872              	@ 0 "" 2
 3873              		.thumb
 3874              		.syntax unified
 3875              	.L358:
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3876              		.loc 1 4532 0
 3877 0050 FFF7FEFF 		bl	vPortExitCritical
 3878              	.LVL337:
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3879              		.loc 1 4534 0
 3880 0054 FFF7FEFF 		bl	vPortEnterCritical
 3881              	.LVL338:
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3882              		.loc 1 4538 0
 3883 0058 24B1     		cbz	r4, .L359
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3884              		.loc 1 4542 0
 3885 005a 104B     		ldr	r3, .L363
 3886 005c D3F80432 		ldr	r3, [r3, #516]
 3887 0060 9B6D     		ldr	r3, [r3, #88]
 3888 0062 2360     		str	r3, [r4]
 3889              	.L359:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3890              		.loc 1 4549 0
 3891 0064 0D4B     		ldr	r3, .L363
 3892 0066 D3F80432 		ldr	r3, [r3, #516]
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 169


 3893 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3894 006e DBB2     		uxtb	r3, r3
 3895 0070 022B     		cmp	r3, #2
 3896 0072 08D1     		bne	.L361
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
 3897              		.loc 1 4558 0
 3898 0074 094B     		ldr	r3, .L363
 3899 0076 D3F80422 		ldr	r2, [r3, #516]
 3900 007a 936D     		ldr	r3, [r2, #88]
 3901 007c 23EA0505 		bic	r5, r3, r5
 3902              	.LVL339:
 3903 0080 9565     		str	r5, [r2, #88]
 3904              	.LVL340:
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3905              		.loc 1 4559 0
 3906 0082 0124     		movs	r4, #1
 3907              	.LVL341:
 3908 0084 00E0     		b	.L360
 3909              	.LVL342:
 3910              	.L361:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3911              		.loc 1 4552 0
 3912 0086 0024     		movs	r4, #0
 3913              	.LVL343:
 3914              	.L360:
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3915              		.loc 1 4562 0
 3916 0088 044B     		ldr	r3, .L363
 3917 008a D3F80432 		ldr	r3, [r3, #516]
 3918 008e 0022     		movs	r2, #0
 3919 0090 83F85C20 		strb	r2, [r3, #92]
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3920              		.loc 1 4564 0
 3921 0094 FFF7FEFF 		bl	vPortExitCritical
 3922              	.LVL344:
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3923              		.loc 1 4567 0
 3924 0098 2046     		mov	r0, r4
 3925 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3926              	.LVL345:
 3927              	.L364:
 3928              		.align	2
 3929              	.L363:
 3930 009c 00000000 		.word	.LANCHOR0
 3931 00a0 04ED00E0 		.word	-536810236
 3932              		.cfi_endproc
 3933              	.LFE638:
 3934              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3935              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3936              		.align	2
 3937              		.global	xTaskGenericNotify
 3938              		.thumb
 3939              		.thumb_func
 3940              		.type	xTaskGenericNotify, %function
 3941              	xTaskGenericNotify:
 3942              	.LFB639:
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 170


 3943              		.loc 1 4575 0
 3944              		.cfi_startproc
 3945              		@ args = 0, pretend = 0, frame = 0
 3946              		@ frame_needed = 0, uses_anonymous_args = 0
 3947              	.LVL346:
 3948 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3949              		.cfi_def_cfa_offset 24
 3950              		.cfi_offset 3, -24
 3951              		.cfi_offset 4, -20
 3952              		.cfi_offset 5, -16
 3953              		.cfi_offset 6, -12
 3954              		.cfi_offset 7, -8
 3955              		.cfi_offset 14, -4
 3956              	.LVL347:
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3957              		.loc 1 4580 0
 3958 0002 40B9     		cbnz	r0, .L366
 3959              	.LBB170:
 3960              	.LBB171:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3961              		.loc 2 156 0
 3962              		.syntax unified
 3963              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3964 0004 4FF02F03 			mov r3, #47												
 3965 0008 83F31188 		msr basepri, r3											
 3966 000c BFF36F8F 		isb														
 3967 0010 BFF34F8F 		dsb														
 3968              	
 3969              	@ 0 "" 2
 3970              	.LVL348:
 3971              		.thumb
 3972              		.syntax unified
 3973              	.L367:
 3974 0014 FEE7     		b	.L367
 3975              	.LVL349:
 3976              	.L366:
 3977 0016 0446     		mov	r4, r0
 3978 0018 1F46     		mov	r7, r3
 3979 001a 1546     		mov	r5, r2
 3980 001c 0E46     		mov	r6, r1
 3981              	.LVL350:
 3982              	.LBE171:
 3983              	.LBE170:
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3984              		.loc 1 4583 0
 3985 001e FFF7FEFF 		bl	vPortEnterCritical
 3986              	.LVL351:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3987              		.loc 1 4585 0
 3988 0022 0FB1     		cbz	r7, .L368
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3989              		.loc 1 4587 0
 3990 0024 A36D     		ldr	r3, [r4, #88]
 3991 0026 3B60     		str	r3, [r7]
 3992              	.L368:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3993              		.loc 1 4590 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 171


 3994 0028 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3995 002c DBB2     		uxtb	r3, r3
 3996              	.LVL352:
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3997              		.loc 1 4592 0
 3998 002e 0222     		movs	r2, #2
 3999 0030 84F85C20 		strb	r2, [r4, #92]
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4000              		.loc 1 4594 0
 4001 0034 6A1E     		subs	r2, r5, #1
 4002 0036 032A     		cmp	r2, #3
 4003 0038 15D8     		bhi	.L379
 4004 003a DFE802F0 		tbb	[pc, r2]
 4005              	.L371:
 4006 003e 02       		.byte	(.L370-.L371)/2
 4007 003f 07       		.byte	(.L372-.L371)/2
 4008 0040 0C       		.byte	(.L373-.L371)/2
 4009 0041 0F       		.byte	(.L374-.L371)/2
 4010              		.p2align 1
 4011              	.L370:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4012              		.loc 1 4597 0
 4013 0042 A26D     		ldr	r2, [r4, #88]
 4014 0044 1643     		orrs	r6, r6, r2
 4015              	.LVL353:
 4016 0046 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4017              		.loc 1 4577 0
 4018 0048 0125     		movs	r5, #1
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4019              		.loc 1 4598 0
 4020 004a 0FE0     		b	.L369
 4021              	.LVL354:
 4022              	.L372:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4023              		.loc 1 4601 0
 4024 004c A26D     		ldr	r2, [r4, #88]
 4025 004e 0132     		adds	r2, r2, #1
 4026 0050 A265     		str	r2, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4027              		.loc 1 4577 0
 4028 0052 0125     		movs	r5, #1
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4029              		.loc 1 4602 0
 4030 0054 0AE0     		b	.L369
 4031              	.L373:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4032              		.loc 1 4605 0
 4033 0056 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4034              		.loc 1 4577 0
 4035 0058 0125     		movs	r5, #1
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4036              		.loc 1 4606 0
 4037 005a 07E0     		b	.L369
 4038              	.L374:
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 172


 4039              		.loc 1 4609 0
 4040 005c 022B     		cmp	r3, #2
 4041 005e 04D0     		beq	.L380
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4042              		.loc 1 4611 0
 4043 0060 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4044              		.loc 1 4577 0
 4045 0062 0125     		movs	r5, #1
 4046 0064 02E0     		b	.L369
 4047              	.L379:
 4048 0066 0125     		movs	r5, #1
 4049 0068 00E0     		b	.L369
 4050              	.L380:
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4051              		.loc 1 4616 0
 4052 006a 0025     		movs	r5, #0
 4053              	.LVL355:
 4054              	.L369:
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4055              		.loc 1 4630 0
 4056 006c 012B     		cmp	r3, #1
 4057 006e 2ED1     		bne	.L375
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4058              		.loc 1 4632 0
 4059 0070 261D     		adds	r6, r4, #4
 4060 0072 3046     		mov	r0, r6
 4061 0074 FFF7FEFF 		bl	uxListRemove
 4062              	.LVL356:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4063              		.loc 1 4633 0
 4064 0078 E36A     		ldr	r3, [r4, #44]
 4065 007a 174A     		ldr	r2, .L382
 4066 007c D2F81022 		ldr	r2, [r2, #528]
 4067 0080 9342     		cmp	r3, r2
 4068 0082 02D9     		bls	.L376
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4069              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4070 0084 144A     		ldr	r2, .L382
 4071 0086 C2F81032 		str	r3, [r2, #528]
 4072              	.L376:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4073              		.loc 1 4633 0 discriminator 3
 4074 008a 03EB8303 		add	r3, r3, r3, lsl #2
 4075 008e 9A00     		lsls	r2, r3, #2
 4076 0090 3146     		mov	r1, r6
 4077 0092 1248     		ldr	r0, .L382+4
 4078 0094 1044     		add	r0, r0, r2
 4079 0096 FFF7FEFF 		bl	vListInsertEnd
 4080              	.LVL357:
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4081              		.loc 1 4636 0 is_stmt 1 discriminator 3
 4082 009a A36A     		ldr	r3, [r4, #40]
 4083 009c 43B1     		cbz	r3, .L377
 4084              	.LBB172:
 4085              	.LBB173:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 173


 4086              		.loc 2 156 0
 4087              		.syntax unified
 4088              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4089 009e 4FF02F03 			mov r3, #47												
 4090 00a2 83F31188 		msr basepri, r3											
 4091 00a6 BFF36F8F 		isb														
 4092 00aa BFF34F8F 		dsb														
 4093              	
 4094              	@ 0 "" 2
 4095              	.LVL358:
 4096              		.thumb
 4097              		.syntax unified
 4098              	.L378:
 4099 00ae FEE7     		b	.L378
 4100              	.L377:
 4101              	.LBE173:
 4102              	.LBE172:
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4103              		.loc 1 4654 0
 4104 00b0 E26A     		ldr	r2, [r4, #44]
 4105 00b2 094B     		ldr	r3, .L382
 4106 00b4 D3F80432 		ldr	r3, [r3, #516]
 4107 00b8 DB6A     		ldr	r3, [r3, #44]
 4108 00ba 9A42     		cmp	r2, r3
 4109 00bc 07D9     		bls	.L375
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4110              		.loc 1 4658 0
 4111 00be 4FF08052 		mov	r2, #268435456
 4112 00c2 074B     		ldr	r3, .L382+8
 4113 00c4 1A60     		str	r2, [r3]
 4114              		.syntax unified
 4115              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4116 00c6 BFF34F8F 		dsb
 4117              	@ 0 "" 2
 4118              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4119 00ca BFF36F8F 		isb
 4120              	@ 0 "" 2
 4121              		.thumb
 4122              		.syntax unified
 4123              	.L375:
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4124              		.loc 1 4670 0
 4125 00ce FFF7FEFF 		bl	vPortExitCritical
 4126              	.LVL359:
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4127              		.loc 1 4673 0
 4128 00d2 2846     		mov	r0, r5
 4129 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4130              	.LVL360:
 4131              	.L383:
 4132 00d6 00BF     		.align	2
 4133              	.L382:
 4134 00d8 00000000 		.word	.LANCHOR0
 4135 00dc 30000000 		.word	.LANCHOR0+48
 4136 00e0 04ED00E0 		.word	-536810236
 4137              		.cfi_endproc
 4138              	.LFE639:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 174


 4139              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 4140              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4141              		.align	2
 4142              		.global	xTaskGenericNotifyFromISR
 4143              		.thumb
 4144              		.thumb_func
 4145              		.type	xTaskGenericNotifyFromISR, %function
 4146              	xTaskGenericNotifyFromISR:
 4147              	.LFB640:
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4148              		.loc 1 4681 0
 4149              		.cfi_startproc
 4150              		@ args = 4, pretend = 0, frame = 0
 4151              		@ frame_needed = 0, uses_anonymous_args = 0
 4152              	.LVL361:
 4153 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4154              		.cfi_def_cfa_offset 32
 4155              		.cfi_offset 3, -32
 4156              		.cfi_offset 4, -28
 4157              		.cfi_offset 5, -24
 4158              		.cfi_offset 6, -20
 4159              		.cfi_offset 7, -16
 4160              		.cfi_offset 8, -12
 4161              		.cfi_offset 9, -8
 4162              		.cfi_offset 14, -4
 4163 0004 089E     		ldr	r6, [sp, #32]
 4164              	.LVL362:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4165              		.loc 1 4687 0
 4166 0006 40B9     		cbnz	r0, .L385
 4167              	.LBB174:
 4168              	.LBB175:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4169              		.loc 2 156 0
 4170              		.syntax unified
 4171              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4172 0008 4FF02F03 			mov r3, #47												
 4173 000c 83F31188 		msr basepri, r3											
 4174 0010 BFF36F8F 		isb														
 4175 0014 BFF34F8F 		dsb														
 4176              	
 4177              	@ 0 "" 2
 4178              	.LVL363:
 4179              		.thumb
 4180              		.syntax unified
 4181              	.L386:
 4182 0018 FEE7     		b	.L386
 4183              	.LVL364:
 4184              	.L385:
 4185 001a 0446     		mov	r4, r0
 4186 001c 9946     		mov	r9, r3
 4187 001e 1546     		mov	r5, r2
 4188 0020 8846     		mov	r8, r1
 4189              	.LBE175:
 4190              	.LBE174:
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4191              		.loc 1 4705 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 175


 4192 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4193              	.LVL365:
 4194              	.LBB176:
 4195              	.LBB177:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4196              		.loc 2 172 0
 4197              		.syntax unified
 4198              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4199 0026 EFF31187 			mrs r7, basepri											
 4200 002a 4FF02F03 		mov r3, #47												
 4201 002e 83F31188 		msr basepri, r3											
 4202 0032 BFF36F8F 		isb														
 4203 0036 BFF34F8F 		dsb														
 4204              	
 4205              	@ 0 "" 2
 4206              		.thumb
 4207              		.syntax unified
 4208              	.LBE177:
 4209              	.LBE176:
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4210              		.loc 1 4711 0
 4211 003a B9F1000F 		cmp	r9, #0
 4212 003e 02D0     		beq	.L387
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4213              		.loc 1 4713 0
 4214 0040 A36D     		ldr	r3, [r4, #88]
 4215 0042 C9F80030 		str	r3, [r9]
 4216              	.L387:
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4217              		.loc 1 4716 0
 4218 0046 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4219 004a DBB2     		uxtb	r3, r3
 4220              	.LVL366:
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4221              		.loc 1 4717 0
 4222 004c 0222     		movs	r2, #2
 4223 004e 84F85C20 		strb	r2, [r4, #92]
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4224              		.loc 1 4719 0
 4225 0052 6A1E     		subs	r2, r5, #1
 4226 0054 032A     		cmp	r2, #3
 4227 0056 18D8     		bhi	.L401
 4228 0058 DFE802F0 		tbb	[pc, r2]
 4229              	.L390:
 4230 005c 02       		.byte	(.L389-.L390)/2
 4231 005d 08       		.byte	(.L391-.L390)/2
 4232 005e 0D       		.byte	(.L392-.L390)/2
 4233 005f 11       		.byte	(.L393-.L390)/2
 4234              		.p2align 1
 4235              	.L389:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4236              		.loc 1 4722 0
 4237 0060 A26D     		ldr	r2, [r4, #88]
 4238 0062 42EA0802 		orr	r2, r2, r8
 4239 0066 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4240              		.loc 1 4684 0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 176


 4241 0068 0125     		movs	r5, #1
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4242              		.loc 1 4723 0
 4243 006a 11E0     		b	.L388
 4244              	.L391:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4245              		.loc 1 4726 0
 4246 006c A26D     		ldr	r2, [r4, #88]
 4247 006e 0132     		adds	r2, r2, #1
 4248 0070 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4249              		.loc 1 4684 0
 4250 0072 0125     		movs	r5, #1
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4251              		.loc 1 4727 0
 4252 0074 0CE0     		b	.L388
 4253              	.L392:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4254              		.loc 1 4730 0
 4255 0076 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4256              		.loc 1 4684 0
 4257 007a 0125     		movs	r5, #1
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4258              		.loc 1 4731 0
 4259 007c 08E0     		b	.L388
 4260              	.L393:
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4261              		.loc 1 4734 0
 4262 007e 022B     		cmp	r3, #2
 4263 0080 05D0     		beq	.L402
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4264              		.loc 1 4736 0
 4265 0082 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4266              		.loc 1 4684 0
 4267 0086 0125     		movs	r5, #1
 4268 0088 02E0     		b	.L388
 4269              	.L401:
 4270 008a 0125     		movs	r5, #1
 4271 008c 00E0     		b	.L388
 4272              	.L402:
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4273              		.loc 1 4741 0
 4274 008e 0025     		movs	r5, #0
 4275              	.L388:
 4276              	.LVL367:
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4277              		.loc 1 4755 0
 4278 0090 012B     		cmp	r3, #1
 4279 0092 39D1     		bne	.L394
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4280              		.loc 1 4758 0
 4281 0094 A36A     		ldr	r3, [r4, #40]
 4282              	.LVL368:
 4283 0096 43B1     		cbz	r3, .L395
 4284              	.LBB178:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 177


 4285              	.LBB179:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4286              		.loc 2 156 0
 4287              		.syntax unified
 4288              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4289 0098 4FF02F03 			mov r3, #47												
 4290 009c 83F31188 		msr basepri, r3											
 4291 00a0 BFF36F8F 		isb														
 4292 00a4 BFF34F8F 		dsb														
 4293              	
 4294              	@ 0 "" 2
 4295              	.LVL369:
 4296              		.thumb
 4297              		.syntax unified
 4298              	.L396:
 4299 00a8 FEE7     		b	.L396
 4300              	.L395:
 4301              	.LBE179:
 4302              	.LBE178:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4303              		.loc 1 4760 0
 4304 00aa 1A4B     		ldr	r3, .L404
 4305 00ac D3F81C32 		ldr	r3, [r3, #540]
 4306 00b0 B3B9     		cbnz	r3, .L397
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4307              		.loc 1 4762 0
 4308 00b2 04F10408 		add	r8, r4, #4
 4309              	.LVL370:
 4310 00b6 4046     		mov	r0, r8
 4311 00b8 FFF7FEFF 		bl	uxListRemove
 4312              	.LVL371:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4313              		.loc 1 4763 0
 4314 00bc E36A     		ldr	r3, [r4, #44]
 4315 00be 154A     		ldr	r2, .L404
 4316 00c0 D2F81022 		ldr	r2, [r2, #528]
 4317 00c4 9342     		cmp	r3, r2
 4318 00c6 02D9     		bls	.L398
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4319              		.loc 1 4763 0 is_stmt 0 discriminator 1
 4320 00c8 124A     		ldr	r2, .L404
 4321 00ca C2F81032 		str	r3, [r2, #528]
 4322              	.L398:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4323              		.loc 1 4763 0 discriminator 3
 4324 00ce 03EB8303 		add	r3, r3, r3, lsl #2
 4325 00d2 9A00     		lsls	r2, r3, #2
 4326 00d4 4146     		mov	r1, r8
 4327 00d6 1048     		ldr	r0, .L404+4
 4328 00d8 1044     		add	r0, r0, r2
 4329 00da FFF7FEFF 		bl	vListInsertEnd
 4330              	.LVL372:
 4331 00de 04E0     		b	.L399
 4332              	.LVL373:
 4333              	.L397:
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4334              		.loc 1 4769 0 is_stmt 1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 178


 4335 00e0 04F11801 		add	r1, r4, #24
 4336 00e4 0D48     		ldr	r0, .L404+8
 4337 00e6 FFF7FEFF 		bl	vListInsertEnd
 4338              	.LVL374:
 4339              	.L399:
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4340              		.loc 1 4772 0
 4341 00ea E26A     		ldr	r2, [r4, #44]
 4342 00ec 094B     		ldr	r3, .L404
 4343 00ee D3F80432 		ldr	r3, [r3, #516]
 4344 00f2 DB6A     		ldr	r3, [r3, #44]
 4345 00f4 9A42     		cmp	r2, r3
 4346 00f6 07D9     		bls	.L394
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4347              		.loc 1 4776 0
 4348 00f8 16B1     		cbz	r6, .L400
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4349              		.loc 1 4778 0
 4350 00fa 0123     		movs	r3, #1
 4351 00fc 3360     		str	r3, [r6]
 4352 00fe 03E0     		b	.L394
 4353              	.L400:
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4354              		.loc 1 4785 0
 4355 0100 0122     		movs	r2, #1
 4356 0102 044B     		ldr	r3, .L404
 4357 0104 C3F82C22 		str	r2, [r3, #556]
 4358              	.L394:
 4359              	.LVL375:
 4360              	.LBB180:
 4361              	.LBB181:
 4362              		.loc 2 190 0
 4363              		.syntax unified
 4364              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4365 0108 87F31188 			msr basepri, r7	
 4366              	@ 0 "" 2
 4367              	.LVL376:
 4368              		.thumb
 4369              		.syntax unified
 4370              	.LBE181:
 4371              	.LBE180:
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4372              		.loc 1 4797 0
 4373 010c 2846     		mov	r0, r5
 4374 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4375              	.LVL377:
 4376              	.L405:
 4377 0112 00BF     		.align	2
 4378              	.L404:
 4379 0114 00000000 		.word	.LANCHOR0
 4380 0118 30000000 		.word	.LANCHOR0+48
 4381 011c 14000000 		.word	.LANCHOR0+20
 4382              		.cfi_endproc
 4383              	.LFE640:
 4384              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4385              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4386              		.align	2
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 179


 4387              		.global	vTaskNotifyGiveFromISR
 4388              		.thumb
 4389              		.thumb_func
 4390              		.type	vTaskNotifyGiveFromISR, %function
 4391              	vTaskNotifyGiveFromISR:
 4392              	.LFB641:
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4393              		.loc 1 4805 0
 4394              		.cfi_startproc
 4395              		@ args = 0, pretend = 0, frame = 0
 4396              		@ frame_needed = 0, uses_anonymous_args = 0
 4397              	.LVL378:
 4398 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4399              		.cfi_def_cfa_offset 24
 4400              		.cfi_offset 3, -24
 4401              		.cfi_offset 4, -20
 4402              		.cfi_offset 5, -16
 4403              		.cfi_offset 6, -12
 4404              		.cfi_offset 7, -8
 4405              		.cfi_offset 14, -4
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4406              		.loc 1 4810 0
 4407 0002 40B9     		cbnz	r0, .L407
 4408              	.LBB182:
 4409              	.LBB183:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4410              		.loc 2 156 0
 4411              		.syntax unified
 4412              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4413 0004 4FF02F03 			mov r3, #47												
 4414 0008 83F31188 		msr basepri, r3											
 4415 000c BFF36F8F 		isb														
 4416 0010 BFF34F8F 		dsb														
 4417              	
 4418              	@ 0 "" 2
 4419              	.LVL379:
 4420              		.thumb
 4421              		.syntax unified
 4422              	.L408:
 4423 0014 FEE7     		b	.L408
 4424              	.L407:
 4425 0016 0446     		mov	r4, r0
 4426 0018 0D46     		mov	r5, r1
 4427              	.LBE183:
 4428              	.LBE182:
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4429              		.loc 1 4828 0
 4430 001a FFF7FEFF 		bl	vPortValidateInterruptPriority
 4431              	.LVL380:
 4432              	.LBB184:
 4433              	.LBB185:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4434              		.loc 2 172 0
 4435              		.syntax unified
 4436              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4437 001e EFF31186 			mrs r6, basepri											
 4438 0022 4FF02F03 		mov r3, #47												
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 180


 4439 0026 83F31188 		msr basepri, r3											
 4440 002a BFF36F8F 		isb														
 4441 002e BFF34F8F 		dsb														
 4442              	
 4443              	@ 0 "" 2
 4444              		.thumb
 4445              		.syntax unified
 4446              	.LBE185:
 4447              	.LBE184:
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4448              		.loc 1 4834 0
 4449 0032 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4450 0036 DBB2     		uxtb	r3, r3
 4451              	.LVL381:
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4452              		.loc 1 4835 0
 4453 0038 0222     		movs	r2, #2
 4454 003a 84F85C20 		strb	r2, [r4, #92]
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4455              		.loc 1 4839 0
 4456 003e A26D     		ldr	r2, [r4, #88]
 4457 0040 0132     		adds	r2, r2, #1
 4458 0042 A265     		str	r2, [r4, #88]
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4459              		.loc 1 4845 0
 4460 0044 012B     		cmp	r3, #1
 4461 0046 38D1     		bne	.L409
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4462              		.loc 1 4848 0
 4463 0048 A36A     		ldr	r3, [r4, #40]
 4464              	.LVL382:
 4465 004a 43B1     		cbz	r3, .L410
 4466              	.LBB186:
 4467              	.LBB187:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4468              		.loc 2 156 0
 4469              		.syntax unified
 4470              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4471 004c 4FF02F03 			mov r3, #47												
 4472 0050 83F31188 		msr basepri, r3											
 4473 0054 BFF36F8F 		isb														
 4474 0058 BFF34F8F 		dsb														
 4475              	
 4476              	@ 0 "" 2
 4477              	.LVL383:
 4478              		.thumb
 4479              		.syntax unified
 4480              	.L411:
 4481 005c FEE7     		b	.L411
 4482              	.L410:
 4483              	.LBE187:
 4484              	.LBE186:
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4485              		.loc 1 4850 0
 4486 005e 184B     		ldr	r3, .L417
 4487 0060 D3F81C32 		ldr	r3, [r3, #540]
 4488 0064 ABB9     		cbnz	r3, .L412
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 181


4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4489              		.loc 1 4852 0
 4490 0066 271D     		adds	r7, r4, #4
 4491 0068 3846     		mov	r0, r7
 4492 006a FFF7FEFF 		bl	uxListRemove
 4493              	.LVL384:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4494              		.loc 1 4853 0
 4495 006e E36A     		ldr	r3, [r4, #44]
 4496 0070 134A     		ldr	r2, .L417
 4497 0072 D2F81022 		ldr	r2, [r2, #528]
 4498 0076 9342     		cmp	r3, r2
 4499 0078 02D9     		bls	.L413
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4500              		.loc 1 4853 0 is_stmt 0 discriminator 1
 4501 007a 114A     		ldr	r2, .L417
 4502 007c C2F81032 		str	r3, [r2, #528]
 4503              	.L413:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4504              		.loc 1 4853 0 discriminator 3
 4505 0080 03EB8303 		add	r3, r3, r3, lsl #2
 4506 0084 9A00     		lsls	r2, r3, #2
 4507 0086 3946     		mov	r1, r7
 4508 0088 0E48     		ldr	r0, .L417+4
 4509 008a 1044     		add	r0, r0, r2
 4510 008c FFF7FEFF 		bl	vListInsertEnd
 4511              	.LVL385:
 4512 0090 04E0     		b	.L414
 4513              	.L412:
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4514              		.loc 1 4859 0 is_stmt 1
 4515 0092 04F11801 		add	r1, r4, #24
 4516 0096 0C48     		ldr	r0, .L417+8
 4517 0098 FFF7FEFF 		bl	vListInsertEnd
 4518              	.LVL386:
 4519              	.L414:
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4520              		.loc 1 4862 0
 4521 009c E26A     		ldr	r2, [r4, #44]
 4522 009e 084B     		ldr	r3, .L417
 4523 00a0 D3F80432 		ldr	r3, [r3, #516]
 4524 00a4 DB6A     		ldr	r3, [r3, #44]
 4525 00a6 9A42     		cmp	r2, r3
 4526 00a8 07D9     		bls	.L409
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4527              		.loc 1 4866 0
 4528 00aa 15B1     		cbz	r5, .L415
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4529              		.loc 1 4868 0
 4530 00ac 0123     		movs	r3, #1
 4531 00ae 2B60     		str	r3, [r5]
 4532 00b0 03E0     		b	.L409
 4533              	.L415:
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4534              		.loc 1 4875 0
 4535 00b2 0122     		movs	r2, #1
 4536 00b4 024B     		ldr	r3, .L417
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 182


 4537 00b6 C3F82C22 		str	r2, [r3, #556]
 4538              	.L409:
 4539              	.LVL387:
 4540              	.LBB188:
 4541              	.LBB189:
 4542              		.loc 2 190 0
 4543              		.syntax unified
 4544              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4545 00ba 86F31188 			msr basepri, r6	
 4546              	@ 0 "" 2
 4547              	.LVL388:
 4548              		.thumb
 4549              		.syntax unified
 4550 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4551              	.LVL389:
 4552              	.L418:
 4553              		.align	2
 4554              	.L417:
 4555 00c0 00000000 		.word	.LANCHOR0
 4556 00c4 30000000 		.word	.LANCHOR0+48
 4557 00c8 14000000 		.word	.LANCHOR0+20
 4558              	.LBE189:
 4559              	.LBE188:
 4560              		.cfi_endproc
 4561              	.LFE641:
 4562              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4563              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4564              		.align	2
 4565              		.global	xTaskNotifyStateClear
 4566              		.thumb
 4567              		.thumb_func
 4568              		.type	xTaskNotifyStateClear, %function
 4569              	xTaskNotifyStateClear:
 4570              	.LFB642:
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 4571              		.loc 1 4894 0
 4572              		.cfi_startproc
 4573              		@ args = 0, pretend = 0, frame = 0
 4574              		@ frame_needed = 0, uses_anonymous_args = 0
 4575              	.LVL390:
 4576 0000 10B5     		push	{r4, lr}
 4577              		.cfi_def_cfa_offset 8
 4578              		.cfi_offset 4, -8
 4579              		.cfi_offset 14, -4
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4580              		.loc 1 4900 0
 4581 0002 0446     		mov	r4, r0
 4582 0004 10B9     		cbnz	r0, .L420
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4583              		.loc 1 4900 0 is_stmt 0 discriminator 1
 4584 0006 0A4B     		ldr	r3, .L424
 4585 0008 D3F80442 		ldr	r4, [r3, #516]
 4586              	.LVL391:
 4587              	.L420:
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4588              		.loc 1 4902 0 is_stmt 1 discriminator 4
 4589 000c FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 183


 4590              	.LVL392:
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4591              		.loc 1 4904 0 discriminator 4
 4592 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4593 0014 DBB2     		uxtb	r3, r3
 4594 0016 022B     		cmp	r3, #2
 4595 0018 04D1     		bne	.L422
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 4596              		.loc 1 4906 0
 4597 001a 0023     		movs	r3, #0
 4598 001c 84F85C30 		strb	r3, [r4, #92]
 4599              	.LVL393:
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4600              		.loc 1 4907 0
 4601 0020 0124     		movs	r4, #1
 4602              	.LVL394:
 4603 0022 00E0     		b	.L421
 4604              	.LVL395:
 4605              	.L422:
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4606              		.loc 1 4911 0
 4607 0024 0024     		movs	r4, #0
 4608              	.LVL396:
 4609              	.L421:
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4610              		.loc 1 4914 0
 4611 0026 FFF7FEFF 		bl	vPortExitCritical
 4612              	.LVL397:
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4613              		.loc 1 4917 0
 4614 002a 2046     		mov	r0, r4
 4615 002c 10BD     		pop	{r4, pc}
 4616              	.LVL398:
 4617              	.L425:
 4618 002e 00BF     		.align	2
 4619              	.L424:
 4620 0030 00000000 		.word	.LANCHOR0
 4621              		.cfi_endproc
 4622              	.LFE642:
 4623              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4624              		.global	pxCurrentTCB
 4625              		.section	.rodata.str1.4,"aMS",%progbits,1
 4626              		.align	2
 4627              	.LC0:
 4628 0000 49444C45 		.ascii	"IDLE\000"
 4628      00
 4629              		.bss
 4630              		.align	2
 4631              		.set	.LANCHOR0,. + 0
 4632              		.type	xSuspendedTaskList, %object
 4633              		.size	xSuspendedTaskList, 20
 4634              	xSuspendedTaskList:
 4635 0000 00000000 		.space	20
 4635      00000000 
 4635      00000000 
 4635      00000000 
 4635      00000000 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 184


 4636              		.type	xPendingReadyList, %object
 4637              		.size	xPendingReadyList, 20
 4638              	xPendingReadyList:
 4639 0014 00000000 		.space	20
 4639      00000000 
 4639      00000000 
 4639      00000000 
 4639      00000000 
 4640              		.type	pxDelayedTaskList, %object
 4641              		.size	pxDelayedTaskList, 4
 4642              	pxDelayedTaskList:
 4643 0028 00000000 		.space	4
 4644              		.type	xNextTaskUnblockTime, %object
 4645              		.size	xNextTaskUnblockTime, 4
 4646              	xNextTaskUnblockTime:
 4647 002c 00000000 		.space	4
 4648              		.type	pxReadyTasksLists, %object
 4649              		.size	pxReadyTasksLists, 400
 4650              	pxReadyTasksLists:
 4651 0030 00000000 		.space	400
 4651      00000000 
 4651      00000000 
 4651      00000000 
 4651      00000000 
 4652              		.type	xDelayedTaskList1, %object
 4653              		.size	xDelayedTaskList1, 20
 4654              	xDelayedTaskList1:
 4655 01c0 00000000 		.space	20
 4655      00000000 
 4655      00000000 
 4655      00000000 
 4655      00000000 
 4656              		.type	xDelayedTaskList2, %object
 4657              		.size	xDelayedTaskList2, 20
 4658              	xDelayedTaskList2:
 4659 01d4 00000000 		.space	20
 4659      00000000 
 4659      00000000 
 4659      00000000 
 4659      00000000 
 4660              		.type	xTasksWaitingTermination, %object
 4661              		.size	xTasksWaitingTermination, 20
 4662              	xTasksWaitingTermination:
 4663 01e8 00000000 		.space	20
 4663      00000000 
 4663      00000000 
 4663      00000000 
 4663      00000000 
 4664              		.type	pxOverflowDelayedTaskList, %object
 4665              		.size	pxOverflowDelayedTaskList, 4
 4666              	pxOverflowDelayedTaskList:
 4667 01fc 00000000 		.space	4
 4668              		.type	uxCurrentNumberOfTasks, %object
 4669              		.size	uxCurrentNumberOfTasks, 4
 4670              	uxCurrentNumberOfTasks:
 4671 0200 00000000 		.space	4
 4672              		.type	pxCurrentTCB, %object
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 185


 4673              		.size	pxCurrentTCB, 4
 4674              	pxCurrentTCB:
 4675 0204 00000000 		.space	4
 4676              		.type	xSchedulerRunning, %object
 4677              		.size	xSchedulerRunning, 4
 4678              	xSchedulerRunning:
 4679 0208 00000000 		.space	4
 4680              		.type	uxTaskNumber, %object
 4681              		.size	uxTaskNumber, 4
 4682              	uxTaskNumber:
 4683 020c 00000000 		.space	4
 4684              		.type	uxTopReadyPriority, %object
 4685              		.size	uxTopReadyPriority, 4
 4686              	uxTopReadyPriority:
 4687 0210 00000000 		.space	4
 4688              		.type	uxDeletedTasksWaitingCleanUp, %object
 4689              		.size	uxDeletedTasksWaitingCleanUp, 4
 4690              	uxDeletedTasksWaitingCleanUp:
 4691 0214 00000000 		.space	4
 4692              		.type	xTickCount, %object
 4693              		.size	xTickCount, 4
 4694              	xTickCount:
 4695 0218 00000000 		.space	4
 4696              		.type	uxSchedulerSuspended, %object
 4697              		.size	uxSchedulerSuspended, 4
 4698              	uxSchedulerSuspended:
 4699 021c 00000000 		.space	4
 4700              		.type	xIdleTaskHandle, %object
 4701              		.size	xIdleTaskHandle, 4
 4702              	xIdleTaskHandle:
 4703 0220 00000000 		.space	4
 4704              		.type	xNumOfOverflows, %object
 4705              		.size	xNumOfOverflows, 4
 4706              	xNumOfOverflows:
 4707 0224 00000000 		.space	4
 4708              		.type	uxPendedTicks, %object
 4709              		.size	uxPendedTicks, 4
 4710              	uxPendedTicks:
 4711 0228 00000000 		.space	4
 4712              		.type	xYieldPending, %object
 4713              		.size	xYieldPending, 4
 4714              	xYieldPending:
 4715 022c 00000000 		.space	4
 4716              		.text
 4717              	.Letext0:
 4718              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4719              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4720              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4721              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/rtc/cy_rtc.h"
 4722              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_spi.h"
 4723              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
 4724              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
 4725              		.file 10 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack.h"
 4726              		.file 11 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack_host_main.h"
 4727              		.file 12 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_gap.h"
 4728              		.file 13 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_cts.h"
 4729              		.file 14 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_event_handler.h"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 186


 4730              		.file 15 "Generated_Source\\PSoC6/ADC.h"
 4731              		.file 16 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/projdefs.h"
 4732              		.file 17 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/list.h"
 4733              		.file 18 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/task.h"
 4734              		.file 19 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4735              		.file 20 "Generated_Source\\PSoC6/DEBUG_UART.h"
 4736              		.file 21 "Generated_Source\\PSoC6/RTC.h"
 4737              		.file 22 "Generated_Source\\PSoC6/CY_EINK_SPIM.h"
 4738              		.file 23 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/portable.h"
 4739              		.file 24 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 4740              		.file 25 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/timers.h"
 4741              		.section	.debug_info,"",%progbits
 4742              	.Ldebug_info0:
 4743 0000 9F2B0000 		.4byte	0x2b9f
 4744 0004 0400     		.2byte	0x4
 4745 0006 00000000 		.4byte	.Ldebug_abbrev0
 4746 000a 04       		.byte	0x4
 4747 000b 01       		.uleb128 0x1
 4748 000c 5D060000 		.4byte	.LASF437
 4749 0010 0C       		.byte	0xc
 4750 0011 28210000 		.4byte	.LASF438
 4751 0015 2C220000 		.4byte	.LASF439
 4752 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4753 001d 00000000 		.4byte	0
 4754 0021 00000000 		.4byte	.Ldebug_line0
 4755 0025 02       		.uleb128 0x2
 4756 0026 3D0D0000 		.4byte	.LASF4
 4757 002a 03       		.byte	0x3
 4758 002b D8       		.byte	0xd8
 4759 002c 30000000 		.4byte	0x30
 4760 0030 03       		.uleb128 0x3
 4761 0031 04       		.byte	0x4
 4762 0032 07       		.byte	0x7
 4763 0033 FE020000 		.4byte	.LASF0
 4764 0037 04       		.uleb128 0x4
 4765 0038 04       		.byte	0x4
 4766 0039 05       		.byte	0x5
 4767 003a 696E7400 		.ascii	"int\000"
 4768 003e 03       		.uleb128 0x3
 4769 003f 08       		.byte	0x8
 4770 0040 05       		.byte	0x5
 4771 0041 44140000 		.4byte	.LASF1
 4772 0045 03       		.uleb128 0x3
 4773 0046 08       		.byte	0x8
 4774 0047 04       		.byte	0x4
 4775 0048 C3180000 		.4byte	.LASF2
 4776 004c 03       		.uleb128 0x3
 4777 004d 01       		.byte	0x1
 4778 004e 06       		.byte	0x6
 4779 004f 10230000 		.4byte	.LASF3
 4780 0053 02       		.uleb128 0x2
 4781 0054 7D1D0000 		.4byte	.LASF5
 4782 0058 04       		.byte	0x4
 4783 0059 1D       		.byte	0x1d
 4784 005a 5E000000 		.4byte	0x5e
 4785 005e 03       		.uleb128 0x3
 4786 005f 01       		.byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 187


 4787 0060 08       		.byte	0x8
 4788 0061 BA190000 		.4byte	.LASF6
 4789 0065 03       		.uleb128 0x3
 4790 0066 02       		.byte	0x2
 4791 0067 05       		.byte	0x5
 4792 0068 E81A0000 		.4byte	.LASF7
 4793 006c 02       		.uleb128 0x2
 4794 006d 510B0000 		.4byte	.LASF8
 4795 0071 04       		.byte	0x4
 4796 0072 2B       		.byte	0x2b
 4797 0073 77000000 		.4byte	0x77
 4798 0077 03       		.uleb128 0x3
 4799 0078 02       		.byte	0x2
 4800 0079 07       		.byte	0x7
 4801 007a 1C230000 		.4byte	.LASF9
 4802 007e 02       		.uleb128 0x2
 4803 007f D6030000 		.4byte	.LASF10
 4804 0083 04       		.byte	0x4
 4805 0084 3F       		.byte	0x3f
 4806 0085 89000000 		.4byte	0x89
 4807 0089 03       		.uleb128 0x3
 4808 008a 04       		.byte	0x4
 4809 008b 05       		.byte	0x5
 4810 008c 651B0000 		.4byte	.LASF11
 4811 0090 02       		.uleb128 0x2
 4812 0091 D91F0000 		.4byte	.LASF12
 4813 0095 04       		.byte	0x4
 4814 0096 41       		.byte	0x41
 4815 0097 9B000000 		.4byte	0x9b
 4816 009b 03       		.uleb128 0x3
 4817 009c 04       		.byte	0x4
 4818 009d 07       		.byte	0x7
 4819 009e E41E0000 		.4byte	.LASF13
 4820 00a2 03       		.uleb128 0x3
 4821 00a3 08       		.byte	0x8
 4822 00a4 07       		.byte	0x7
 4823 00a5 29090000 		.4byte	.LASF14
 4824 00a9 03       		.uleb128 0x3
 4825 00aa 04       		.byte	0x4
 4826 00ab 07       		.byte	0x7
 4827 00ac BC1E0000 		.4byte	.LASF15
 4828 00b0 05       		.uleb128 0x5
 4829 00b1 04       		.byte	0x4
 4830 00b2 06       		.uleb128 0x6
 4831 00b3 04       		.byte	0x4
 4832 00b4 B8000000 		.4byte	0xb8
 4833 00b8 03       		.uleb128 0x3
 4834 00b9 01       		.byte	0x1
 4835 00ba 08       		.byte	0x8
 4836 00bb D9100000 		.4byte	.LASF16
 4837 00bf 06       		.uleb128 0x6
 4838 00c0 04       		.byte	0x4
 4839 00c1 C5000000 		.4byte	0xc5
 4840 00c5 07       		.uleb128 0x7
 4841 00c6 B8000000 		.4byte	0xb8
 4842 00ca 02       		.uleb128 0x2
 4843 00cb 8B120000 		.4byte	.LASF17
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 188


 4844 00cf 05       		.byte	0x5
 4845 00d0 18       		.byte	0x18
 4846 00d1 53000000 		.4byte	0x53
 4847 00d5 02       		.uleb128 0x2
 4848 00d6 07190000 		.4byte	.LASF18
 4849 00da 05       		.byte	0x5
 4850 00db 24       		.byte	0x24
 4851 00dc 6C000000 		.4byte	0x6c
 4852 00e0 02       		.uleb128 0x2
 4853 00e1 291F0000 		.4byte	.LASF19
 4854 00e5 05       		.byte	0x5
 4855 00e6 2C       		.byte	0x2c
 4856 00e7 7E000000 		.4byte	0x7e
 4857 00eb 02       		.uleb128 0x2
 4858 00ec 43030000 		.4byte	.LASF20
 4859 00f0 05       		.byte	0x5
 4860 00f1 30       		.byte	0x30
 4861 00f2 90000000 		.4byte	0x90
 4862 00f6 08       		.uleb128 0x8
 4863 00f7 EB000000 		.4byte	0xeb
 4864 00fb 08       		.uleb128 0x8
 4865 00fc CA000000 		.4byte	0xca
 4866 0100 03       		.uleb128 0x3
 4867 0101 04       		.byte	0x4
 4868 0102 04       		.byte	0x4
 4869 0103 151F0000 		.4byte	.LASF21
 4870 0107 03       		.uleb128 0x3
 4871 0108 08       		.byte	0x8
 4872 0109 04       		.byte	0x4
 4873 010a 580D0000 		.4byte	.LASF22
 4874 010e 06       		.uleb128 0x6
 4875 010f 04       		.byte	0x4
 4876 0110 EB000000 		.4byte	0xeb
 4877 0114 03       		.uleb128 0x3
 4878 0115 01       		.byte	0x1
 4879 0116 02       		.byte	0x2
 4880 0117 D50F0000 		.4byte	.LASF23
 4881 011b 09       		.uleb128 0x9
 4882 011c 01       		.byte	0x1
 4883 011d 5E000000 		.4byte	0x5e
 4884 0121 06       		.byte	0x6
 4885 0122 6A01     		.2byte	0x16a
 4886 0124 35010000 		.4byte	0x135
 4887 0128 0A       		.uleb128 0xa
 4888 0129 9A120000 		.4byte	.LASF24
 4889 012d 00       		.byte	0
 4890 012e 0A       		.uleb128 0xa
 4891 012f 6E1B0000 		.4byte	.LASF25
 4892 0133 01       		.byte	0x1
 4893 0134 00       		.byte	0
 4894 0135 0B       		.uleb128 0xb
 4895 0136 5C0B0000 		.4byte	.LASF26
 4896 013a 06       		.byte	0x6
 4897 013b 6D01     		.2byte	0x16d
 4898 013d 1B010000 		.4byte	0x11b
 4899 0141 0C       		.uleb128 0xc
 4900 0142 18       		.byte	0x18
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 189


 4901 0143 06       		.byte	0x6
 4902 0144 CE01     		.2byte	0x1ce
 4903 0146 99010000 		.4byte	0x199
 4904 014a 0D       		.uleb128 0xd
 4905 014b A1010000 		.4byte	.LASF27
 4906 014f 06       		.byte	0x6
 4907 0150 D001     		.2byte	0x1d0
 4908 0152 35010000 		.4byte	0x135
 4909 0156 00       		.byte	0
 4910 0157 0D       		.uleb128 0xd
 4911 0158 D00F0000 		.4byte	.LASF28
 4912 015c 06       		.byte	0x6
 4913 015d D301     		.2byte	0x1d3
 4914 015f EB000000 		.4byte	0xeb
 4915 0163 04       		.byte	0x4
 4916 0164 0D       		.uleb128 0xd
 4917 0165 CF020000 		.4byte	.LASF29
 4918 0169 06       		.byte	0x6
 4919 016a D501     		.2byte	0x1d5
 4920 016c EB000000 		.4byte	0xeb
 4921 0170 08       		.byte	0x8
 4922 0171 0D       		.uleb128 0xd
 4923 0172 F50D0000 		.4byte	.LASF30
 4924 0176 06       		.byte	0x6
 4925 0177 D801     		.2byte	0x1d8
 4926 0179 EB000000 		.4byte	0xeb
 4927 017d 0C       		.byte	0xc
 4928 017e 0D       		.uleb128 0xd
 4929 017f 821C0000 		.4byte	.LASF31
 4930 0183 06       		.byte	0x6
 4931 0184 DC01     		.2byte	0x1dc
 4932 0186 EB000000 		.4byte	0xeb
 4933 018a 10       		.byte	0x10
 4934 018b 0D       		.uleb128 0xd
 4935 018c D9230000 		.4byte	.LASF32
 4936 0190 06       		.byte	0x6
 4937 0191 E001     		.2byte	0x1e0
 4938 0193 EB000000 		.4byte	0xeb
 4939 0197 14       		.byte	0x14
 4940 0198 00       		.byte	0
 4941 0199 0B       		.uleb128 0xb
 4942 019a 72030000 		.4byte	.LASF33
 4943 019e 06       		.byte	0x6
 4944 019f E201     		.2byte	0x1e2
 4945 01a1 41010000 		.4byte	0x141
 4946 01a5 0C       		.uleb128 0xc
 4947 01a6 30       		.byte	0x30
 4948 01a7 06       		.byte	0x6
 4949 01a8 E501     		.2byte	0x1e5
 4950 01aa C9010000 		.4byte	0x1c9
 4951 01ae 0D       		.uleb128 0xd
 4952 01af 5A1C0000 		.4byte	.LASF34
 4953 01b3 06       		.byte	0x6
 4954 01b4 E701     		.2byte	0x1e7
 4955 01b6 99010000 		.4byte	0x199
 4956 01ba 00       		.byte	0
 4957 01bb 0D       		.uleb128 0xd
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 190


 4958 01bc AB0D0000 		.4byte	.LASF35
 4959 01c0 06       		.byte	0x6
 4960 01c1 E801     		.2byte	0x1e8
 4961 01c3 99010000 		.4byte	0x199
 4962 01c7 18       		.byte	0x18
 4963 01c8 00       		.byte	0
 4964 01c9 0B       		.uleb128 0xb
 4965 01ca E0030000 		.4byte	.LASF36
 4966 01ce 06       		.byte	0x6
 4967 01cf E901     		.2byte	0x1e9
 4968 01d1 A5010000 		.4byte	0x1a5
 4969 01d5 06       		.uleb128 0x6
 4970 01d6 04       		.byte	0x4
 4971 01d7 DB010000 		.4byte	0x1db
 4972 01db 0E       		.uleb128 0xe
 4973 01dc E6010000 		.4byte	0x1e6
 4974 01e0 0F       		.uleb128 0xf
 4975 01e1 EB000000 		.4byte	0xeb
 4976 01e5 00       		.byte	0
 4977 01e6 0B       		.uleb128 0xb
 4978 01e7 77000000 		.4byte	.LASF37
 4979 01eb 07       		.byte	0x7
 4980 01ec BF01     		.2byte	0x1bf
 4981 01ee D5010000 		.4byte	0x1d5
 4982 01f2 10       		.uleb128 0x10
 4983 01f3 571E0000 		.4byte	.LASF49
 4984 01f7 24       		.byte	0x24
 4985 01f8 07       		.byte	0x7
 4986 01f9 4102     		.2byte	0x241
 4987 01fb 75020000 		.4byte	0x275
 4988 01ff 0D       		.uleb128 0xd
 4989 0200 93120000 		.4byte	.LASF38
 4990 0204 07       		.byte	0x7
 4991 0205 4402     		.2byte	0x244
 4992 0207 F6000000 		.4byte	0xf6
 4993 020b 00       		.byte	0
 4994 020c 0D       		.uleb128 0xd
 4995 020d AB0C0000 		.4byte	.LASF39
 4996 0211 07       		.byte	0x7
 4997 0212 4602     		.2byte	0x246
 4998 0214 B0000000 		.4byte	0xb0
 4999 0218 04       		.byte	0x4
 5000 0219 0D       		.uleb128 0xd
 5001 021a 4B250000 		.4byte	.LASF40
 5002 021e 07       		.byte	0x7
 5003 021f 4702     		.2byte	0x247
 5004 0221 EB000000 		.4byte	0xeb
 5005 0225 08       		.byte	0x8
 5006 0226 0D       		.uleb128 0xd
 5007 0227 27120000 		.4byte	.LASF41
 5008 022b 07       		.byte	0x7
 5009 022c 4802     		.2byte	0x248
 5010 022e F6000000 		.4byte	0xf6
 5011 0232 0C       		.byte	0xc
 5012 0233 0D       		.uleb128 0xd
 5013 0234 76180000 		.4byte	.LASF42
 5014 0238 07       		.byte	0x7
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 191


 5015 0239 4A02     		.2byte	0x24a
 5016 023b B0000000 		.4byte	0xb0
 5017 023f 10       		.byte	0x10
 5018 0240 0D       		.uleb128 0xd
 5019 0241 B2160000 		.4byte	.LASF43
 5020 0245 07       		.byte	0x7
 5021 0246 4B02     		.2byte	0x24b
 5022 0248 EB000000 		.4byte	0xeb
 5023 024c 14       		.byte	0x14
 5024 024d 0D       		.uleb128 0xd
 5025 024e 97030000 		.4byte	.LASF44
 5026 0252 07       		.byte	0x7
 5027 0253 4C02     		.2byte	0x24c
 5028 0255 F6000000 		.4byte	0xf6
 5029 0259 18       		.byte	0x18
 5030 025a 0D       		.uleb128 0xd
 5031 025b 440D0000 		.4byte	.LASF45
 5032 025f 07       		.byte	0x7
 5033 0260 5202     		.2byte	0x252
 5034 0262 E6010000 		.4byte	0x1e6
 5035 0266 1C       		.byte	0x1c
 5036 0267 0D       		.uleb128 0xd
 5037 0268 6A120000 		.4byte	.LASF46
 5038 026c 07       		.byte	0x7
 5039 026d 5502     		.2byte	0x255
 5040 026f EB000000 		.4byte	0xeb
 5041 0273 20       		.byte	0x20
 5042 0274 00       		.byte	0
 5043 0275 0B       		.uleb128 0xb
 5044 0276 F6150000 		.4byte	.LASF47
 5045 027a 07       		.byte	0x7
 5046 027b 5802     		.2byte	0x258
 5047 027d F2010000 		.4byte	0x1f2
 5048 0281 0B       		.uleb128 0xb
 5049 0282 AD130000 		.4byte	.LASF48
 5050 0286 08       		.byte	0x8
 5051 0287 AB01     		.2byte	0x1ab
 5052 0289 D5010000 		.4byte	0x1d5
 5053 028d 10       		.uleb128 0x10
 5054 028e CD090000 		.4byte	.LASF50
 5055 0292 38       		.byte	0x38
 5056 0293 08       		.byte	0x8
 5057 0294 4702     		.2byte	0x247
 5058 0296 51030000 		.4byte	0x351
 5059 029a 0D       		.uleb128 0xd
 5060 029b BF010000 		.4byte	.LASF51
 5061 029f 08       		.byte	0x8
 5062 02a0 4A02     		.2byte	0x24a
 5063 02a2 F6000000 		.4byte	0xf6
 5064 02a6 00       		.byte	0
 5065 02a7 0D       		.uleb128 0xd
 5066 02a8 DD070000 		.4byte	.LASF52
 5067 02ac 08       		.byte	0x8
 5068 02ad 4B02     		.2byte	0x24b
 5069 02af F6000000 		.4byte	0xf6
 5070 02b3 04       		.byte	0x4
 5071 02b4 0D       		.uleb128 0xd
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 192


 5072 02b5 B9180000 		.4byte	.LASF53
 5073 02b9 08       		.byte	0x8
 5074 02ba 4D02     		.2byte	0x24d
 5075 02bc B0000000 		.4byte	0xb0
 5076 02c0 08       		.byte	0x8
 5077 02c1 0D       		.uleb128 0xd
 5078 02c2 600F0000 		.4byte	.LASF54
 5079 02c6 08       		.byte	0x8
 5080 02c7 4E02     		.2byte	0x24e
 5081 02c9 EB000000 		.4byte	0xeb
 5082 02cd 0C       		.byte	0xc
 5083 02ce 0D       		.uleb128 0xd
 5084 02cf 17160000 		.4byte	.LASF55
 5085 02d3 08       		.byte	0x8
 5086 02d4 4F02     		.2byte	0x24f
 5087 02d6 F6000000 		.4byte	0xf6
 5088 02da 10       		.byte	0x10
 5089 02db 0D       		.uleb128 0xd
 5090 02dc 2E110000 		.4byte	.LASF56
 5091 02e0 08       		.byte	0x8
 5092 02e1 5002     		.2byte	0x250
 5093 02e3 F6000000 		.4byte	0xf6
 5094 02e7 14       		.byte	0x14
 5095 02e8 0D       		.uleb128 0xd
 5096 02e9 AB0C0000 		.4byte	.LASF39
 5097 02ed 08       		.byte	0x8
 5098 02ee 5202     		.2byte	0x252
 5099 02f0 B0000000 		.4byte	0xb0
 5100 02f4 18       		.byte	0x18
 5101 02f5 0D       		.uleb128 0xd
 5102 02f6 4B250000 		.4byte	.LASF40
 5103 02fa 08       		.byte	0x8
 5104 02fb 5302     		.2byte	0x253
 5105 02fd EB000000 		.4byte	0xeb
 5106 0301 1C       		.byte	0x1c
 5107 0302 0D       		.uleb128 0xd
 5108 0303 27120000 		.4byte	.LASF41
 5109 0307 08       		.byte	0x8
 5110 0308 5402     		.2byte	0x254
 5111 030a F6000000 		.4byte	0xf6
 5112 030e 20       		.byte	0x20
 5113 030f 0D       		.uleb128 0xd
 5114 0310 76180000 		.4byte	.LASF42
 5115 0314 08       		.byte	0x8
 5116 0315 5602     		.2byte	0x256
 5117 0317 B0000000 		.4byte	0xb0
 5118 031b 24       		.byte	0x24
 5119 031c 0D       		.uleb128 0xd
 5120 031d B2160000 		.4byte	.LASF43
 5121 0321 08       		.byte	0x8
 5122 0322 5702     		.2byte	0x257
 5123 0324 EB000000 		.4byte	0xeb
 5124 0328 28       		.byte	0x28
 5125 0329 0D       		.uleb128 0xd
 5126 032a 091C0000 		.4byte	.LASF57
 5127 032e 08       		.byte	0x8
 5128 032f 5802     		.2byte	0x258
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 193


 5129 0331 F6000000 		.4byte	0xf6
 5130 0335 2C       		.byte	0x2c
 5131 0336 0D       		.uleb128 0xd
 5132 0337 440D0000 		.4byte	.LASF45
 5133 033b 08       		.byte	0x8
 5134 033c 5D02     		.2byte	0x25d
 5135 033e 81020000 		.4byte	0x281
 5136 0342 30       		.byte	0x30
 5137 0343 0D       		.uleb128 0xd
 5138 0344 6A120000 		.4byte	.LASF46
 5139 0348 08       		.byte	0x8
 5140 0349 6002     		.2byte	0x260
 5141 034b EB000000 		.4byte	0xeb
 5142 034f 34       		.byte	0x34
 5143 0350 00       		.byte	0
 5144 0351 0B       		.uleb128 0xb
 5145 0352 03040000 		.4byte	.LASF58
 5146 0356 08       		.byte	0x8
 5147 0357 6302     		.2byte	0x263
 5148 0359 8D020000 		.4byte	0x28d
 5149 035d 09       		.uleb128 0x9
 5150 035e 01       		.byte	0x1
 5151 035f 5E000000 		.4byte	0x5e
 5152 0363 09       		.byte	0x9
 5153 0364 0504     		.2byte	0x405
 5154 0366 83030000 		.4byte	0x383
 5155 036a 0A       		.uleb128 0xa
 5156 036b 37070000 		.4byte	.LASF59
 5157 036f 00       		.byte	0
 5158 0370 0A       		.uleb128 0xa
 5159 0371 920C0000 		.4byte	.LASF60
 5160 0375 01       		.byte	0x1
 5161 0376 0A       		.uleb128 0xa
 5162 0377 A8100000 		.4byte	.LASF61
 5163 037b 02       		.byte	0x2
 5164 037c 0A       		.uleb128 0xa
 5165 037d 58030000 		.4byte	.LASF62
 5166 0381 03       		.byte	0x3
 5167 0382 00       		.byte	0
 5168 0383 0B       		.uleb128 0xb
 5169 0384 21240000 		.4byte	.LASF63
 5170 0388 09       		.byte	0x9
 5171 0389 0A04     		.2byte	0x40a
 5172 038b 5D030000 		.4byte	0x35d
 5173 038f 0C       		.uleb128 0xc
 5174 0390 78       		.byte	0x78
 5175 0391 09       		.byte	0x9
 5176 0392 F404     		.2byte	0x4f4
 5177 0394 5C040000 		.4byte	0x45c
 5178 0398 0D       		.uleb128 0xd
 5179 0399 020C0000 		.4byte	.LASF64
 5180 039d 09       		.byte	0x9
 5181 039e F604     		.2byte	0x4f6
 5182 03a0 EB000000 		.4byte	0xeb
 5183 03a4 00       		.byte	0
 5184 03a5 0D       		.uleb128 0xd
 5185 03a6 881F0000 		.4byte	.LASF65
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 194


 5186 03aa 09       		.byte	0x9
 5187 03ab F704     		.2byte	0x4f7
 5188 03ad EB000000 		.4byte	0xeb
 5189 03b1 04       		.byte	0x4
 5190 03b2 0D       		.uleb128 0xd
 5191 03b3 70020000 		.4byte	.LASF66
 5192 03b7 09       		.byte	0x9
 5193 03b8 F804     		.2byte	0x4f8
 5194 03ba EB000000 		.4byte	0xeb
 5195 03be 08       		.byte	0x8
 5196 03bf 0D       		.uleb128 0xd
 5197 03c0 831E0000 		.4byte	.LASF67
 5198 03c4 09       		.byte	0x9
 5199 03c5 F904     		.2byte	0x4f9
 5200 03c7 EB000000 		.4byte	0xeb
 5201 03cb 0C       		.byte	0xc
 5202 03cc 0D       		.uleb128 0xd
 5203 03cd 270B0000 		.4byte	.LASF68
 5204 03d1 09       		.byte	0x9
 5205 03d2 FA04     		.2byte	0x4fa
 5206 03d4 EB000000 		.4byte	0xeb
 5207 03d8 10       		.byte	0x10
 5208 03d9 0D       		.uleb128 0xd
 5209 03da DF130000 		.4byte	.LASF69
 5210 03de 09       		.byte	0x9
 5211 03df FB04     		.2byte	0x4fb
 5212 03e1 83030000 		.4byte	0x383
 5213 03e5 14       		.byte	0x14
 5214 03e6 0D       		.uleb128 0xd
 5215 03e7 0D110000 		.4byte	.LASF70
 5216 03eb 09       		.byte	0x9
 5217 03ec FC04     		.2byte	0x4fc
 5218 03ee EB000000 		.4byte	0xeb
 5219 03f2 18       		.byte	0x18
 5220 03f3 0D       		.uleb128 0xd
 5221 03f4 55160000 		.4byte	.LASF71
 5222 03f8 09       		.byte	0x9
 5223 03f9 FD04     		.2byte	0x4fd
 5224 03fb 5C040000 		.4byte	0x45c
 5225 03ff 1C       		.byte	0x1c
 5226 0400 0D       		.uleb128 0xd
 5227 0401 42250000 		.4byte	.LASF72
 5228 0405 09       		.byte	0x9
 5229 0406 FE04     		.2byte	0x4fe
 5230 0408 EB000000 		.4byte	0xeb
 5231 040c 5C       		.byte	0x5c
 5232 040d 0D       		.uleb128 0xd
 5233 040e B5050000 		.4byte	.LASF73
 5234 0412 09       		.byte	0x9
 5235 0413 FF04     		.2byte	0x4ff
 5236 0415 EB000000 		.4byte	0xeb
 5237 0419 60       		.byte	0x60
 5238 041a 0D       		.uleb128 0xd
 5239 041b 13240000 		.4byte	.LASF74
 5240 041f 09       		.byte	0x9
 5241 0420 0005     		.2byte	0x500
 5242 0422 EB000000 		.4byte	0xeb
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 195


 5243 0426 64       		.byte	0x64
 5244 0427 0D       		.uleb128 0xd
 5245 0428 A3190000 		.4byte	.LASF75
 5246 042c 09       		.byte	0x9
 5247 042d 0105     		.2byte	0x501
 5248 042f EB000000 		.4byte	0xeb
 5249 0433 68       		.byte	0x68
 5250 0434 0D       		.uleb128 0xd
 5251 0435 69130000 		.4byte	.LASF76
 5252 0439 09       		.byte	0x9
 5253 043a 0205     		.2byte	0x502
 5254 043c EB000000 		.4byte	0xeb
 5255 0440 6C       		.byte	0x6c
 5256 0441 0D       		.uleb128 0xd
 5257 0442 CB230000 		.4byte	.LASF77
 5258 0446 09       		.byte	0x9
 5259 0447 0305     		.2byte	0x503
 5260 0449 14010000 		.4byte	0x114
 5261 044d 70       		.byte	0x70
 5262 044e 0D       		.uleb128 0xd
 5263 044f 02100000 		.4byte	.LASF78
 5264 0453 09       		.byte	0x9
 5265 0454 0405     		.2byte	0x504
 5266 0456 EB000000 		.4byte	0xeb
 5267 045a 74       		.byte	0x74
 5268 045b 00       		.byte	0
 5269 045c 11       		.uleb128 0x11
 5270 045d EB000000 		.4byte	0xeb
 5271 0461 6C040000 		.4byte	0x46c
 5272 0465 12       		.uleb128 0x12
 5273 0466 A9000000 		.4byte	0xa9
 5274 046a 0F       		.byte	0xf
 5275 046b 00       		.byte	0
 5276 046c 0B       		.uleb128 0xb
 5277 046d E80B0000 		.4byte	.LASF79
 5278 0471 09       		.byte	0x9
 5279 0472 0505     		.2byte	0x505
 5280 0474 8F030000 		.4byte	0x38f
 5281 0478 09       		.uleb128 0x9
 5282 0479 02       		.byte	0x2
 5283 047a 77000000 		.4byte	0x77
 5284 047e 0A       		.byte	0xa
 5285 047f 4201     		.2byte	0x142
 5286 0481 B1070000 		.4byte	0x7b1
 5287 0485 0A       		.uleb128 0xa
 5288 0486 7E090000 		.4byte	.LASF80
 5289 048a 00       		.byte	0
 5290 048b 13       		.uleb128 0x13
 5291 048c A4080000 		.4byte	.LASF81
 5292 0490 0010     		.2byte	0x1000
 5293 0492 13       		.uleb128 0x13
 5294 0493 981E0000 		.4byte	.LASF82
 5295 0497 0110     		.2byte	0x1001
 5296 0499 13       		.uleb128 0x13
 5297 049a B0090000 		.4byte	.LASF83
 5298 049e 0210     		.2byte	0x1002
 5299 04a0 13       		.uleb128 0x13
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 196


 5300 04a1 E80F0000 		.4byte	.LASF84
 5301 04a5 0310     		.2byte	0x1003
 5302 04a7 13       		.uleb128 0x13
 5303 04a8 13010000 		.4byte	.LASF85
 5304 04ac 0410     		.2byte	0x1004
 5305 04ae 13       		.uleb128 0x13
 5306 04af BD030000 		.4byte	.LASF86
 5307 04b3 0510     		.2byte	0x1005
 5308 04b5 13       		.uleb128 0x13
 5309 04b6 5E190000 		.4byte	.LASF87
 5310 04ba 0020     		.2byte	0x2000
 5311 04bc 13       		.uleb128 0x13
 5312 04bd 0E1D0000 		.4byte	.LASF88
 5313 04c1 0120     		.2byte	0x2001
 5314 04c3 13       		.uleb128 0x13
 5315 04c4 CF180000 		.4byte	.LASF89
 5316 04c8 0220     		.2byte	0x2002
 5317 04ca 13       		.uleb128 0x13
 5318 04cb AC0F0000 		.4byte	.LASF90
 5319 04cf 0320     		.2byte	0x2003
 5320 04d1 13       		.uleb128 0x13
 5321 04d2 01120000 		.4byte	.LASF91
 5322 04d6 0420     		.2byte	0x2004
 5323 04d8 13       		.uleb128 0x13
 5324 04d9 F4140000 		.4byte	.LASF92
 5325 04dd 0520     		.2byte	0x2005
 5326 04df 13       		.uleb128 0x13
 5327 04e0 D10E0000 		.4byte	.LASF93
 5328 04e4 0620     		.2byte	0x2006
 5329 04e6 13       		.uleb128 0x13
 5330 04e7 C61D0000 		.4byte	.LASF94
 5331 04eb 0720     		.2byte	0x2007
 5332 04ed 13       		.uleb128 0x13
 5333 04ee 5C0A0000 		.4byte	.LASF95
 5334 04f2 0820     		.2byte	0x2008
 5335 04f4 13       		.uleb128 0x13
 5336 04f5 37160000 		.4byte	.LASF96
 5337 04f9 0920     		.2byte	0x2009
 5338 04fb 13       		.uleb128 0x13
 5339 04fc 40090000 		.4byte	.LASF97
 5340 0500 0A20     		.2byte	0x200a
 5341 0502 13       		.uleb128 0x13
 5342 0503 E5090000 		.4byte	.LASF98
 5343 0507 0B20     		.2byte	0x200b
 5344 0509 13       		.uleb128 0x13
 5345 050a 1C190000 		.4byte	.LASF99
 5346 050e 0C20     		.2byte	0x200c
 5347 0510 13       		.uleb128 0x13
 5348 0511 72080000 		.4byte	.LASF100
 5349 0515 0D20     		.2byte	0x200d
 5350 0517 13       		.uleb128 0x13
 5351 0518 DC110000 		.4byte	.LASF101
 5352 051c 0E20     		.2byte	0x200e
 5353 051e 13       		.uleb128 0x13
 5354 051f 0B1A0000 		.4byte	.LASF102
 5355 0523 0F20     		.2byte	0x200f
 5356 0525 13       		.uleb128 0x13
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 197


 5357 0526 B7140000 		.4byte	.LASF103
 5358 052a 1020     		.2byte	0x2010
 5359 052c 13       		.uleb128 0x13
 5360 052d 85160000 		.4byte	.LASF104
 5361 0531 1120     		.2byte	0x2011
 5362 0533 13       		.uleb128 0x13
 5363 0534 45200000 		.4byte	.LASF105
 5364 0538 1220     		.2byte	0x2012
 5365 053a 13       		.uleb128 0x13
 5366 053b 82170000 		.4byte	.LASF106
 5367 053f 1320     		.2byte	0x2013
 5368 0541 13       		.uleb128 0x13
 5369 0542 45130000 		.4byte	.LASF107
 5370 0546 1420     		.2byte	0x2014
 5371 0548 13       		.uleb128 0x13
 5372 0549 02060000 		.4byte	.LASF108
 5373 054d 1520     		.2byte	0x2015
 5374 054f 13       		.uleb128 0x13
 5375 0550 B4240000 		.4byte	.LASF109
 5376 0554 1620     		.2byte	0x2016
 5377 0556 13       		.uleb128 0x13
 5378 0557 99040000 		.4byte	.LASF110
 5379 055b 1720     		.2byte	0x2017
 5380 055d 13       		.uleb128 0x13
 5381 055e B8080000 		.4byte	.LASF111
 5382 0562 0030     		.2byte	0x3000
 5383 0564 13       		.uleb128 0x13
 5384 0565 F00C0000 		.4byte	.LASF112
 5385 0569 0130     		.2byte	0x3001
 5386 056b 13       		.uleb128 0x13
 5387 056c C40B0000 		.4byte	.LASF113
 5388 0570 0230     		.2byte	0x3002
 5389 0572 13       		.uleb128 0x13
 5390 0573 F41D0000 		.4byte	.LASF114
 5391 0577 0330     		.2byte	0x3003
 5392 0579 13       		.uleb128 0x13
 5393 057a DA0A0000 		.4byte	.LASF115
 5394 057e 0430     		.2byte	0x3004
 5395 0580 13       		.uleb128 0x13
 5396 0581 381E0000 		.4byte	.LASF116
 5397 0585 0530     		.2byte	0x3005
 5398 0587 13       		.uleb128 0x13
 5399 0588 DC010000 		.4byte	.LASF117
 5400 058c 0630     		.2byte	0x3006
 5401 058e 13       		.uleb128 0x13
 5402 058f 70230000 		.4byte	.LASF118
 5403 0593 0730     		.2byte	0x3007
 5404 0595 13       		.uleb128 0x13
 5405 0596 76150000 		.4byte	.LASF119
 5406 059a 0830     		.2byte	0x3008
 5407 059c 13       		.uleb128 0x13
 5408 059d 470E0000 		.4byte	.LASF120
 5409 05a1 0930     		.2byte	0x3009
 5410 05a3 13       		.uleb128 0x13
 5411 05a4 181E0000 		.4byte	.LASF121
 5412 05a8 0A30     		.2byte	0x300a
 5413 05aa 13       		.uleb128 0x13
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 198


 5414 05ab DE100000 		.4byte	.LASF122
 5415 05af 0B30     		.2byte	0x300b
 5416 05b1 13       		.uleb128 0x13
 5417 05b2 32010000 		.4byte	.LASF123
 5418 05b6 0C30     		.2byte	0x300c
 5419 05b8 13       		.uleb128 0x13
 5420 05b9 AE120000 		.4byte	.LASF124
 5421 05bd 1130     		.2byte	0x3011
 5422 05bf 13       		.uleb128 0x13
 5423 05c0 601A0000 		.4byte	.LASF125
 5424 05c4 1230     		.2byte	0x3012
 5425 05c6 13       		.uleb128 0x13
 5426 05c7 311F0000 		.4byte	.LASF126
 5427 05cb 1330     		.2byte	0x3013
 5428 05cd 13       		.uleb128 0x13
 5429 05ce 4B1D0000 		.4byte	.LASF127
 5430 05d2 1430     		.2byte	0x3014
 5431 05d4 13       		.uleb128 0x13
 5432 05d5 8C1B0000 		.4byte	.LASF128
 5433 05d9 1530     		.2byte	0x3015
 5434 05db 13       		.uleb128 0x13
 5435 05dc 21140000 		.4byte	.LASF129
 5436 05e0 1630     		.2byte	0x3016
 5437 05e2 13       		.uleb128 0x13
 5438 05e3 FF130000 		.4byte	.LASF130
 5439 05e7 1730     		.2byte	0x3017
 5440 05e9 13       		.uleb128 0x13
 5441 05ea 1E100000 		.4byte	.LASF131
 5442 05ee 1830     		.2byte	0x3018
 5443 05f0 13       		.uleb128 0x13
 5444 05f1 9E170000 		.4byte	.LASF132
 5445 05f5 0040     		.2byte	0x4000
 5446 05f7 13       		.uleb128 0x13
 5447 05f8 1D040000 		.4byte	.LASF133
 5448 05fc 0140     		.2byte	0x4001
 5449 05fe 13       		.uleb128 0x13
 5450 05ff B1220000 		.4byte	.LASF134
 5451 0603 0240     		.2byte	0x4002
 5452 0605 13       		.uleb128 0x13
 5453 0606 CA040000 		.4byte	.LASF135
 5454 060a 0340     		.2byte	0x4003
 5455 060c 13       		.uleb128 0x13
 5456 060d 28130000 		.4byte	.LASF136
 5457 0611 0440     		.2byte	0x4004
 5458 0613 13       		.uleb128 0x13
 5459 0614 81240000 		.4byte	.LASF137
 5460 0618 0540     		.2byte	0x4005
 5461 061a 13       		.uleb128 0x13
 5462 061b B4000000 		.4byte	.LASF138
 5463 061f 0640     		.2byte	0x4006
 5464 0621 13       		.uleb128 0x13
 5465 0622 D00C0000 		.4byte	.LASF139
 5466 0626 0740     		.2byte	0x4007
 5467 0628 13       		.uleb128 0x13
 5468 0629 2A1B0000 		.4byte	.LASF140
 5469 062d 0840     		.2byte	0x4008
 5470 062f 13       		.uleb128 0x13
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 199


 5471 0630 A60B0000 		.4byte	.LASF141
 5472 0634 0940     		.2byte	0x4009
 5473 0636 13       		.uleb128 0x13
 5474 0637 6E250000 		.4byte	.LASF142
 5475 063b 0A40     		.2byte	0x400a
 5476 063d 13       		.uleb128 0x13
 5477 063e 74110000 		.4byte	.LASF143
 5478 0642 0B40     		.2byte	0x400b
 5479 0644 13       		.uleb128 0x13
 5480 0645 60160000 		.4byte	.LASF144
 5481 0649 0C40     		.2byte	0x400c
 5482 064b 13       		.uleb128 0x13
 5483 064c 810D0000 		.4byte	.LASF145
 5484 0650 0D40     		.2byte	0x400d
 5485 0652 13       		.uleb128 0x13
 5486 0653 03180000 		.4byte	.LASF146
 5487 0657 0E40     		.2byte	0x400e
 5488 0659 13       		.uleb128 0x13
 5489 065a 410C0000 		.4byte	.LASF147
 5490 065e 0F40     		.2byte	0x400f
 5491 0660 13       		.uleb128 0x13
 5492 0661 F8120000 		.4byte	.LASF148
 5493 0665 1040     		.2byte	0x4010
 5494 0667 13       		.uleb128 0x13
 5495 0668 87200000 		.4byte	.LASF149
 5496 066c 1140     		.2byte	0x4011
 5497 066e 13       		.uleb128 0x13
 5498 066f 960E0000 		.4byte	.LASF150
 5499 0673 1240     		.2byte	0x4012
 5500 0675 13       		.uleb128 0x13
 5501 0676 2A1C0000 		.4byte	.LASF151
 5502 067a 1340     		.2byte	0x4013
 5503 067c 13       		.uleb128 0x13
 5504 067d E2170000 		.4byte	.LASF152
 5505 0681 1440     		.2byte	0x4014
 5506 0683 13       		.uleb128 0x13
 5507 0684 10070000 		.4byte	.LASF153
 5508 0688 1540     		.2byte	0x4015
 5509 068a 13       		.uleb128 0x13
 5510 068b 2C020000 		.4byte	.LASF154
 5511 068f 1640     		.2byte	0x4016
 5512 0691 13       		.uleb128 0x13
 5513 0692 78190000 		.4byte	.LASF155
 5514 0696 1740     		.2byte	0x4017
 5515 0698 13       		.uleb128 0x13
 5516 0699 9E140000 		.4byte	.LASF156
 5517 069d 1840     		.2byte	0x4018
 5518 069f 13       		.uleb128 0x13
 5519 06a0 BA1A0000 		.4byte	.LASF157
 5520 06a4 1940     		.2byte	0x4019
 5521 06a6 13       		.uleb128 0x13
 5522 06a7 E6160000 		.4byte	.LASF158
 5523 06ab 1A40     		.2byte	0x401a
 5524 06ad 13       		.uleb128 0x13
 5525 06ae C8190000 		.4byte	.LASF159
 5526 06b2 0050     		.2byte	0x5000
 5527 06b4 13       		.uleb128 0x13
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 200


 5528 06b5 6E050000 		.4byte	.LASF160
 5529 06b9 0150     		.2byte	0x5001
 5530 06bb 13       		.uleb128 0x13
 5531 06bc 9D210000 		.4byte	.LASF161
 5532 06c0 0250     		.2byte	0x5002
 5533 06c2 13       		.uleb128 0x13
 5534 06c3 0D220000 		.4byte	.LASF162
 5535 06c7 0350     		.2byte	0x5003
 5536 06c9 13       		.uleb128 0x13
 5537 06ca 9C070000 		.4byte	.LASF163
 5538 06ce 0450     		.2byte	0x5004
 5539 06d0 13       		.uleb128 0x13
 5540 06d1 E3190000 		.4byte	.LASF164
 5541 06d5 0550     		.2byte	0x5005
 5542 06d7 13       		.uleb128 0x13
 5543 06d8 A0110000 		.4byte	.LASF165
 5544 06dc 0650     		.2byte	0x5006
 5545 06de 13       		.uleb128 0x13
 5546 06df 58040000 		.4byte	.LASF166
 5547 06e3 0750     		.2byte	0x5007
 5548 06e5 13       		.uleb128 0x13
 5549 06e6 CD0D0000 		.4byte	.LASF167
 5550 06ea 0850     		.2byte	0x5008
 5551 06ec 13       		.uleb128 0x13
 5552 06ed 0C080000 		.4byte	.LASF168
 5553 06f1 0950     		.2byte	0x5009
 5554 06f3 13       		.uleb128 0x13
 5555 06f4 95000000 		.4byte	.LASF169
 5556 06f8 0A50     		.2byte	0x500a
 5557 06fa 13       		.uleb128 0x13
 5558 06fb 4E050000 		.4byte	.LASF170
 5559 06ff 0B50     		.2byte	0x500b
 5560 0701 13       		.uleb128 0x13
 5561 0702 451A0000 		.4byte	.LASF171
 5562 0706 0C50     		.2byte	0x500c
 5563 0708 13       		.uleb128 0x13
 5564 0709 FC0E0000 		.4byte	.LASF172
 5565 070d 0D50     		.2byte	0x500d
 5566 070f 13       		.uleb128 0x13
 5567 0710 51230000 		.4byte	.LASF173
 5568 0714 0E50     		.2byte	0x500e
 5569 0716 13       		.uleb128 0x13
 5570 0717 1D0D0000 		.4byte	.LASF174
 5571 071b 0F50     		.2byte	0x500f
 5572 071d 13       		.uleb128 0x13
 5573 071e EE1C0000 		.4byte	.LASF175
 5574 0722 1050     		.2byte	0x5010
 5575 0724 13       		.uleb128 0x13
 5576 0725 CE210000 		.4byte	.LASF176
 5577 0729 1150     		.2byte	0x5011
 5578 072b 13       		.uleb128 0x13
 5579 072c 56010000 		.4byte	.LASF177
 5580 0730 1250     		.2byte	0x5012
 5581 0732 13       		.uleb128 0x13
 5582 0733 07090000 		.4byte	.LASF178
 5583 0737 1350     		.2byte	0x5013
 5584 0739 13       		.uleb128 0x13
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 201


 5585 073a BB070000 		.4byte	.LASF179
 5586 073e 1450     		.2byte	0x5014
 5587 0740 13       		.uleb128 0x13
 5588 0741 370A0000 		.4byte	.LASF180
 5589 0745 1550     		.2byte	0x5015
 5590 0747 13       		.uleb128 0x13
 5591 0748 8E220000 		.4byte	.LASF181
 5592 074c 1650     		.2byte	0x5016
 5593 074e 13       		.uleb128 0x13
 5594 074f 1E060000 		.4byte	.LASF182
 5595 0753 1750     		.2byte	0x5017
 5596 0755 13       		.uleb128 0x13
 5597 0756 13200000 		.4byte	.LASF183
 5598 075a 1850     		.2byte	0x5018
 5599 075c 13       		.uleb128 0x13
 5600 075d A4230000 		.4byte	.LASF184
 5601 0761 0060     		.2byte	0x6000
 5602 0763 13       		.uleb128 0x13
 5603 0764 B8200000 		.4byte	.LASF185
 5604 0768 0160     		.2byte	0x6001
 5605 076a 13       		.uleb128 0x13
 5606 076b 8F0F0000 		.4byte	.LASF186
 5607 076f 0260     		.2byte	0x6002
 5608 0771 13       		.uleb128 0x13
 5609 0772 C3170000 		.4byte	.LASF187
 5610 0776 0360     		.2byte	0x6003
 5611 0778 13       		.uleb128 0x13
 5612 0779 52140000 		.4byte	.LASF188
 5613 077d 0460     		.2byte	0x6004
 5614 077f 13       		.uleb128 0x13
 5615 0780 9B1C0000 		.4byte	.LASF189
 5616 0784 0560     		.2byte	0x6005
 5617 0786 13       		.uleb128 0x13
 5618 0787 010E0000 		.4byte	.LASF190
 5619 078b 0660     		.2byte	0x6006
 5620 078d 13       		.uleb128 0x13
 5621 078e 57000000 		.4byte	.LASF191
 5622 0792 0760     		.2byte	0x6007
 5623 0794 13       		.uleb128 0x13
 5624 0795 DA020000 		.4byte	.LASF192
 5625 0799 0860     		.2byte	0x6008
 5626 079b 13       		.uleb128 0x13
 5627 079c EF000000 		.4byte	.LASF193
 5628 07a0 0960     		.2byte	0x6009
 5629 07a2 13       		.uleb128 0x13
 5630 07a3 FC160000 		.4byte	.LASF194
 5631 07a7 0A60     		.2byte	0x600a
 5632 07a9 13       		.uleb128 0x13
 5633 07aa B30D0000 		.4byte	.LASF195
 5634 07ae FFFF     		.2byte	0xffff
 5635 07b0 00       		.byte	0
 5636 07b1 07       		.uleb128 0x7
 5637 07b2 CA000000 		.4byte	0xca
 5638 07b6 0C       		.uleb128 0xc
 5639 07b7 02       		.byte	0x2
 5640 07b8 0B       		.byte	0xb
 5641 07b9 5B01     		.2byte	0x15b
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 202


 5642 07bb DA070000 		.4byte	0x7da
 5643 07bf 0D       		.uleb128 0xd
 5644 07c0 D6220000 		.4byte	.LASF196
 5645 07c4 0B       		.byte	0xb
 5646 07c5 6501     		.2byte	0x165
 5647 07c7 CA000000 		.4byte	0xca
 5648 07cb 00       		.byte	0
 5649 07cc 0D       		.uleb128 0xd
 5650 07cd FC0B0000 		.4byte	.LASF197
 5651 07d1 0B       		.byte	0xb
 5652 07d2 6901     		.2byte	0x169
 5653 07d4 CA000000 		.4byte	0xca
 5654 07d8 01       		.byte	0x1
 5655 07d9 00       		.byte	0
 5656 07da 0B       		.uleb128 0xb
 5657 07db 831A0000 		.4byte	.LASF198
 5658 07df 0B       		.byte	0xb
 5659 07e0 6B01     		.2byte	0x16b
 5660 07e2 B6070000 		.4byte	0x7b6
 5661 07e6 14       		.uleb128 0x14
 5662 07e7 01       		.byte	0x1
 5663 07e8 5E000000 		.4byte	0x5e
 5664 07ec 0C       		.byte	0xc
 5665 07ed 7E       		.byte	0x7e
 5666 07ee 0B080000 		.4byte	0x80b
 5667 07f2 0A       		.uleb128 0xa
 5668 07f3 8A050000 		.4byte	.LASF199
 5669 07f7 00       		.byte	0
 5670 07f8 0A       		.uleb128 0xa
 5671 07f9 320B0000 		.4byte	.LASF200
 5672 07fd 01       		.byte	0x1
 5673 07fe 0A       		.uleb128 0xa
 5674 07ff 6A0E0000 		.4byte	.LASF201
 5675 0803 02       		.byte	0x2
 5676 0804 0A       		.uleb128 0xa
 5677 0805 4E100000 		.4byte	.LASF202
 5678 0809 03       		.byte	0x3
 5679 080a 00       		.byte	0
 5680 080b 02       		.uleb128 0x2
 5681 080c C40A0000 		.4byte	.LASF203
 5682 0810 0C       		.byte	0xc
 5683 0811 83       		.byte	0x83
 5684 0812 E6070000 		.4byte	0x7e6
 5685 0816 14       		.uleb128 0x14
 5686 0817 01       		.byte	0x1
 5687 0818 5E000000 		.4byte	0x5e
 5688 081c 0C       		.byte	0xc
 5689 081d 87       		.byte	0x87
 5690 081e 53080000 		.4byte	0x853
 5691 0822 0A       		.uleb128 0xa
 5692 0823 53080000 		.4byte	.LASF204
 5693 0827 00       		.byte	0
 5694 0828 0A       		.uleb128 0xa
 5695 0829 4F070000 		.4byte	.LASF205
 5696 082d 01       		.byte	0x1
 5697 082e 0A       		.uleb128 0xa
 5698 082f 5A180000 		.4byte	.LASF206
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 203


 5699 0833 02       		.byte	0x2
 5700 0834 0A       		.uleb128 0xa
 5701 0835 18250000 		.4byte	.LASF207
 5702 0839 03       		.byte	0x3
 5703 083a 0A       		.uleb128 0xa
 5704 083b 170C0000 		.4byte	.LASF208
 5705 083f 04       		.byte	0x4
 5706 0840 0A       		.uleb128 0xa
 5707 0841 7E100000 		.4byte	.LASF209
 5708 0845 05       		.byte	0x5
 5709 0846 0A       		.uleb128 0xa
 5710 0847 2F180000 		.4byte	.LASF210
 5711 084b 06       		.byte	0x6
 5712 084c 0A       		.uleb128 0xa
 5713 084d 3C0F0000 		.4byte	.LASF211
 5714 0851 07       		.byte	0x7
 5715 0852 00       		.byte	0
 5716 0853 02       		.uleb128 0x2
 5717 0854 41040000 		.4byte	.LASF212
 5718 0858 0C       		.byte	0xc
 5719 0859 90       		.byte	0x90
 5720 085a 16080000 		.4byte	0x816
 5721 085e 14       		.uleb128 0x14
 5722 085f 01       		.byte	0x1
 5723 0860 5E000000 		.4byte	0x5e
 5724 0864 0D       		.byte	0xd
 5725 0865 29       		.byte	0x29
 5726 0866 83080000 		.4byte	0x883
 5727 086a 0A       		.uleb128 0xa
 5728 086b 0C000000 		.4byte	.LASF213
 5729 086f 00       		.byte	0
 5730 0870 0A       		.uleb128 0xa
 5731 0871 7A140000 		.4byte	.LASF214
 5732 0875 01       		.byte	0x1
 5733 0876 0A       		.uleb128 0xa
 5734 0877 B10C0000 		.4byte	.LASF215
 5735 087b 02       		.byte	0x2
 5736 087c 0A       		.uleb128 0xa
 5737 087d E2120000 		.4byte	.LASF216
 5738 0881 03       		.byte	0x3
 5739 0882 00       		.byte	0
 5740 0883 09       		.uleb128 0x9
 5741 0884 01       		.byte	0x1
 5742 0885 5E000000 		.4byte	0x5e
 5743 0889 0E       		.byte	0xe
 5744 088a B108     		.2byte	0x8b1
 5745 088c A9080000 		.4byte	0x8a9
 5746 0890 0A       		.uleb128 0xa
 5747 0891 6E100000 		.4byte	.LASF217
 5748 0895 00       		.byte	0
 5749 0896 0A       		.uleb128 0xa
 5750 0897 AB1E0000 		.4byte	.LASF218
 5751 089b 01       		.byte	0x1
 5752 089c 0A       		.uleb128 0xa
 5753 089d E21B0000 		.4byte	.LASF219
 5754 08a1 02       		.byte	0x2
 5755 08a2 0A       		.uleb128 0xa
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 204


 5756 08a3 DD000000 		.4byte	.LASF220
 5757 08a7 03       		.byte	0x3
 5758 08a8 00       		.byte	0
 5759 08a9 15       		.uleb128 0x15
 5760 08aa 14       		.byte	0x14
 5761 08ab 0F       		.byte	0xf
 5762 08ac 3B       		.byte	0x3b
 5763 08ad EE080000 		.4byte	0x8ee
 5764 08b1 16       		.uleb128 0x16
 5765 08b2 35040000 		.4byte	.LASF221
 5766 08b6 0F       		.byte	0xf
 5767 08b7 3D       		.byte	0x3d
 5768 08b8 EB000000 		.4byte	0xeb
 5769 08bc 00       		.byte	0
 5770 08bd 16       		.uleb128 0x16
 5771 08be 140A0000 		.4byte	.LASF222
 5772 08c2 0F       		.byte	0xf
 5773 08c3 3E       		.byte	0x3e
 5774 08c4 EB000000 		.4byte	0xeb
 5775 08c8 04       		.byte	0x4
 5776 08c9 16       		.uleb128 0x16
 5777 08ca BE040000 		.4byte	.LASF223
 5778 08ce 0F       		.byte	0xf
 5779 08cf 3F       		.byte	0x3f
 5780 08d0 EE080000 		.4byte	0x8ee
 5781 08d4 08       		.byte	0x8
 5782 08d5 16       		.uleb128 0x16
 5783 08d6 99230000 		.4byte	.LASF224
 5784 08da 0F       		.byte	0xf
 5785 08db 40       		.byte	0x40
 5786 08dc EB000000 		.4byte	0xeb
 5787 08e0 0C       		.byte	0xc
 5788 08e1 16       		.uleb128 0x16
 5789 08e2 10210000 		.4byte	.LASF225
 5790 08e6 0F       		.byte	0xf
 5791 08e7 45       		.byte	0x45
 5792 08e8 EB000000 		.4byte	0xeb
 5793 08ec 10       		.byte	0x10
 5794 08ed 00       		.byte	0
 5795 08ee 06       		.uleb128 0x6
 5796 08ef 04       		.byte	0x4
 5797 08f0 F4080000 		.4byte	0x8f4
 5798 08f4 07       		.uleb128 0x7
 5799 08f5 6C040000 		.4byte	0x46c
 5800 08f9 02       		.uleb128 0x2
 5801 08fa 45170000 		.4byte	.LASF226
 5802 08fe 0F       		.byte	0xf
 5803 08ff 48       		.byte	0x48
 5804 0900 A9080000 		.4byte	0x8a9
 5805 0904 02       		.uleb128 0x2
 5806 0905 99150000 		.4byte	.LASF227
 5807 0909 10       		.byte	0x10
 5808 090a 23       		.byte	0x23
 5809 090b 0F090000 		.4byte	0x90f
 5810 090f 06       		.uleb128 0x6
 5811 0910 04       		.byte	0x4
 5812 0911 15090000 		.4byte	0x915
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 205


 5813 0915 0E       		.uleb128 0xe
 5814 0916 20090000 		.4byte	0x920
 5815 091a 0F       		.uleb128 0xf
 5816 091b B0000000 		.4byte	0xb0
 5817 091f 00       		.byte	0
 5818 0920 02       		.uleb128 0x2
 5819 0921 4C030000 		.4byte	.LASF228
 5820 0925 02       		.byte	0x2
 5821 0926 37       		.byte	0x37
 5822 0927 EB000000 		.4byte	0xeb
 5823 092b 02       		.uleb128 0x2
 5824 092c 24150000 		.4byte	.LASF229
 5825 0930 02       		.byte	0x2
 5826 0931 38       		.byte	0x38
 5827 0932 89000000 		.4byte	0x89
 5828 0936 02       		.uleb128 0x2
 5829 0937 47080000 		.4byte	.LASF230
 5830 093b 02       		.byte	0x2
 5831 093c 39       		.byte	0x39
 5832 093d 9B000000 		.4byte	0x9b
 5833 0941 02       		.uleb128 0x2
 5834 0942 5F120000 		.4byte	.LASF231
 5835 0946 02       		.byte	0x2
 5836 0947 3F       		.byte	0x3f
 5837 0948 EB000000 		.4byte	0xeb
 5838 094c 11       		.uleb128 0x11
 5839 094d B0000000 		.4byte	0xb0
 5840 0951 5C090000 		.4byte	0x95c
 5841 0955 12       		.uleb128 0x12
 5842 0956 A9000000 		.4byte	0xa9
 5843 095a 04       		.byte	0x4
 5844 095b 00       		.byte	0
 5845 095c 17       		.uleb128 0x17
 5846 095d 090B0000 		.4byte	.LASF232
 5847 0961 14       		.byte	0x14
 5848 0962 11       		.byte	0x11
 5849 0963 8B       		.byte	0x8b
 5850 0964 A5090000 		.4byte	0x9a5
 5851 0968 16       		.uleb128 0x16
 5852 0969 5A1B0000 		.4byte	.LASF233
 5853 096d 11       		.byte	0x11
 5854 096e 8E       		.byte	0x8e
 5855 096f 41090000 		.4byte	0x941
 5856 0973 00       		.byte	0
 5857 0974 16       		.uleb128 0x16
 5858 0975 A8150000 		.4byte	.LASF234
 5859 0979 11       		.byte	0x11
 5860 097a 8F       		.byte	0x8f
 5861 097b A5090000 		.4byte	0x9a5
 5862 097f 04       		.byte	0x4
 5863 0980 16       		.uleb128 0x16
 5864 0981 DF220000 		.4byte	.LASF235
 5865 0985 11       		.byte	0x11
 5866 0986 90       		.byte	0x90
 5867 0987 A5090000 		.4byte	0x9a5
 5868 098b 08       		.byte	0x8
 5869 098c 16       		.uleb128 0x16
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 206


 5870 098d 08210000 		.4byte	.LASF236
 5871 0991 11       		.byte	0x11
 5872 0992 91       		.byte	0x91
 5873 0993 B0000000 		.4byte	0xb0
 5874 0997 0C       		.byte	0xc
 5875 0998 16       		.uleb128 0x16
 5876 0999 D61B0000 		.4byte	.LASF237
 5877 099d 11       		.byte	0x11
 5878 099e 92       		.byte	0x92
 5879 099f B0000000 		.4byte	0xb0
 5880 09a3 10       		.byte	0x10
 5881 09a4 00       		.byte	0
 5882 09a5 06       		.uleb128 0x6
 5883 09a6 04       		.byte	0x4
 5884 09a7 5C090000 		.4byte	0x95c
 5885 09ab 02       		.uleb128 0x2
 5886 09ac 02110000 		.4byte	.LASF238
 5887 09b0 11       		.byte	0x11
 5888 09b1 95       		.byte	0x95
 5889 09b2 5C090000 		.4byte	0x95c
 5890 09b6 17       		.uleb128 0x17
 5891 09b7 5F0D0000 		.4byte	.LASF239
 5892 09bb 0C       		.byte	0xc
 5893 09bc 11       		.byte	0x11
 5894 09bd 97       		.byte	0x97
 5895 09be E7090000 		.4byte	0x9e7
 5896 09c2 16       		.uleb128 0x16
 5897 09c3 5A1B0000 		.4byte	.LASF233
 5898 09c7 11       		.byte	0x11
 5899 09c8 9A       		.byte	0x9a
 5900 09c9 41090000 		.4byte	0x941
 5901 09cd 00       		.byte	0
 5902 09ce 16       		.uleb128 0x16
 5903 09cf A8150000 		.4byte	.LASF234
 5904 09d3 11       		.byte	0x11
 5905 09d4 9B       		.byte	0x9b
 5906 09d5 A5090000 		.4byte	0x9a5
 5907 09d9 04       		.byte	0x4
 5908 09da 16       		.uleb128 0x16
 5909 09db DF220000 		.4byte	.LASF235
 5910 09df 11       		.byte	0x11
 5911 09e0 9C       		.byte	0x9c
 5912 09e1 A5090000 		.4byte	0x9a5
 5913 09e5 08       		.byte	0x8
 5914 09e6 00       		.byte	0
 5915 09e7 02       		.uleb128 0x2
 5916 09e8 30120000 		.4byte	.LASF240
 5917 09ec 11       		.byte	0x11
 5918 09ed 9E       		.byte	0x9e
 5919 09ee B6090000 		.4byte	0x9b6
 5920 09f2 17       		.uleb128 0x17
 5921 09f3 F1040000 		.4byte	.LASF241
 5922 09f7 14       		.byte	0x14
 5923 09f8 11       		.byte	0x11
 5924 09f9 A3       		.byte	0xa3
 5925 09fa 230A0000 		.4byte	0xa23
 5926 09fe 16       		.uleb128 0x16
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 207


 5927 09ff 47000000 		.4byte	.LASF242
 5928 0a03 11       		.byte	0x11
 5929 0a04 A6       		.byte	0xa6
 5930 0a05 230A0000 		.4byte	0xa23
 5931 0a09 00       		.byte	0
 5932 0a0a 16       		.uleb128 0x16
 5933 0a0b 3B030000 		.4byte	.LASF243
 5934 0a0f 11       		.byte	0x11
 5935 0a10 A7       		.byte	0xa7
 5936 0a11 280A0000 		.4byte	0xa28
 5937 0a15 04       		.byte	0x4
 5938 0a16 16       		.uleb128 0x16
 5939 0a17 C2110000 		.4byte	.LASF244
 5940 0a1b 11       		.byte	0x11
 5941 0a1c A8       		.byte	0xa8
 5942 0a1d E7090000 		.4byte	0x9e7
 5943 0a21 08       		.byte	0x8
 5944 0a22 00       		.byte	0
 5945 0a23 08       		.uleb128 0x8
 5946 0a24 36090000 		.4byte	0x936
 5947 0a28 06       		.uleb128 0x6
 5948 0a29 04       		.byte	0x4
 5949 0a2a AB090000 		.4byte	0x9ab
 5950 0a2e 02       		.uleb128 0x2
 5951 0a2f 28180000 		.4byte	.LASF245
 5952 0a33 11       		.byte	0x11
 5953 0a34 AA       		.byte	0xaa
 5954 0a35 F2090000 		.4byte	0x9f2
 5955 0a39 02       		.uleb128 0x2
 5956 0a3a 21170000 		.4byte	.LASF246
 5957 0a3e 12       		.byte	0x12
 5958 0a3f 3D       		.byte	0x3d
 5959 0a40 B0000000 		.4byte	0xb0
 5960 0a44 14       		.uleb128 0x14
 5961 0a45 01       		.byte	0x1
 5962 0a46 5E000000 		.4byte	0x5e
 5963 0a4a 12       		.byte	0x12
 5964 0a4b 52       		.byte	0x52
 5965 0a4c 6F0A0000 		.4byte	0xa6f
 5966 0a50 0A       		.uleb128 0xa
 5967 0a51 C5020000 		.4byte	.LASF247
 5968 0a55 00       		.byte	0
 5969 0a56 0A       		.uleb128 0xa
 5970 0a57 B0180000 		.4byte	.LASF248
 5971 0a5b 01       		.byte	0x1
 5972 0a5c 0A       		.uleb128 0xa
 5973 0a5d 4D0D0000 		.4byte	.LASF249
 5974 0a61 02       		.byte	0x2
 5975 0a62 0A       		.uleb128 0xa
 5976 0a63 200A0000 		.4byte	.LASF250
 5977 0a67 03       		.byte	0x3
 5978 0a68 0A       		.uleb128 0xa
 5979 0a69 14110000 		.4byte	.LASF251
 5980 0a6d 04       		.byte	0x4
 5981 0a6e 00       		.byte	0
 5982 0a6f 02       		.uleb128 0x2
 5983 0a70 0F0D0000 		.4byte	.LASF252
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 208


 5984 0a74 12       		.byte	0x12
 5985 0a75 58       		.byte	0x58
 5986 0a76 440A0000 		.4byte	0xa44
 5987 0a7a 17       		.uleb128 0x17
 5988 0a7b 44100000 		.4byte	.LASF253
 5989 0a7f 08       		.byte	0x8
 5990 0a80 12       		.byte	0x12
 5991 0a81 5D       		.byte	0x5d
 5992 0a82 9F0A0000 		.4byte	0xa9f
 5993 0a86 16       		.uleb128 0x16
 5994 0a87 C1050000 		.4byte	.LASF254
 5995 0a8b 12       		.byte	0x12
 5996 0a8c 5F       		.byte	0x5f
 5997 0a8d 2B090000 		.4byte	0x92b
 5998 0a91 00       		.byte	0
 5999 0a92 16       		.uleb128 0x16
 6000 0a93 58150000 		.4byte	.LASF255
 6001 0a97 12       		.byte	0x12
 6002 0a98 60       		.byte	0x60
 6003 0a99 41090000 		.4byte	0x941
 6004 0a9d 04       		.byte	0x4
 6005 0a9e 00       		.byte	0
 6006 0a9f 02       		.uleb128 0x2
 6007 0aa0 880C0000 		.4byte	.LASF256
 6008 0aa4 12       		.byte	0x12
 6009 0aa5 61       		.byte	0x61
 6010 0aa6 7A0A0000 		.4byte	0xa7a
 6011 0aaa 17       		.uleb128 0x17
 6012 0aab F8180000 		.4byte	.LASF257
 6013 0aaf 0C       		.byte	0xc
 6014 0ab0 12       		.byte	0x12
 6015 0ab1 66       		.byte	0x66
 6016 0ab2 DB0A0000 		.4byte	0xadb
 6017 0ab6 16       		.uleb128 0x16
 6018 0ab7 931F0000 		.4byte	.LASF258
 6019 0abb 12       		.byte	0x12
 6020 0abc 68       		.byte	0x68
 6021 0abd B0000000 		.4byte	0xb0
 6022 0ac1 00       		.byte	0
 6023 0ac2 16       		.uleb128 0x16
 6024 0ac3 14150000 		.4byte	.LASF259
 6025 0ac7 12       		.byte	0x12
 6026 0ac8 69       		.byte	0x69
 6027 0ac9 EB000000 		.4byte	0xeb
 6028 0acd 04       		.byte	0x4
 6029 0ace 16       		.uleb128 0x16
 6030 0acf 8A030000 		.4byte	.LASF260
 6031 0ad3 12       		.byte	0x12
 6032 0ad4 6A       		.byte	0x6a
 6033 0ad5 EB000000 		.4byte	0xeb
 6034 0ad9 08       		.byte	0x8
 6035 0ada 00       		.byte	0
 6036 0adb 02       		.uleb128 0x2
 6037 0adc 89130000 		.4byte	.LASF261
 6038 0ae0 12       		.byte	0x12
 6039 0ae1 6B       		.byte	0x6b
 6040 0ae2 AA0A0000 		.4byte	0xaaa
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 209


 6041 0ae6 07       		.uleb128 0x7
 6042 0ae7 BF000000 		.4byte	0xbf
 6043 0aeb 06       		.uleb128 0x6
 6044 0aec 04       		.byte	0x4
 6045 0aed 20090000 		.4byte	0x920
 6046 0af1 10       		.uleb128 0x10
 6047 0af2 C8010000 		.4byte	.LASF262
 6048 0af6 60       		.byte	0x60
 6049 0af7 01       		.byte	0x1
 6050 0af8 0D01     		.2byte	0x10d
 6051 0afa 740B0000 		.4byte	0xb74
 6052 0afe 0D       		.uleb128 0xd
 6053 0aff 44240000 		.4byte	.LASF263
 6054 0b03 01       		.byte	0x1
 6055 0b04 0F01     		.2byte	0x10f
 6056 0b06 740B0000 		.4byte	0xb74
 6057 0b0a 00       		.byte	0
 6058 0b0b 0D       		.uleb128 0xd
 6059 0b0c F3050000 		.4byte	.LASF264
 6060 0b10 01       		.byte	0x1
 6061 0b11 1501     		.2byte	0x115
 6062 0b13 AB090000 		.4byte	0x9ab
 6063 0b17 04       		.byte	0x4
 6064 0b18 0D       		.uleb128 0xd
 6065 0b19 A9200000 		.4byte	.LASF265
 6066 0b1d 01       		.byte	0x1
 6067 0b1e 1601     		.2byte	0x116
 6068 0b20 AB090000 		.4byte	0x9ab
 6069 0b24 18       		.byte	0x18
 6070 0b25 0D       		.uleb128 0xd
 6071 0b26 A8010000 		.4byte	.LASF266
 6072 0b2a 01       		.byte	0x1
 6073 0b2b 1701     		.2byte	0x117
 6074 0b2d 36090000 		.4byte	0x936
 6075 0b31 2C       		.byte	0x2c
 6076 0b32 0D       		.uleb128 0xd
 6077 0b33 521C0000 		.4byte	.LASF267
 6078 0b37 01       		.byte	0x1
 6079 0b38 1801     		.2byte	0x118
 6080 0b3a EB0A0000 		.4byte	0xaeb
 6081 0b3e 30       		.byte	0x30
 6082 0b3f 0D       		.uleb128 0xd
 6083 0b40 AF1F0000 		.4byte	.LASF268
 6084 0b44 01       		.byte	0x1
 6085 0b45 1901     		.2byte	0x119
 6086 0b47 7F0B0000 		.4byte	0xb7f
 6087 0b4b 34       		.byte	0x34
 6088 0b4c 0D       		.uleb128 0xd
 6089 0b4d 6B0C0000 		.4byte	.LASF269
 6090 0b51 01       		.byte	0x1
 6091 0b52 3201     		.2byte	0x132
 6092 0b54 4C090000 		.4byte	0x94c
 6093 0b58 44       		.byte	0x44
 6094 0b59 0D       		.uleb128 0xd
 6095 0b5a 0E100000 		.4byte	.LASF270
 6096 0b5e 01       		.byte	0x1
 6097 0b5f 4501     		.2byte	0x145
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 210


 6098 0b61 F6000000 		.4byte	0xf6
 6099 0b65 58       		.byte	0x58
 6100 0b66 0D       		.uleb128 0xd
 6101 0b67 4C110000 		.4byte	.LASF271
 6102 0b6b 01       		.byte	0x1
 6103 0b6c 4601     		.2byte	0x146
 6104 0b6e FB000000 		.4byte	0xfb
 6105 0b72 5C       		.byte	0x5c
 6106 0b73 00       		.byte	0
 6107 0b74 06       		.uleb128 0x6
 6108 0b75 04       		.byte	0x4
 6109 0b76 7A0B0000 		.4byte	0xb7a
 6110 0b7a 08       		.uleb128 0x8
 6111 0b7b 20090000 		.4byte	0x920
 6112 0b7f 11       		.uleb128 0x11
 6113 0b80 B8000000 		.4byte	0xb8
 6114 0b84 8F0B0000 		.4byte	0xb8f
 6115 0b88 12       		.uleb128 0x12
 6116 0b89 A9000000 		.4byte	0xa9
 6117 0b8d 0F       		.byte	0xf
 6118 0b8e 00       		.byte	0
 6119 0b8f 0B       		.uleb128 0xb
 6120 0b90 26080000 		.4byte	.LASF272
 6121 0b94 01       		.byte	0x1
 6122 0b95 5301     		.2byte	0x153
 6123 0b97 F10A0000 		.4byte	0xaf1
 6124 0b9b 0B       		.uleb128 0xb
 6125 0b9c F5200000 		.4byte	.LASF273
 6126 0ba0 01       		.byte	0x1
 6127 0ba1 5701     		.2byte	0x157
 6128 0ba3 8F0B0000 		.4byte	0xb8f
 6129 0ba7 18       		.uleb128 0x18
 6130 0ba8 F61E0000 		.4byte	.LASF276
 6131 0bac 02       		.byte	0x2
 6132 0bad 98       		.byte	0x98
 6133 0bae 03       		.byte	0x3
 6134 0baf BF0B0000 		.4byte	0xbbf
 6135 0bb3 19       		.uleb128 0x19
 6136 0bb4 E7140000 		.4byte	.LASF274
 6137 0bb8 02       		.byte	0x2
 6138 0bb9 9A       		.byte	0x9a
 6139 0bba EB000000 		.4byte	0xeb
 6140 0bbe 00       		.byte	0
 6141 0bbf 1A       		.uleb128 0x1a
 6142 0bc0 CC130000 		.4byte	.LASF440
 6143 0bc4 02       		.byte	0x2
 6144 0bc5 A8       		.byte	0xa8
 6145 0bc6 EB000000 		.4byte	0xeb
 6146 0bca 03       		.byte	0x3
 6147 0bcb E60B0000 		.4byte	0xbe6
 6148 0bcf 19       		.uleb128 0x19
 6149 0bd0 E2080000 		.4byte	.LASF275
 6150 0bd4 02       		.byte	0x2
 6151 0bd5 AA       		.byte	0xaa
 6152 0bd6 EB000000 		.4byte	0xeb
 6153 0bda 19       		.uleb128 0x19
 6154 0bdb E7140000 		.4byte	.LASF274
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 211


 6155 0bdf 02       		.byte	0x2
 6156 0be0 AA       		.byte	0xaa
 6157 0be1 EB000000 		.4byte	0xeb
 6158 0be5 00       		.byte	0
 6159 0be6 18       		.uleb128 0x18
 6160 0be7 D0050000 		.4byte	.LASF277
 6161 0beb 02       		.byte	0x2
 6162 0bec BC       		.byte	0xbc
 6163 0bed 03       		.byte	0x3
 6164 0bee FE0B0000 		.4byte	0xbfe
 6165 0bf2 1B       		.uleb128 0x1b
 6166 0bf3 36170000 		.4byte	.LASF441
 6167 0bf7 02       		.byte	0x2
 6168 0bf8 BC       		.byte	0xbc
 6169 0bf9 EB000000 		.4byte	0xeb
 6170 0bfd 00       		.byte	0
 6171 0bfe 1C       		.uleb128 0x1c
 6172 0bff F21B0000 		.4byte	.LASF299
 6173 0c03 01       		.byte	0x1
 6174 0c04 C306     		.2byte	0x6c3
 6175 0c06 2B090000 		.4byte	0x92b
 6176 0c0a 00000000 		.4byte	.LFB605
 6177 0c0e 4C000000 		.4byte	.LFE605-.LFB605
 6178 0c12 01       		.uleb128 0x1
 6179 0c13 9C       		.byte	0x9c
 6180 0c14 690C0000 		.4byte	0xc69
 6181 0c18 1D       		.uleb128 0x1d
 6182 0c19 97180000 		.4byte	.LASF282
 6183 0c1d 01       		.byte	0x1
 6184 0c1e C306     		.2byte	0x6c3
 6185 0c20 690C0000 		.4byte	0xc69
 6186 0c24 00000000 		.4byte	.LLST0
 6187 0c28 1E       		.uleb128 0x1e
 6188 0c29 901E0000 		.4byte	.LASF278
 6189 0c2d 01       		.byte	0x1
 6190 0c2e C506     		.2byte	0x6c5
 6191 0c30 2B090000 		.4byte	0x92b
 6192 0c34 69000000 		.4byte	.LLST1
 6193 0c38 1E       		.uleb128 0x1e
 6194 0c39 93230000 		.4byte	.LASF279
 6195 0c3d 01       		.byte	0x1
 6196 0c3e C606     		.2byte	0x6c6
 6197 0c40 790C0000 		.4byte	0xc79
 6198 0c44 88000000 		.4byte	.LLST2
 6199 0c48 1F       		.uleb128 0x1f
 6200 0c49 A70B0000 		.4byte	0xba7
 6201 0c4d 04000000 		.4byte	.LBB94
 6202 0c51 12000000 		.4byte	.LBE94-.LBB94
 6203 0c55 01       		.byte	0x1
 6204 0c56 CC06     		.2byte	0x6cc
 6205 0c58 20       		.uleb128 0x20
 6206 0c59 04000000 		.4byte	.LBB95
 6207 0c5d 12000000 		.4byte	.LBE95-.LBB95
 6208 0c61 21       		.uleb128 0x21
 6209 0c62 B30B0000 		.4byte	0xbb3
 6210 0c66 00       		.byte	0
 6211 0c67 00       		.byte	0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 212


 6212 0c68 00       		.byte	0
 6213 0c69 07       		.uleb128 0x7
 6214 0c6a 390A0000 		.4byte	0xa39
 6215 0c6e 06       		.uleb128 0x6
 6216 0c6f 04       		.byte	0x4
 6217 0c70 740C0000 		.4byte	0xc74
 6218 0c74 07       		.uleb128 0x7
 6219 0c75 9B0B0000 		.4byte	0xb9b
 6220 0c79 07       		.uleb128 0x7
 6221 0c7a 6E0C0000 		.4byte	0xc6e
 6222 0c7e 22       		.uleb128 0x22
 6223 0c7f 3C150000 		.4byte	.LASF280
 6224 0c83 01       		.byte	0x1
 6225 0c84 9D0E     		.2byte	0xe9d
 6226 0c86 00000000 		.4byte	.LFB633
 6227 0c8a 2C000000 		.4byte	.LFE633-.LFB633
 6228 0c8e 01       		.uleb128 0x1
 6229 0c8f 9C       		.byte	0x9c
 6230 0c90 A50C0000 		.4byte	0xca5
 6231 0c94 1E       		.uleb128 0x1e
 6232 0c95 93230000 		.4byte	.LASF279
 6233 0c99 01       		.byte	0x1
 6234 0c9a 9F0E     		.2byte	0xe9f
 6235 0c9c A50C0000 		.4byte	0xca5
 6236 0ca0 F1000000 		.4byte	.LLST3
 6237 0ca4 00       		.byte	0
 6238 0ca5 06       		.uleb128 0x6
 6239 0ca6 04       		.byte	0x4
 6240 0ca7 9B0B0000 		.4byte	0xb9b
 6241 0cab 22       		.uleb128 0x22
 6242 0cac DB0F0000 		.4byte	.LASF281
 6243 0cb0 01       		.byte	0x1
 6244 0cb1 670E     		.2byte	0xe67
 6245 0cb3 00000000 		.4byte	.LFB632
 6246 0cb7 12000000 		.4byte	.LFE632-.LFB632
 6247 0cbb 01       		.uleb128 0x1
 6248 0cbc 9C       		.byte	0x9c
 6249 0cbd EB0C0000 		.4byte	0xceb
 6250 0cc1 1D       		.uleb128 0x1d
 6251 0cc2 93230000 		.4byte	.LASF279
 6252 0cc6 01       		.byte	0x1
 6253 0cc7 670E     		.2byte	0xe67
 6254 0cc9 A50C0000 		.4byte	0xca5
 6255 0ccd 04010000 		.4byte	.LLST4
 6256 0cd1 23       		.uleb128 0x23
 6257 0cd2 0A000000 		.4byte	.LVL13
 6258 0cd6 DF2A0000 		.4byte	0x2adf
 6259 0cda 24       		.uleb128 0x24
 6260 0cdb 10000000 		.4byte	.LVL14
 6261 0cdf DF2A0000 		.4byte	0x2adf
 6262 0ce3 25       		.uleb128 0x25
 6263 0ce4 01       		.uleb128 0x1
 6264 0ce5 50       		.byte	0x50
 6265 0ce6 02       		.uleb128 0x2
 6266 0ce7 74       		.byte	0x74
 6267 0ce8 00       		.sleb128 0
 6268 0ce9 00       		.byte	0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 213


 6269 0cea 00       		.byte	0
 6270 0ceb 22       		.uleb128 0x22
 6271 0cec 151B0000 		.4byte	.LASF283
 6272 0cf0 01       		.byte	0x1
 6273 0cf1 3703     		.2byte	0x337
 6274 0cf3 00000000 		.4byte	.LFB596
 6275 0cf7 9E000000 		.4byte	.LFE596-.LFB596
 6276 0cfb 01       		.uleb128 0x1
 6277 0cfc 9C       		.byte	0x9c
 6278 0cfd FB0D0000 		.4byte	0xdfb
 6279 0d01 1D       		.uleb128 0x1d
 6280 0d02 1D130000 		.4byte	.LASF284
 6281 0d06 01       		.byte	0x1
 6282 0d07 3703     		.2byte	0x337
 6283 0d09 04090000 		.4byte	0x904
 6284 0d0d 22010000 		.4byte	.LLST5
 6285 0d11 1D       		.uleb128 0x1d
 6286 0d12 F50E0000 		.4byte	.LASF285
 6287 0d16 01       		.byte	0x1
 6288 0d17 3803     		.2byte	0x338
 6289 0d19 E60A0000 		.4byte	0xae6
 6290 0d1d 40010000 		.4byte	.LLST6
 6291 0d21 1D       		.uleb128 0x1d
 6292 0d22 5A110000 		.4byte	.LASF286
 6293 0d26 01       		.byte	0x1
 6294 0d27 3903     		.2byte	0x339
 6295 0d29 FB0D0000 		.4byte	0xdfb
 6296 0d2d 5E010000 		.4byte	.LLST7
 6297 0d31 1D       		.uleb128 0x1d
 6298 0d32 4D1B0000 		.4byte	.LASF287
 6299 0d36 01       		.byte	0x1
 6300 0d37 3A03     		.2byte	0x33a
 6301 0d39 000E0000 		.4byte	0xe00
 6302 0d3d 9B010000 		.4byte	.LLST8
 6303 0d41 1D       		.uleb128 0x1d
 6304 0d42 A8010000 		.4byte	.LASF266
 6305 0d46 01       		.byte	0x1
 6306 0d47 3B03     		.2byte	0x33b
 6307 0d49 36090000 		.4byte	0x936
 6308 0d4d B9010000 		.4byte	.LLST9
 6309 0d51 26       		.uleb128 0x26
 6310 0d52 D3240000 		.4byte	.LASF288
 6311 0d56 01       		.byte	0x1
 6312 0d57 3C03     		.2byte	0x33c
 6313 0d59 0B0E0000 		.4byte	0xe0b
 6314 0d5d 02       		.uleb128 0x2
 6315 0d5e 91       		.byte	0x91
 6316 0d5f 04       		.sleb128 4
 6317 0d60 26       		.uleb128 0x26
 6318 0d61 D9120000 		.4byte	.LASF289
 6319 0d65 01       		.byte	0x1
 6320 0d66 3D03     		.2byte	0x33d
 6321 0d68 A50C0000 		.4byte	0xca5
 6322 0d6c 02       		.uleb128 0x2
 6323 0d6d 91       		.byte	0x91
 6324 0d6e 08       		.sleb128 8
 6325 0d6f 26       		.uleb128 0x26
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 214


 6326 0d70 04220000 		.4byte	.LASF290
 6327 0d74 01       		.byte	0x1
 6328 0d75 3E03     		.2byte	0x33e
 6329 0d77 1B0E0000 		.4byte	0xe1b
 6330 0d7b 02       		.uleb128 0x2
 6331 0d7c 91       		.byte	0x91
 6332 0d7d 0C       		.sleb128 12
 6333 0d7e 27       		.uleb128 0x27
 6334 0d7f 44240000 		.4byte	.LASF263
 6335 0d83 01       		.byte	0x1
 6336 0d84 4003     		.2byte	0x340
 6337 0d86 EB0A0000 		.4byte	0xaeb
 6338 0d8a 01       		.uleb128 0x1
 6339 0d8b 55       		.byte	0x55
 6340 0d8c 28       		.uleb128 0x28
 6341 0d8d 7800     		.ascii	"x\000"
 6342 0d8f 01       		.byte	0x1
 6343 0d90 4103     		.2byte	0x341
 6344 0d92 36090000 		.4byte	0x936
 6345 0d96 D8010000 		.4byte	.LLST10
 6346 0d9a 29       		.uleb128 0x29
 6347 0d9b 1C000000 		.4byte	.LVL19
 6348 0d9f EA2A0000 		.4byte	0x2aea
 6349 0da3 B60D0000 		.4byte	0xdb6
 6350 0da7 25       		.uleb128 0x25
 6351 0da8 01       		.uleb128 0x1
 6352 0da9 51       		.byte	0x51
 6353 0daa 02       		.uleb128 0x2
 6354 0dab 08       		.byte	0x8
 6355 0dac A5       		.byte	0xa5
 6356 0dad 25       		.uleb128 0x25
 6357 0dae 01       		.uleb128 0x1
 6358 0daf 52       		.byte	0x52
 6359 0db0 04       		.uleb128 0x4
 6360 0db1 75       		.byte	0x75
 6361 0db2 00       		.sleb128 0
 6362 0db3 32       		.byte	0x32
 6363 0db4 24       		.byte	0x24
 6364 0db5 00       		.byte	0
 6365 0db6 29       		.uleb128 0x29
 6366 0db7 5A000000 		.4byte	.LVL26
 6367 0dbb F52A0000 		.4byte	0x2af5
 6368 0dbf CA0D0000 		.4byte	0xdca
 6369 0dc3 25       		.uleb128 0x25
 6370 0dc4 01       		.uleb128 0x1
 6371 0dc5 50       		.byte	0x50
 6372 0dc6 02       		.uleb128 0x2
 6373 0dc7 74       		.byte	0x74
 6374 0dc8 04       		.sleb128 4
 6375 0dc9 00       		.byte	0
 6376 0dca 29       		.uleb128 0x29
 6377 0dcb 62000000 		.4byte	.LVL27
 6378 0dcf F52A0000 		.4byte	0x2af5
 6379 0dd3 DE0D0000 		.4byte	0xdde
 6380 0dd7 25       		.uleb128 0x25
 6381 0dd8 01       		.uleb128 0x1
 6382 0dd9 50       		.byte	0x50
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 215


 6383 0dda 02       		.uleb128 0x2
 6384 0ddb 74       		.byte	0x74
 6385 0ddc 18       		.sleb128 24
 6386 0ddd 00       		.byte	0
 6387 0dde 24       		.uleb128 0x24
 6388 0ddf 94000000 		.4byte	.LVL32
 6389 0de3 012B0000 		.4byte	0x2b01
 6390 0de7 25       		.uleb128 0x25
 6391 0de8 01       		.uleb128 0x1
 6392 0de9 50       		.byte	0x50
 6393 0dea 02       		.uleb128 0x2
 6394 0deb 75       		.byte	0x75
 6395 0dec 00       		.sleb128 0
 6396 0ded 25       		.uleb128 0x25
 6397 0dee 01       		.uleb128 0x1
 6398 0def 51       		.byte	0x51
 6399 0df0 02       		.uleb128 0x2
 6400 0df1 7A       		.byte	0x7a
 6401 0df2 00       		.sleb128 0
 6402 0df3 25       		.uleb128 0x25
 6403 0df4 01       		.uleb128 0x1
 6404 0df5 52       		.byte	0x52
 6405 0df6 02       		.uleb128 0x2
 6406 0df7 78       		.byte	0x78
 6407 0df8 00       		.sleb128 0
 6408 0df9 00       		.byte	0
 6409 0dfa 00       		.byte	0
 6410 0dfb 07       		.uleb128 0x7
 6411 0dfc EB000000 		.4byte	0xeb
 6412 0e00 07       		.uleb128 0x7
 6413 0e01 B0000000 		.4byte	0xb0
 6414 0e05 06       		.uleb128 0x6
 6415 0e06 04       		.byte	0x4
 6416 0e07 390A0000 		.4byte	0xa39
 6417 0e0b 07       		.uleb128 0x7
 6418 0e0c 050E0000 		.4byte	0xe05
 6419 0e10 06       		.uleb128 0x6
 6420 0e11 04       		.byte	0x4
 6421 0e12 160E0000 		.4byte	0xe16
 6422 0e16 07       		.uleb128 0x7
 6423 0e17 DB0A0000 		.4byte	0xadb
 6424 0e1b 07       		.uleb128 0x7
 6425 0e1c 100E0000 		.4byte	0xe10
 6426 0e20 22       		.uleb128 0x22
 6427 0e21 6A240000 		.4byte	.LASF291
 6428 0e25 01       		.byte	0x1
 6429 0e26 770D     		.2byte	0xd77
 6430 0e28 00000000 		.4byte	.LFB630
 6431 0e2c 58000000 		.4byte	.LFE630-.LFB630
 6432 0e30 01       		.uleb128 0x1
 6433 0e31 9C       		.byte	0x9c
 6434 0e32 C90E0000 		.4byte	0xec9
 6435 0e36 1E       		.uleb128 0x1e
 6436 0e37 A8010000 		.4byte	.LASF266
 6437 0e3b 01       		.byte	0x1
 6438 0e3c 790D     		.2byte	0xd79
 6439 0e3e 36090000 		.4byte	0x936
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 216


 6440 0e42 02020000 		.4byte	.LLST11
 6441 0e46 29       		.uleb128 0x29
 6442 0e47 14000000 		.4byte	.LVL35
 6443 0e4b 0C2B0000 		.4byte	0x2b0c
 6444 0e4f 670E0000 		.4byte	0xe67
 6445 0e53 25       		.uleb128 0x25
 6446 0e54 01       		.uleb128 0x1
 6447 0e55 50       		.byte	0x50
 6448 0e56 0F       		.uleb128 0xf
 6449 0e57 74       		.byte	0x74
 6450 0e58 00       		.sleb128 0
 6451 0e59 32       		.byte	0x32
 6452 0e5a 24       		.byte	0x24
 6453 0e5b 74       		.byte	0x74
 6454 0e5c 00       		.sleb128 0
 6455 0e5d 22       		.byte	0x22
 6456 0e5e 32       		.byte	0x32
 6457 0e5f 24       		.byte	0x24
 6458 0e60 03       		.byte	0x3
 6459 0e61 30000000 		.4byte	.LANCHOR0+48
 6460 0e65 22       		.byte	0x22
 6461 0e66 00       		.byte	0
 6462 0e67 29       		.uleb128 0x29
 6463 0e68 26000000 		.4byte	.LVL38
 6464 0e6c 0C2B0000 		.4byte	0x2b0c
 6465 0e70 7B0E0000 		.4byte	0xe7b
 6466 0e74 25       		.uleb128 0x25
 6467 0e75 01       		.uleb128 0x1
 6468 0e76 50       		.byte	0x50
 6469 0e77 02       		.uleb128 0x2
 6470 0e78 76       		.byte	0x76
 6471 0e79 00       		.sleb128 0
 6472 0e7a 00       		.byte	0
 6473 0e7b 29       		.uleb128 0x29
 6474 0e7c 30000000 		.4byte	.LVL39
 6475 0e80 0C2B0000 		.4byte	0x2b0c
 6476 0e84 8F0E0000 		.4byte	0xe8f
 6477 0e88 25       		.uleb128 0x25
 6478 0e89 01       		.uleb128 0x1
 6479 0e8a 50       		.byte	0x50
 6480 0e8b 02       		.uleb128 0x2
 6481 0e8c 75       		.byte	0x75
 6482 0e8d 00       		.sleb128 0
 6483 0e8e 00       		.byte	0
 6484 0e8f 29       		.uleb128 0x29
 6485 0e90 38000000 		.4byte	.LVL40
 6486 0e94 0C2B0000 		.4byte	0x2b0c
 6487 0e98 A30E0000 		.4byte	0xea3
 6488 0e9c 25       		.uleb128 0x25
 6489 0e9d 01       		.uleb128 0x1
 6490 0e9e 50       		.byte	0x50
 6491 0e9f 02       		.uleb128 0x2
 6492 0ea0 74       		.byte	0x74
 6493 0ea1 14       		.sleb128 20
 6494 0ea2 00       		.byte	0
 6495 0ea3 29       		.uleb128 0x29
 6496 0ea4 40000000 		.4byte	.LVL41
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 217


 6497 0ea8 0C2B0000 		.4byte	0x2b0c
 6498 0eac B80E0000 		.4byte	0xeb8
 6499 0eb0 25       		.uleb128 0x25
 6500 0eb1 01       		.uleb128 0x1
 6501 0eb2 50       		.byte	0x50
 6502 0eb3 03       		.uleb128 0x3
 6503 0eb4 74       		.byte	0x74
 6504 0eb5 E803     		.sleb128 488
 6505 0eb7 00       		.byte	0
 6506 0eb8 24       		.uleb128 0x24
 6507 0eb9 46000000 		.4byte	.LVL42
 6508 0ebd 0C2B0000 		.4byte	0x2b0c
 6509 0ec1 25       		.uleb128 0x25
 6510 0ec2 01       		.uleb128 0x1
 6511 0ec3 50       		.byte	0x50
 6512 0ec4 02       		.uleb128 0x2
 6513 0ec5 74       		.byte	0x74
 6514 0ec6 00       		.sleb128 0
 6515 0ec7 00       		.byte	0
 6516 0ec8 00       		.byte	0
 6517 0ec9 22       		.uleb128 0x22
 6518 0eca 72120000 		.4byte	.LASF292
 6519 0ece 01       		.byte	0x1
 6520 0ecf 0304     		.2byte	0x403
 6521 0ed1 00000000 		.4byte	.LFB597
 6522 0ed5 AC000000 		.4byte	.LFE597-.LFB597
 6523 0ed9 01       		.uleb128 0x1
 6524 0eda 9C       		.byte	0x9c
 6525 0edb 1F0F0000 		.4byte	0xf1f
 6526 0edf 1D       		.uleb128 0x1d
 6527 0ee0 D9120000 		.4byte	.LASF289
 6528 0ee4 01       		.byte	0x1
 6529 0ee5 0304     		.2byte	0x403
 6530 0ee7 A50C0000 		.4byte	0xca5
 6531 0eeb 21020000 		.4byte	.LLST12
 6532 0eef 23       		.uleb128 0x23
 6533 0ef0 08000000 		.4byte	.LVL44
 6534 0ef4 182B0000 		.4byte	0x2b18
 6535 0ef8 23       		.uleb128 0x23
 6536 0ef9 2C000000 		.4byte	.LVL45
 6537 0efd 200E0000 		.4byte	0xe20
 6538 0f01 29       		.uleb128 0x29
 6539 0f02 7A000000 		.4byte	.LVL46
 6540 0f06 232B0000 		.4byte	0x2b23
 6541 0f0a 150F0000 		.4byte	0xf15
 6542 0f0e 25       		.uleb128 0x25
 6543 0f0f 01       		.uleb128 0x1
 6544 0f10 51       		.byte	0x51
 6545 0f11 02       		.uleb128 0x2
 6546 0f12 74       		.byte	0x74
 6547 0f13 04       		.sleb128 4
 6548 0f14 00       		.byte	0
 6549 0f15 23       		.uleb128 0x23
 6550 0f16 7E000000 		.4byte	.LVL47
 6551 0f1a 2F2B0000 		.4byte	0x2b2f
 6552 0f1e 00       		.byte	0
 6553 0f1f 22       		.uleb128 0x22
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 218


 6554 0f20 E1240000 		.4byte	.LASF293
 6555 0f24 01       		.byte	0x1
 6556 0f25 970D     		.2byte	0xd97
 6557 0f27 00000000 		.4byte	.LFB631
 6558 0f2b 44000000 		.4byte	.LFE631-.LFB631
 6559 0f2f 01       		.uleb128 0x1
 6560 0f30 9C       		.byte	0x9c
 6561 0f31 860F0000 		.4byte	0xf86
 6562 0f35 20       		.uleb128 0x20
 6563 0f36 02000000 		.4byte	.LBB96
 6564 0f3a 3C000000 		.4byte	.LBE96-.LBB96
 6565 0f3e 1E       		.uleb128 0x1e
 6566 0f3f 93230000 		.4byte	.LASF279
 6567 0f43 01       		.byte	0x1
 6568 0f44 9E0D     		.2byte	0xd9e
 6569 0f46 A50C0000 		.4byte	0xca5
 6570 0f4a 4D020000 		.4byte	.LLST13
 6571 0f4e 23       		.uleb128 0x23
 6572 0f4f 08000000 		.4byte	.LVL49
 6573 0f53 182B0000 		.4byte	0x2b18
 6574 0f57 29       		.uleb128 0x29
 6575 0f58 16000000 		.4byte	.LVL51
 6576 0f5c 3A2B0000 		.4byte	0x2b3a
 6577 0f60 6B0F0000 		.4byte	0xf6b
 6578 0f64 25       		.uleb128 0x25
 6579 0f65 01       		.uleb128 0x1
 6580 0f66 50       		.byte	0x50
 6581 0f67 02       		.uleb128 0x2
 6582 0f68 75       		.byte	0x75
 6583 0f69 04       		.sleb128 4
 6584 0f6a 00       		.byte	0
 6585 0f6b 23       		.uleb128 0x23
 6586 0f6c 2E000000 		.4byte	.LVL52
 6587 0f70 2F2B0000 		.4byte	0x2b2f
 6588 0f74 24       		.uleb128 0x24
 6589 0f75 34000000 		.4byte	.LVL53
 6590 0f79 AB0C0000 		.4byte	0xcab
 6591 0f7d 25       		.uleb128 0x25
 6592 0f7e 01       		.uleb128 0x1
 6593 0f7f 50       		.byte	0x50
 6594 0f80 02       		.uleb128 0x2
 6595 0f81 75       		.byte	0x75
 6596 0f82 00       		.sleb128 0
 6597 0f83 00       		.byte	0
 6598 0f84 00       		.byte	0
 6599 0f85 00       		.byte	0
 6600 0f86 22       		.uleb128 0x22
 6601 0f87 F4230000 		.4byte	.LASF294
 6602 0f8b 01       		.byte	0x1
 6603 0f8c 3B13     		.2byte	0x133b
 6604 0f8e 00000000 		.4byte	.LFB643
 6605 0f92 68000000 		.4byte	.LFE643-.LFB643
 6606 0f96 01       		.uleb128 0x1
 6607 0f97 9C       		.byte	0x9c
 6608 0f98 0F100000 		.4byte	0x100f
 6609 0f9c 1D       		.uleb128 0x1d
 6610 0f9d FB200000 		.4byte	.LASF295
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 219


 6611 0fa1 01       		.byte	0x1
 6612 0fa2 3B13     		.2byte	0x133b
 6613 0fa4 41090000 		.4byte	0x941
 6614 0fa8 60020000 		.4byte	.LLST14
 6615 0fac 1D       		.uleb128 0x1d
 6616 0fad 691F0000 		.4byte	.LASF296
 6617 0fb1 01       		.byte	0x1
 6618 0fb2 3B13     		.2byte	0x133b
 6619 0fb4 0F100000 		.4byte	0x100f
 6620 0fb8 8C020000 		.4byte	.LLST15
 6621 0fbc 1E       		.uleb128 0x1e
 6622 0fbd 2F230000 		.4byte	.LASF297
 6623 0fc1 01       		.byte	0x1
 6624 0fc2 3D13     		.2byte	0x133d
 6625 0fc4 41090000 		.4byte	0x941
 6626 0fc8 B8020000 		.4byte	.LLST16
 6627 0fcc 1E       		.uleb128 0x1e
 6628 0fcd E6070000 		.4byte	.LASF298
 6629 0fd1 01       		.byte	0x1
 6630 0fd2 3E13     		.2byte	0x133e
 6631 0fd4 14100000 		.4byte	0x1014
 6632 0fd8 CB020000 		.4byte	.LLST17
 6633 0fdc 23       		.uleb128 0x23
 6634 0fdd 16000000 		.4byte	.LVL57
 6635 0fe1 3A2B0000 		.4byte	0x2b3a
 6636 0fe5 29       		.uleb128 0x29
 6637 0fe6 2A000000 		.4byte	.LVL58
 6638 0fea 232B0000 		.4byte	0x2b23
 6639 0fee FC0F0000 		.4byte	0xffc
 6640 0ff2 25       		.uleb128 0x25
 6641 0ff3 01       		.uleb128 0x1
 6642 0ff4 50       		.byte	0x50
 6643 0ff5 05       		.uleb128 0x5
 6644 0ff6 03       		.byte	0x3
 6645 0ff7 00000000 		.4byte	.LANCHOR0
 6646 0ffb 00       		.byte	0
 6647 0ffc 23       		.uleb128 0x23
 6648 0ffd 4A000000 		.4byte	.LVL61
 6649 1001 462B0000 		.4byte	0x2b46
 6650 1005 23       		.uleb128 0x23
 6651 1006 5A000000 		.4byte	.LVL64
 6652 100a 462B0000 		.4byte	0x2b46
 6653 100e 00       		.byte	0
 6654 100f 07       		.uleb128 0x7
 6655 1010 2B090000 		.4byte	0x92b
 6656 1014 07       		.uleb128 0x7
 6657 1015 41090000 		.4byte	0x941
 6658 1019 2A       		.uleb128 0x2a
 6659 101a 94110000 		.4byte	.LASF300
 6660 101e 01       		.byte	0x1
 6661 101f A30C     		.2byte	0xca3
 6662 1021 00000000 		.4byte	.LFB627
 6663 1025 2C000000 		.4byte	.LFE627-.LFB627
 6664 1029 01       		.uleb128 0x1
 6665 102a 9C       		.byte	0x9c
 6666 102b 68100000 		.4byte	0x1068
 6667 102f 1D       		.uleb128 0x1d
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 220


 6668 1030 4D1B0000 		.4byte	.LASF287
 6669 1034 01       		.byte	0x1
 6670 1035 A30C     		.2byte	0xca3
 6671 1037 B0000000 		.4byte	0xb0
 6672 103b DE020000 		.4byte	.LLST18
 6673 103f 2B       		.uleb128 0x2b
 6674 1040 1E000000 		.4byte	.LBB97
 6675 1044 04000000 		.4byte	.LBE97-.LBB97
 6676 1048 5E100000 		.4byte	0x105e
 6677 104c 2C       		.uleb128 0x2c
 6678 104d 48060000 		.4byte	.LASF430
 6679 1051 01       		.byte	0x1
 6680 1052 D80C     		.2byte	0xcd8
 6681 1054 23       		.uleb128 0x23
 6682 1055 22000000 		.4byte	.LVL69
 6683 1059 522B0000 		.4byte	0x2b52
 6684 105d 00       		.byte	0
 6685 105e 23       		.uleb128 0x23
 6686 105f 06000000 		.4byte	.LVL68
 6687 1063 1F0F0000 		.4byte	0xf1f
 6688 1067 00       		.byte	0
 6689 1068 2D       		.uleb128 0x2d
 6690 1069 91210000 		.4byte	.LASF303
 6691 106d 01       		.byte	0x1
 6692 106e DC02     		.2byte	0x2dc
 6693 1070 2B090000 		.4byte	0x92b
 6694 1074 00000000 		.4byte	.LFB595
 6695 1078 62000000 		.4byte	.LFE595-.LFB595
 6696 107c 01       		.uleb128 0x1
 6697 107d 9C       		.byte	0x9c
 6698 107e AC110000 		.4byte	0x11ac
 6699 1082 1D       		.uleb128 0x1d
 6700 1083 1D130000 		.4byte	.LASF284
 6701 1087 01       		.byte	0x1
 6702 1088 DC02     		.2byte	0x2dc
 6703 108a 04090000 		.4byte	0x904
 6704 108e FF020000 		.4byte	.LLST19
 6705 1092 1D       		.uleb128 0x1d
 6706 1093 F50E0000 		.4byte	.LASF285
 6707 1097 01       		.byte	0x1
 6708 1098 DD02     		.2byte	0x2dd
 6709 109a E60A0000 		.4byte	0xae6
 6710 109e 1D030000 		.4byte	.LLST20
 6711 10a2 1D       		.uleb128 0x1d
 6712 10a3 91090000 		.4byte	.LASF301
 6713 10a7 01       		.byte	0x1
 6714 10a8 DE02     		.2byte	0x2de
 6715 10aa AC110000 		.4byte	0x11ac
 6716 10ae 3B030000 		.4byte	.LLST21
 6717 10b2 1D       		.uleb128 0x1d
 6718 10b3 4D1B0000 		.4byte	.LASF287
 6719 10b7 01       		.byte	0x1
 6720 10b8 DF02     		.2byte	0x2df
 6721 10ba 000E0000 		.4byte	0xe00
 6722 10be 5C030000 		.4byte	.LLST22
 6723 10c2 26       		.uleb128 0x26
 6724 10c3 A8010000 		.4byte	.LASF266
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 221


 6725 10c7 01       		.byte	0x1
 6726 10c8 E002     		.2byte	0x2e0
 6727 10ca 36090000 		.4byte	0x936
 6728 10ce 02       		.uleb128 0x2
 6729 10cf 91       		.byte	0x91
 6730 10d0 00       		.sleb128 0
 6731 10d1 26       		.uleb128 0x26
 6732 10d2 D3240000 		.4byte	.LASF288
 6733 10d6 01       		.byte	0x1
 6734 10d7 E102     		.2byte	0x2e1
 6735 10d9 0B0E0000 		.4byte	0xe0b
 6736 10dd 02       		.uleb128 0x2
 6737 10de 91       		.byte	0x91
 6738 10df 04       		.sleb128 4
 6739 10e0 1E       		.uleb128 0x1e
 6740 10e1 D9120000 		.4byte	.LASF289
 6741 10e5 01       		.byte	0x1
 6742 10e6 E302     		.2byte	0x2e3
 6743 10e8 A50C0000 		.4byte	0xca5
 6744 10ec 7A030000 		.4byte	.LLST23
 6745 10f0 1E       		.uleb128 0x1e
 6746 10f1 901E0000 		.4byte	.LASF278
 6747 10f5 01       		.byte	0x1
 6748 10f6 E402     		.2byte	0x2e4
 6749 10f8 2B090000 		.4byte	0x92b
 6750 10fc A3030000 		.4byte	.LLST24
 6751 1100 2B       		.uleb128 0x2b
 6752 1101 0E000000 		.4byte	.LBB98
 6753 1105 24000000 		.4byte	.LBE98-.LBB98
 6754 1109 58110000 		.4byte	0x1158
 6755 110d 1E       		.uleb128 0x1e
 6756 110e 521C0000 		.4byte	.LASF267
 6757 1112 01       		.byte	0x1
 6758 1113 0103     		.2byte	0x301
 6759 1115 EB0A0000 		.4byte	0xaeb
 6760 1119 C2030000 		.4byte	.LLST25
 6761 111d 29       		.uleb128 0x29
 6762 111e 14000000 		.4byte	.LVL72
 6763 1122 5E2B0000 		.4byte	0x2b5e
 6764 1126 33110000 		.4byte	0x1133
 6765 112a 25       		.uleb128 0x25
 6766 112b 01       		.uleb128 0x1
 6767 112c 50       		.byte	0x50
 6768 112d 04       		.uleb128 0x4
 6769 112e 75       		.byte	0x75
 6770 112f 00       		.sleb128 0
 6771 1130 32       		.byte	0x32
 6772 1131 24       		.byte	0x24
 6773 1132 00       		.byte	0
 6774 1133 29       		.uleb128 0x29
 6775 1134 1E000000 		.4byte	.LVL74
 6776 1138 5E2B0000 		.4byte	0x2b5e
 6777 113c 47110000 		.4byte	0x1147
 6778 1140 25       		.uleb128 0x25
 6779 1141 01       		.uleb128 0x1
 6780 1142 50       		.byte	0x50
 6781 1143 02       		.uleb128 0x2
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 222


 6782 1144 08       		.byte	0x8
 6783 1145 60       		.byte	0x60
 6784 1146 00       		.byte	0
 6785 1147 24       		.uleb128 0x24
 6786 1148 2E000000 		.4byte	.LVL76
 6787 114c DF2A0000 		.4byte	0x2adf
 6788 1150 25       		.uleb128 0x25
 6789 1151 01       		.uleb128 0x1
 6790 1152 50       		.byte	0x50
 6791 1153 02       		.uleb128 0x2
 6792 1154 79       		.byte	0x79
 6793 1155 00       		.sleb128 0
 6794 1156 00       		.byte	0
 6795 1157 00       		.byte	0
 6796 1158 29       		.uleb128 0x29
 6797 1159 4E000000 		.4byte	.LVL79
 6798 115d EB0C0000 		.4byte	0xceb
 6799 1161 9B110000 		.4byte	0x119b
 6800 1165 25       		.uleb128 0x25
 6801 1166 01       		.uleb128 0x1
 6802 1167 50       		.byte	0x50
 6803 1168 02       		.uleb128 0x2
 6804 1169 76       		.byte	0x76
 6805 116a 00       		.sleb128 0
 6806 116b 25       		.uleb128 0x25
 6807 116c 01       		.uleb128 0x1
 6808 116d 51       		.byte	0x51
 6809 116e 02       		.uleb128 0x2
 6810 116f 77       		.byte	0x77
 6811 1170 00       		.sleb128 0
 6812 1171 25       		.uleb128 0x25
 6813 1172 01       		.uleb128 0x1
 6814 1173 52       		.byte	0x52
 6815 1174 02       		.uleb128 0x2
 6816 1175 75       		.byte	0x75
 6817 1176 00       		.sleb128 0
 6818 1177 25       		.uleb128 0x25
 6819 1178 01       		.uleb128 0x1
 6820 1179 53       		.byte	0x53
 6821 117a 02       		.uleb128 0x2
 6822 117b 78       		.byte	0x78
 6823 117c 00       		.sleb128 0
 6824 117d 25       		.uleb128 0x25
 6825 117e 02       		.uleb128 0x2
 6826 117f 7D       		.byte	0x7d
 6827 1180 00       		.sleb128 0
 6828 1181 03       		.uleb128 0x3
 6829 1182 91       		.byte	0x91
 6830 1183 00       		.sleb128 0
 6831 1184 06       		.byte	0x6
 6832 1185 25       		.uleb128 0x25
 6833 1186 02       		.uleb128 0x2
 6834 1187 7D       		.byte	0x7d
 6835 1188 04       		.sleb128 4
 6836 1189 03       		.uleb128 0x3
 6837 118a 91       		.byte	0x91
 6838 118b 04       		.sleb128 4
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 223


 6839 118c 06       		.byte	0x6
 6840 118d 25       		.uleb128 0x25
 6841 118e 02       		.uleb128 0x2
 6842 118f 7D       		.byte	0x7d
 6843 1190 08       		.sleb128 8
 6844 1191 02       		.uleb128 0x2
 6845 1192 74       		.byte	0x74
 6846 1193 00       		.sleb128 0
 6847 1194 25       		.uleb128 0x25
 6848 1195 02       		.uleb128 0x2
 6849 1196 7D       		.byte	0x7d
 6850 1197 0C       		.sleb128 12
 6851 1198 01       		.uleb128 0x1
 6852 1199 30       		.byte	0x30
 6853 119a 00       		.byte	0
 6854 119b 24       		.uleb128 0x24
 6855 119c 54000000 		.4byte	.LVL80
 6856 11a0 C90E0000 		.4byte	0xec9
 6857 11a4 25       		.uleb128 0x25
 6858 11a5 01       		.uleb128 0x1
 6859 11a6 50       		.byte	0x50
 6860 11a7 02       		.uleb128 0x2
 6861 11a8 74       		.byte	0x74
 6862 11a9 00       		.sleb128 0
 6863 11aa 00       		.byte	0
 6864 11ab 00       		.byte	0
 6865 11ac 07       		.uleb128 0x7
 6866 11ad D5000000 		.4byte	0xd5
 6867 11b1 2E       		.uleb128 0x2e
 6868 11b2 10190000 		.4byte	.LASF308
 6869 11b6 01       		.byte	0x1
 6870 11b7 5804     		.2byte	0x458
 6871 11b9 00000000 		.4byte	.LFB598
 6872 11bd B0000000 		.4byte	.LFE598-.LFB598
 6873 11c1 01       		.uleb128 0x1
 6874 11c2 9C       		.byte	0x9c
 6875 11c3 7E120000 		.4byte	0x127e
 6876 11c7 1D       		.uleb128 0x1d
 6877 11c8 631C0000 		.4byte	.LASF302
 6878 11cc 01       		.byte	0x1
 6879 11cd 5804     		.2byte	0x458
 6880 11cf 390A0000 		.4byte	0xa39
 6881 11d3 EB030000 		.4byte	.LLST26
 6882 11d7 1E       		.uleb128 0x1e
 6883 11d8 93230000 		.4byte	.LASF279
 6884 11dc 01       		.byte	0x1
 6885 11dd 5A04     		.2byte	0x45a
 6886 11df A50C0000 		.4byte	0xca5
 6887 11e3 09040000 		.4byte	.LLST27
 6888 11e7 2F       		.uleb128 0x2f
 6889 11e8 A70B0000 		.4byte	0xba7
 6890 11ec 84000000 		.4byte	.LBB99
 6891 11f0 12000000 		.4byte	.LBE99-.LBB99
 6892 11f4 01       		.byte	0x1
 6893 11f5 A504     		.2byte	0x4a5
 6894 11f7 0B120000 		.4byte	0x120b
 6895 11fb 20       		.uleb128 0x20
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 224


 6896 11fc 84000000 		.4byte	.LBB100
 6897 1200 12000000 		.4byte	.LBE100-.LBB100
 6898 1204 21       		.uleb128 0x21
 6899 1205 B30B0000 		.4byte	0xbb3
 6900 1209 00       		.byte	0
 6901 120a 00       		.byte	0
 6902 120b 23       		.uleb128 0x23
 6903 120c 08000000 		.4byte	.LVL84
 6904 1210 182B0000 		.4byte	0x2b18
 6905 1214 29       		.uleb128 0x29
 6906 1215 18000000 		.4byte	.LVL86
 6907 1219 3A2B0000 		.4byte	0x2b3a
 6908 121d 28120000 		.4byte	0x1228
 6909 1221 25       		.uleb128 0x25
 6910 1222 01       		.uleb128 0x1
 6911 1223 50       		.byte	0x50
 6912 1224 02       		.uleb128 0x2
 6913 1225 76       		.byte	0x76
 6914 1226 00       		.sleb128 0
 6915 1227 00       		.byte	0
 6916 1228 29       		.uleb128 0x29
 6917 1229 24000000 		.4byte	.LVL87
 6918 122d 3A2B0000 		.4byte	0x2b3a
 6919 1231 3C120000 		.4byte	0x123c
 6920 1235 25       		.uleb128 0x25
 6921 1236 01       		.uleb128 0x1
 6922 1237 50       		.byte	0x50
 6923 1238 02       		.uleb128 0x2
 6924 1239 74       		.byte	0x74
 6925 123a 18       		.sleb128 24
 6926 123b 00       		.byte	0
 6927 123c 29       		.uleb128 0x29
 6928 123d 44000000 		.4byte	.LVL88
 6929 1241 232B0000 		.4byte	0x2b23
 6930 1245 57120000 		.4byte	0x1257
 6931 1249 25       		.uleb128 0x25
 6932 124a 01       		.uleb128 0x1
 6933 124b 50       		.byte	0x50
 6934 124c 03       		.uleb128 0x3
 6935 124d 75       		.byte	0x75
 6936 124e E803     		.sleb128 488
 6937 1250 25       		.uleb128 0x25
 6938 1251 01       		.uleb128 0x1
 6939 1252 51       		.byte	0x51
 6940 1253 02       		.uleb128 0x2
 6941 1254 76       		.byte	0x76
 6942 1255 00       		.sleb128 0
 6943 1256 00       		.byte	0
 6944 1257 29       		.uleb128 0x29
 6945 1258 62000000 		.4byte	.LVL89
 6946 125c AB0C0000 		.4byte	0xcab
 6947 1260 6B120000 		.4byte	0x126b
 6948 1264 25       		.uleb128 0x25
 6949 1265 01       		.uleb128 0x1
 6950 1266 50       		.byte	0x50
 6951 1267 02       		.uleb128 0x2
 6952 1268 74       		.byte	0x74
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 225


 6953 1269 00       		.sleb128 0
 6954 126a 00       		.byte	0
 6955 126b 23       		.uleb128 0x23
 6956 126c 66000000 		.4byte	.LVL90
 6957 1270 7E0C0000 		.4byte	0xc7e
 6958 1274 23       		.uleb128 0x23
 6959 1275 6A000000 		.4byte	.LVL91
 6960 1279 2F2B0000 		.4byte	0x2b2f
 6961 127d 00       		.byte	0
 6962 127e 2D       		.uleb128 0x2d
 6963 127f 350E0000 		.4byte	.LASF304
 6964 1283 01       		.byte	0x1
 6965 1284 7C05     		.2byte	0x57c
 6966 1286 36090000 		.4byte	0x936
 6967 128a 00000000 		.4byte	.LFB601
 6968 128e 20000000 		.4byte	.LFE601-.LFB601
 6969 1292 01       		.uleb128 0x1
 6970 1293 9C       		.byte	0x9c
 6971 1294 DB120000 		.4byte	0x12db
 6972 1298 1D       		.uleb128 0x1d
 6973 1299 97180000 		.4byte	.LASF282
 6974 129d 01       		.byte	0x1
 6975 129e 7C05     		.2byte	0x57c
 6976 12a0 390A0000 		.4byte	0xa39
 6977 12a4 1C040000 		.4byte	.LLST28
 6978 12a8 1E       		.uleb128 0x1e
 6979 12a9 93230000 		.4byte	.LASF279
 6980 12ad 01       		.byte	0x1
 6981 12ae 7E05     		.2byte	0x57e
 6982 12b0 A50C0000 		.4byte	0xca5
 6983 12b4 3A040000 		.4byte	.LLST29
 6984 12b8 1E       		.uleb128 0x1e
 6985 12b9 71140000 		.4byte	.LASF305
 6986 12bd 01       		.byte	0x1
 6987 12be 7F05     		.2byte	0x57f
 6988 12c0 36090000 		.4byte	0x936
 6989 12c4 4D040000 		.4byte	.LLST30
 6990 12c8 23       		.uleb128 0x23
 6991 12c9 08000000 		.4byte	.LVL95
 6992 12cd 182B0000 		.4byte	0x2b18
 6993 12d1 23       		.uleb128 0x23
 6994 12d2 16000000 		.4byte	.LVL98
 6995 12d6 2F2B0000 		.4byte	0x2b2f
 6996 12da 00       		.byte	0
 6997 12db 2D       		.uleb128 0x2d
 6998 12dc DD150000 		.4byte	.LASF306
 6999 12e0 01       		.byte	0x1
 7000 12e1 9205     		.2byte	0x592
 7001 12e3 36090000 		.4byte	0x936
 7002 12e7 00000000 		.4byte	.LFB602
 7003 12eb 30000000 		.4byte	.LFE602-.LFB602
 7004 12ef 01       		.uleb128 0x1
 7005 12f0 9C       		.byte	0x9c
 7006 12f1 80130000 		.4byte	0x1380
 7007 12f5 1D       		.uleb128 0x1d
 7008 12f6 97180000 		.4byte	.LASF282
 7009 12fa 01       		.byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 226


 7010 12fb 9205     		.2byte	0x592
 7011 12fd 390A0000 		.4byte	0xa39
 7012 1301 6B040000 		.4byte	.LLST31
 7013 1305 1E       		.uleb128 0x1e
 7014 1306 93230000 		.4byte	.LASF279
 7015 130a 01       		.byte	0x1
 7016 130b 9405     		.2byte	0x594
 7017 130d A50C0000 		.4byte	0xca5
 7018 1311 89040000 		.4byte	.LLST32
 7019 1315 27       		.uleb128 0x27
 7020 1316 71140000 		.4byte	.LASF305
 7021 131a 01       		.byte	0x1
 7022 131b 9505     		.2byte	0x595
 7023 131d 36090000 		.4byte	0x936
 7024 1321 01       		.uleb128 0x1
 7025 1322 50       		.byte	0x50
 7026 1323 30       		.uleb128 0x30
 7027 1324 990A0000 		.4byte	.LASF307
 7028 1328 01       		.byte	0x1
 7029 1329 9505     		.2byte	0x595
 7030 132b 36090000 		.4byte	0x936
 7031 132f 2F       		.uleb128 0x2f
 7032 1330 BF0B0000 		.4byte	0xbbf
 7033 1334 08000000 		.4byte	.LBB101
 7034 1338 14000000 		.4byte	.LBE101-.LBB101
 7035 133c 01       		.byte	0x1
 7036 133d A905     		.2byte	0x5a9
 7037 133f 58130000 		.4byte	0x1358
 7038 1343 20       		.uleb128 0x20
 7039 1344 08000000 		.4byte	.LBB102
 7040 1348 14000000 		.4byte	.LBE102-.LBB102
 7041 134c 21       		.uleb128 0x21
 7042 134d CF0B0000 		.4byte	0xbcf
 7043 1351 21       		.uleb128 0x21
 7044 1352 DA0B0000 		.4byte	0xbda
 7045 1356 00       		.byte	0
 7046 1357 00       		.byte	0
 7047 1358 2F       		.uleb128 0x2f
 7048 1359 E60B0000 		.4byte	0xbe6
 7049 135d 26000000 		.4byte	.LBB103
 7050 1361 04000000 		.4byte	.LBE103-.LBB103
 7051 1365 01       		.byte	0x1
 7052 1366 B005     		.2byte	0x5b0
 7053 1368 76130000 		.4byte	0x1376
 7054 136c 31       		.uleb128 0x31
 7055 136d F20B0000 		.4byte	0xbf2
 7056 1371 9C040000 		.4byte	.LLST33
 7057 1375 00       		.byte	0
 7058 1376 23       		.uleb128 0x23
 7059 1377 08000000 		.4byte	.LVL101
 7060 137b 692B0000 		.4byte	0x2b69
 7061 137f 00       		.byte	0
 7062 1380 2E       		.uleb128 0x2e
 7063 1381 71170000 		.4byte	.LASF309
 7064 1385 01       		.byte	0x1
 7065 1386 BA05     		.2byte	0x5ba
 7066 1388 00000000 		.4byte	.LFB603
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 227


 7067 138c DC000000 		.4byte	.LFE603-.LFB603
 7068 1390 01       		.uleb128 0x1
 7069 1391 9C       		.byte	0x9c
 7070 1392 55140000 		.4byte	0x1455
 7071 1396 1D       		.uleb128 0x1d
 7072 1397 97180000 		.4byte	.LASF282
 7073 139b 01       		.byte	0x1
 7074 139c BA05     		.2byte	0x5ba
 7075 139e 390A0000 		.4byte	0xa39
 7076 13a2 AF040000 		.4byte	.LLST34
 7077 13a6 1D       		.uleb128 0x1d
 7078 13a7 68150000 		.4byte	.LASF310
 7079 13ab 01       		.byte	0x1
 7080 13ac BA05     		.2byte	0x5ba
 7081 13ae 36090000 		.4byte	0x936
 7082 13b2 CD040000 		.4byte	.LLST35
 7083 13b6 1E       		.uleb128 0x1e
 7084 13b7 93230000 		.4byte	.LASF279
 7085 13bb 01       		.byte	0x1
 7086 13bc BC05     		.2byte	0x5bc
 7087 13be A50C0000 		.4byte	0xca5
 7088 13c2 F7040000 		.4byte	.LLST36
 7089 13c6 1E       		.uleb128 0x1e
 7090 13c7 EE210000 		.4byte	.LASF311
 7091 13cb 01       		.byte	0x1
 7092 13cc BD05     		.2byte	0x5bd
 7093 13ce 36090000 		.4byte	0x936
 7094 13d2 0A050000 		.4byte	.LLST37
 7095 13d6 1E       		.uleb128 0x1e
 7096 13d7 DF200000 		.4byte	.LASF312
 7097 13db 01       		.byte	0x1
 7098 13dc BD05     		.2byte	0x5bd
 7099 13de 36090000 		.4byte	0x936
 7100 13e2 1D050000 		.4byte	.LLST38
 7101 13e6 1E       		.uleb128 0x1e
 7102 13e7 95080000 		.4byte	.LASF313
 7103 13eb 01       		.byte	0x1
 7104 13ec BE05     		.2byte	0x5be
 7105 13ee 2B090000 		.4byte	0x92b
 7106 13f2 30050000 		.4byte	.LLST39
 7107 13f6 2F       		.uleb128 0x2f
 7108 13f7 A70B0000 		.4byte	0xba7
 7109 13fb 04000000 		.4byte	.LBB105
 7110 13ff 12000000 		.4byte	.LBE105-.LBB105
 7111 1403 01       		.byte	0x1
 7112 1404 C005     		.2byte	0x5c0
 7113 1406 1A140000 		.4byte	0x141a
 7114 140a 20       		.uleb128 0x20
 7115 140b 04000000 		.4byte	.LBB106
 7116 140f 12000000 		.4byte	.LBE106-.LBB106
 7117 1413 21       		.uleb128 0x21
 7118 1414 B30B0000 		.4byte	0xbb3
 7119 1418 00       		.byte	0
 7120 1419 00       		.byte	0
 7121 141a 23       		.uleb128 0x23
 7122 141b 26000000 		.4byte	.LVL109
 7123 141f 182B0000 		.4byte	0x2b18
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 228


 7124 1423 29       		.uleb128 0x29
 7125 1424 96000000 		.4byte	.LVL115
 7126 1428 3A2B0000 		.4byte	0x2b3a
 7127 142c 37140000 		.4byte	0x1437
 7128 1430 25       		.uleb128 0x25
 7129 1431 01       		.uleb128 0x1
 7130 1432 50       		.byte	0x50
 7131 1433 02       		.uleb128 0x2
 7132 1434 75       		.byte	0x75
 7133 1435 00       		.sleb128 0
 7134 1436 00       		.byte	0
 7135 1437 29       		.uleb128 0x29
 7136 1438 B8000000 		.4byte	.LVL116
 7137 143c 232B0000 		.4byte	0x2b23
 7138 1440 4B140000 		.4byte	0x144b
 7139 1444 25       		.uleb128 0x25
 7140 1445 01       		.uleb128 0x1
 7141 1446 51       		.byte	0x51
 7142 1447 02       		.uleb128 0x2
 7143 1448 75       		.byte	0x75
 7144 1449 00       		.sleb128 0
 7145 144a 00       		.byte	0
 7146 144b 23       		.uleb128 0x23
 7147 144c CE000000 		.4byte	.LVL118
 7148 1450 2F2B0000 		.4byte	0x2b2f
 7149 1454 00       		.byte	0
 7150 1455 2E       		.uleb128 0x2e
 7151 1456 51240000 		.4byte	.LASF314
 7152 145a 01       		.byte	0x1
 7153 145b F106     		.2byte	0x6f1
 7154 145d 00000000 		.4byte	.LFB606
 7155 1461 88000000 		.4byte	.LFE606-.LFB606
 7156 1465 01       		.uleb128 0x1
 7157 1466 9C       		.byte	0x9c
 7158 1467 FE140000 		.4byte	0x14fe
 7159 146b 1D       		.uleb128 0x1d
 7160 146c 80070000 		.4byte	.LASF315
 7161 1470 01       		.byte	0x1
 7162 1471 F106     		.2byte	0x6f1
 7163 1473 390A0000 		.4byte	0xa39
 7164 1477 4F050000 		.4byte	.LLST40
 7165 147b 1E       		.uleb128 0x1e
 7166 147c 93230000 		.4byte	.LASF279
 7167 1480 01       		.byte	0x1
 7168 1481 F306     		.2byte	0x6f3
 7169 1483 FE140000 		.4byte	0x14fe
 7170 1487 7B050000 		.4byte	.LLST41
 7171 148b 2F       		.uleb128 0x2f
 7172 148c A70B0000 		.4byte	0xba7
 7173 1490 02000000 		.4byte	.LBB107
 7174 1494 12000000 		.4byte	.LBE107-.LBB107
 7175 1498 01       		.byte	0x1
 7176 1499 F606     		.2byte	0x6f6
 7177 149b AF140000 		.4byte	0x14af
 7178 149f 20       		.uleb128 0x20
 7179 14a0 02000000 		.4byte	.LBB108
 7180 14a4 12000000 		.4byte	.LBE108-.LBB108
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 229


 7181 14a8 21       		.uleb128 0x21
 7182 14a9 B30B0000 		.4byte	0xbb3
 7183 14ad 00       		.byte	0
 7184 14ae 00       		.byte	0
 7185 14af 23       		.uleb128 0x23
 7186 14b0 28000000 		.4byte	.LVL122
 7187 14b4 182B0000 		.4byte	0x2b18
 7188 14b8 29       		.uleb128 0x29
 7189 14b9 2E000000 		.4byte	.LVL123
 7190 14bd FE0B0000 		.4byte	0xbfe
 7191 14c1 CC140000 		.4byte	0x14cc
 7192 14c5 25       		.uleb128 0x25
 7193 14c6 01       		.uleb128 0x1
 7194 14c7 50       		.byte	0x50
 7195 14c8 02       		.uleb128 0x2
 7196 14c9 74       		.byte	0x74
 7197 14ca 00       		.sleb128 0
 7198 14cb 00       		.byte	0
 7199 14cc 29       		.uleb128 0x29
 7200 14cd 38000000 		.4byte	.LVL124
 7201 14d1 3A2B0000 		.4byte	0x2b3a
 7202 14d5 E0140000 		.4byte	0x14e0
 7203 14d9 25       		.uleb128 0x25
 7204 14da 01       		.uleb128 0x1
 7205 14db 50       		.byte	0x50
 7206 14dc 02       		.uleb128 0x2
 7207 14dd 76       		.byte	0x76
 7208 14de 00       		.sleb128 0
 7209 14df 00       		.byte	0
 7210 14e0 29       		.uleb128 0x29
 7211 14e1 5E000000 		.4byte	.LVL125
 7212 14e5 232B0000 		.4byte	0x2b23
 7213 14e9 F4140000 		.4byte	0x14f4
 7214 14ed 25       		.uleb128 0x25
 7215 14ee 01       		.uleb128 0x1
 7216 14ef 51       		.byte	0x51
 7217 14f0 02       		.uleb128 0x2
 7218 14f1 76       		.byte	0x76
 7219 14f2 00       		.sleb128 0
 7220 14f3 00       		.byte	0
 7221 14f4 23       		.uleb128 0x23
 7222 14f5 7E000000 		.4byte	.LVL126
 7223 14f9 2F2B0000 		.4byte	0x2b2f
 7224 14fd 00       		.byte	0
 7225 14fe 07       		.uleb128 0x7
 7226 14ff A50C0000 		.4byte	0xca5
 7227 1503 2D       		.uleb128 0x2d
 7228 1504 140B0000 		.4byte	.LASF316
 7229 1508 01       		.byte	0x1
 7230 1509 2707     		.2byte	0x727
 7231 150b 2B090000 		.4byte	0x92b
 7232 150f 00000000 		.4byte	.LFB607
 7233 1513 A4000000 		.4byte	.LFE607-.LFB607
 7234 1517 01       		.uleb128 0x1
 7235 1518 9C       		.byte	0x9c
 7236 1519 23160000 		.4byte	0x1623
 7237 151d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 230


 7238 151e 80070000 		.4byte	.LASF315
 7239 1522 01       		.byte	0x1
 7240 1523 2707     		.2byte	0x727
 7241 1525 390A0000 		.4byte	0xa39
 7242 1529 A7050000 		.4byte	.LLST42
 7243 152d 1E       		.uleb128 0x1e
 7244 152e 95080000 		.4byte	.LASF313
 7245 1532 01       		.byte	0x1
 7246 1533 2907     		.2byte	0x729
 7247 1535 2B090000 		.4byte	0x92b
 7248 1539 D3050000 		.4byte	.LLST43
 7249 153d 1E       		.uleb128 0x1e
 7250 153e 93230000 		.4byte	.LASF279
 7251 1542 01       		.byte	0x1
 7252 1543 2A07     		.2byte	0x72a
 7253 1545 FE140000 		.4byte	0x14fe
 7254 1549 14060000 		.4byte	.LLST44
 7255 154d 30       		.uleb128 0x30
 7256 154e 01250000 		.4byte	.LASF317
 7257 1552 01       		.byte	0x1
 7258 1553 2B07     		.2byte	0x72b
 7259 1555 36090000 		.4byte	0x936
 7260 1559 2F       		.uleb128 0x2f
 7261 155a A70B0000 		.4byte	0xba7
 7262 155e 04000000 		.4byte	.LBB109
 7263 1562 14000000 		.4byte	.LBE109-.LBB109
 7264 1566 01       		.byte	0x1
 7265 1567 2D07     		.2byte	0x72d
 7266 1569 7D150000 		.4byte	0x157d
 7267 156d 20       		.uleb128 0x20
 7268 156e 04000000 		.4byte	.LBB110
 7269 1572 14000000 		.4byte	.LBE110-.LBB110
 7270 1576 21       		.uleb128 0x21
 7271 1577 B30B0000 		.4byte	0xbb3
 7272 157b 00       		.byte	0
 7273 157c 00       		.byte	0
 7274 157d 2F       		.uleb128 0x2f
 7275 157e BF0B0000 		.4byte	0xbbf
 7276 1582 1C000000 		.4byte	.LBB111
 7277 1586 14000000 		.4byte	.LBE111-.LBB111
 7278 158a 01       		.byte	0x1
 7279 158b 4107     		.2byte	0x741
 7280 158d A6150000 		.4byte	0x15a6
 7281 1591 20       		.uleb128 0x20
 7282 1592 1C000000 		.4byte	.LBB112
 7283 1596 14000000 		.4byte	.LBE112-.LBB112
 7284 159a 21       		.uleb128 0x21
 7285 159b CF0B0000 		.4byte	0xbcf
 7286 159f 21       		.uleb128 0x21
 7287 15a0 DA0B0000 		.4byte	0xbda
 7288 15a4 00       		.byte	0
 7289 15a5 00       		.byte	0
 7290 15a6 2F       		.uleb128 0x2f
 7291 15a7 E60B0000 		.4byte	0xbe6
 7292 15ab 90000000 		.4byte	.LBB113
 7293 15af 04000000 		.4byte	.LBE113-.LBB113
 7294 15b3 01       		.byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 231


 7295 15b4 6507     		.2byte	0x765
 7296 15b6 C4150000 		.4byte	0x15c4
 7297 15ba 31       		.uleb128 0x31
 7298 15bb F20B0000 		.4byte	0xbf2
 7299 15bf 40060000 		.4byte	.LLST45
 7300 15c3 00       		.byte	0
 7301 15c4 23       		.uleb128 0x23
 7302 15c5 1C000000 		.4byte	.LVL131
 7303 15c9 692B0000 		.4byte	0x2b69
 7304 15cd 29       		.uleb128 0x29
 7305 15ce 36000000 		.4byte	.LVL132
 7306 15d2 FE0B0000 		.4byte	0xbfe
 7307 15d6 E1150000 		.4byte	0x15e1
 7308 15da 25       		.uleb128 0x25
 7309 15db 01       		.uleb128 0x1
 7310 15dc 50       		.byte	0x50
 7311 15dd 02       		.uleb128 0x2
 7312 15de 74       		.byte	0x74
 7313 15df 00       		.sleb128 0
 7314 15e0 00       		.byte	0
 7315 15e1 29       		.uleb128 0x29
 7316 15e2 5C000000 		.4byte	.LVL134
 7317 15e6 3A2B0000 		.4byte	0x2b3a
 7318 15ea F5150000 		.4byte	0x15f5
 7319 15ee 25       		.uleb128 0x25
 7320 15ef 01       		.uleb128 0x1
 7321 15f0 50       		.byte	0x50
 7322 15f1 02       		.uleb128 0x2
 7323 15f2 76       		.byte	0x76
 7324 15f3 00       		.sleb128 0
 7325 15f4 00       		.byte	0
 7326 15f5 29       		.uleb128 0x29
 7327 15f6 7E000000 		.4byte	.LVL135
 7328 15fa 232B0000 		.4byte	0x2b23
 7329 15fe 09160000 		.4byte	0x1609
 7330 1602 25       		.uleb128 0x25
 7331 1603 01       		.uleb128 0x1
 7332 1604 51       		.byte	0x51
 7333 1605 02       		.uleb128 0x2
 7334 1606 76       		.byte	0x76
 7335 1607 00       		.sleb128 0
 7336 1608 00       		.byte	0
 7337 1609 24       		.uleb128 0x24
 7338 160a 8A000000 		.4byte	.LVL137
 7339 160e 232B0000 		.4byte	0x2b23
 7340 1612 25       		.uleb128 0x25
 7341 1613 01       		.uleb128 0x1
 7342 1614 50       		.byte	0x50
 7343 1615 05       		.uleb128 0x5
 7344 1616 03       		.byte	0x3
 7345 1617 14000000 		.4byte	.LANCHOR0+20
 7346 161b 25       		.uleb128 0x25
 7347 161c 01       		.uleb128 0x1
 7348 161d 51       		.byte	0x51
 7349 161e 02       		.uleb128 0x2
 7350 161f 74       		.byte	0x74
 7351 1620 18       		.sleb128 24
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 232


 7352 1621 00       		.byte	0
 7353 1622 00       		.byte	0
 7354 1623 2E       		.uleb128 0x2e
 7355 1624 551F0000 		.4byte	.LASF318
 7356 1628 01       		.byte	0x1
 7357 1629 6D07     		.2byte	0x76d
 7358 162b 00000000 		.4byte	.LFB608
 7359 162f 7C000000 		.4byte	.LFE608-.LFB608
 7360 1633 01       		.uleb128 0x1
 7361 1634 9C       		.byte	0x9c
 7362 1635 DF160000 		.4byte	0x16df
 7363 1639 1E       		.uleb128 0x1e
 7364 163a 901E0000 		.4byte	.LASF278
 7365 163e 01       		.byte	0x1
 7366 163f 6F07     		.2byte	0x76f
 7367 1641 2B090000 		.4byte	0x92b
 7368 1645 53060000 		.4byte	.LLST46
 7369 1649 2F       		.uleb128 0x2f
 7370 164a A70B0000 		.4byte	0xba7
 7371 164e 22000000 		.4byte	.LBB115
 7372 1652 10000000 		.4byte	.LBE115-.LBB115
 7373 1656 01       		.byte	0x1
 7374 1657 B507     		.2byte	0x7b5
 7375 1659 6D160000 		.4byte	0x166d
 7376 165d 20       		.uleb128 0x20
 7377 165e 22000000 		.4byte	.LBB116
 7378 1662 10000000 		.4byte	.LBE116-.LBB116
 7379 1666 21       		.uleb128 0x21
 7380 1667 B30B0000 		.4byte	0xbb3
 7381 166b 00       		.byte	0
 7382 166c 00       		.byte	0
 7383 166d 2F       		.uleb128 0x2f
 7384 166e A70B0000 		.4byte	0xba7
 7385 1672 52000000 		.4byte	.LBB117
 7386 1676 12000000 		.4byte	.LBE117-.LBB117
 7387 167a 01       		.byte	0x1
 7388 167b DC07     		.2byte	0x7dc
 7389 167d 91160000 		.4byte	0x1691
 7390 1681 20       		.uleb128 0x20
 7391 1682 52000000 		.4byte	.LBB118
 7392 1686 12000000 		.4byte	.LBE118-.LBB118
 7393 168a 21       		.uleb128 0x21
 7394 168b B30B0000 		.4byte	0xbb3
 7395 168f 00       		.byte	0
 7396 1690 00       		.byte	0
 7397 1691 29       		.uleb128 0x29
 7398 1692 16000000 		.4byte	.LVL141
 7399 1696 68100000 		.4byte	0x1068
 7400 169a CC160000 		.4byte	0x16cc
 7401 169e 25       		.uleb128 0x25
 7402 169f 01       		.uleb128 0x1
 7403 16a0 50       		.byte	0x50
 7404 16a1 05       		.uleb128 0x5
 7405 16a2 03       		.byte	0x3
 7406 16a3 00000000 		.4byte	prvIdleTask
 7407 16a7 25       		.uleb128 0x25
 7408 16a8 01       		.uleb128 0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 233


 7409 16a9 51       		.byte	0x51
 7410 16aa 05       		.uleb128 0x5
 7411 16ab 03       		.byte	0x3
 7412 16ac 00000000 		.4byte	.LC0
 7413 16b0 25       		.uleb128 0x25
 7414 16b1 01       		.uleb128 0x1
 7415 16b2 52       		.byte	0x52
 7416 16b3 02       		.uleb128 0x2
 7417 16b4 08       		.byte	0x8
 7418 16b5 80       		.byte	0x80
 7419 16b6 25       		.uleb128 0x25
 7420 16b7 01       		.uleb128 0x1
 7421 16b8 53       		.byte	0x53
 7422 16b9 01       		.uleb128 0x1
 7423 16ba 30       		.byte	0x30
 7424 16bb 25       		.uleb128 0x25
 7425 16bc 02       		.uleb128 0x2
 7426 16bd 7D       		.byte	0x7d
 7427 16be 00       		.sleb128 0
 7428 16bf 01       		.uleb128 0x1
 7429 16c0 30       		.byte	0x30
 7430 16c1 25       		.uleb128 0x25
 7431 16c2 02       		.uleb128 0x2
 7432 16c3 7D       		.byte	0x7d
 7433 16c4 04       		.sleb128 4
 7434 16c5 05       		.uleb128 0x5
 7435 16c6 03       		.byte	0x3
 7436 16c7 20020000 		.4byte	.LANCHOR0+544
 7437 16cb 00       		.byte	0
 7438 16cc 23       		.uleb128 0x23
 7439 16cd 1E000000 		.4byte	.LVL142
 7440 16d1 742B0000 		.4byte	0x2b74
 7441 16d5 23       		.uleb128 0x23
 7442 16d6 4A000000 		.4byte	.LVL143
 7443 16da 802B0000 		.4byte	0x2b80
 7444 16de 00       		.byte	0
 7445 16df 2E       		.uleb128 0x2e
 7446 16e0 230E0000 		.4byte	.LASF319
 7447 16e4 01       		.byte	0x1
 7448 16e5 E507     		.2byte	0x7e5
 7449 16e7 00000000 		.4byte	.LFB609
 7450 16eb 24000000 		.4byte	.LFE609-.LFB609
 7451 16ef 01       		.uleb128 0x1
 7452 16f0 9C       		.byte	0x9c
 7453 16f1 23170000 		.4byte	0x1723
 7454 16f5 2F       		.uleb128 0x2f
 7455 16f6 A70B0000 		.4byte	0xba7
 7456 16fa 02000000 		.4byte	.LBB119
 7457 16fe 10000000 		.4byte	.LBE119-.LBB119
 7458 1702 01       		.byte	0x1
 7459 1703 EA07     		.2byte	0x7ea
 7460 1705 19170000 		.4byte	0x1719
 7461 1709 20       		.uleb128 0x20
 7462 170a 02000000 		.4byte	.LBB120
 7463 170e 10000000 		.4byte	.LBE120-.LBB120
 7464 1712 21       		.uleb128 0x21
 7465 1713 B30B0000 		.4byte	0xbb3
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 234


 7466 1717 00       		.byte	0
 7467 1718 00       		.byte	0
 7468 1719 23       		.uleb128 0x23
 7469 171a 1E000000 		.4byte	.LVL147
 7470 171e 8B2B0000 		.4byte	0x2b8b
 7471 1722 00       		.byte	0
 7472 1723 32       		.uleb128 0x32
 7473 1724 070C0000 		.4byte	.LASF359
 7474 1728 01       		.byte	0x1
 7475 1729 F007     		.2byte	0x7f0
 7476 172b 00000000 		.4byte	.LFB610
 7477 172f 14000000 		.4byte	.LFE610-.LFB610
 7478 1733 01       		.uleb128 0x1
 7479 1734 9C       		.byte	0x9c
 7480 1735 2D       		.uleb128 0x2d
 7481 1736 25160000 		.4byte	.LASF320
 7482 173a 01       		.byte	0x1
 7483 173b A708     		.2byte	0x8a7
 7484 173d 41090000 		.4byte	0x941
 7485 1741 00000000 		.4byte	.LFB612
 7486 1745 0C000000 		.4byte	.LFE612-.LFB612
 7487 1749 01       		.uleb128 0x1
 7488 174a 9C       		.byte	0x9c
 7489 174b 5E170000 		.4byte	0x175e
 7490 174f 27       		.uleb128 0x27
 7491 1750 4E1F0000 		.4byte	.LASF321
 7492 1754 01       		.byte	0x1
 7493 1755 A908     		.2byte	0x8a9
 7494 1757 41090000 		.4byte	0x941
 7495 175b 01       		.uleb128 0x1
 7496 175c 50       		.byte	0x50
 7497 175d 00       		.byte	0
 7498 175e 2D       		.uleb128 0x2d
 7499 175f 800A0000 		.4byte	.LASF322
 7500 1763 01       		.byte	0x1
 7501 1764 B608     		.2byte	0x8b6
 7502 1766 41090000 		.4byte	0x941
 7503 176a 00000000 		.4byte	.LFB613
 7504 176e 14000000 		.4byte	.LFE613-.LFB613
 7505 1772 01       		.uleb128 0x1
 7506 1773 9C       		.byte	0x9c
 7507 1774 9D170000 		.4byte	0x179d
 7508 1778 27       		.uleb128 0x27
 7509 1779 901E0000 		.4byte	.LASF278
 7510 177d 01       		.byte	0x1
 7511 177e B808     		.2byte	0x8b8
 7512 1780 41090000 		.4byte	0x941
 7513 1784 01       		.uleb128 0x1
 7514 1785 50       		.byte	0x50
 7515 1786 33       		.uleb128 0x33
 7516 1787 01250000 		.4byte	.LASF317
 7517 178b 01       		.byte	0x1
 7518 178c B908     		.2byte	0x8b9
 7519 178e 36090000 		.4byte	0x936
 7520 1792 00       		.byte	0
 7521 1793 23       		.uleb128 0x23
 7522 1794 06000000 		.4byte	.LVL149
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 235


 7523 1798 692B0000 		.4byte	0x2b69
 7524 179c 00       		.byte	0
 7525 179d 34       		.uleb128 0x34
 7526 179e 7D020000 		.4byte	.LASF442
 7527 17a2 01       		.byte	0x1
 7528 17a3 D508     		.2byte	0x8d5
 7529 17a5 36090000 		.4byte	0x936
 7530 17a9 00000000 		.4byte	.LFB614
 7531 17ad 0C000000 		.4byte	.LFE614-.LFB614
 7532 17b1 01       		.uleb128 0x1
 7533 17b2 9C       		.byte	0x9c
 7534 17b3 2D       		.uleb128 0x2d
 7535 17b4 1B1F0000 		.4byte	.LASF323
 7536 17b8 01       		.byte	0x1
 7537 17b9 DD08     		.2byte	0x8dd
 7538 17bb B2000000 		.4byte	0xb2
 7539 17bf 00000000 		.4byte	.LFB615
 7540 17c3 28000000 		.4byte	.LFE615-.LFB615
 7541 17c7 01       		.uleb128 0x1
 7542 17c8 9C       		.byte	0x9c
 7543 17c9 0E180000 		.4byte	0x180e
 7544 17cd 1D       		.uleb128 0x1d
 7545 17ce 7C180000 		.4byte	.LASF324
 7546 17d2 01       		.byte	0x1
 7547 17d3 DD08     		.2byte	0x8dd
 7548 17d5 390A0000 		.4byte	0xa39
 7549 17d9 7C060000 		.4byte	.LLST47
 7550 17dd 1E       		.uleb128 0x1e
 7551 17de 93230000 		.4byte	.LASF279
 7552 17e2 01       		.byte	0x1
 7553 17e3 DF08     		.2byte	0x8df
 7554 17e5 A50C0000 		.4byte	0xca5
 7555 17e9 8F060000 		.4byte	.LLST48
 7556 17ed 1F       		.uleb128 0x1f
 7557 17ee A70B0000 		.4byte	0xba7
 7558 17f2 0C000000 		.4byte	.LBB121
 7559 17f6 12000000 		.4byte	.LBE121-.LBB121
 7560 17fa 01       		.byte	0x1
 7561 17fb E408     		.2byte	0x8e4
 7562 17fd 20       		.uleb128 0x20
 7563 17fe 0C000000 		.4byte	.LBB122
 7564 1802 12000000 		.4byte	.LBE122-.LBB122
 7565 1806 21       		.uleb128 0x21
 7566 1807 B30B0000 		.4byte	0xbb3
 7567 180b 00       		.byte	0
 7568 180c 00       		.byte	0
 7569 180d 00       		.byte	0
 7570 180e 2D       		.uleb128 0x2d
 7571 180f 3B050000 		.4byte	.LASF325
 7572 1813 01       		.byte	0x1
 7573 1814 1D0A     		.2byte	0xa1d
 7574 1816 2B090000 		.4byte	0x92b
 7575 181a 00000000 		.4byte	.LFB616
 7576 181e FC000000 		.4byte	.LFE616-.LFB616
 7577 1822 01       		.uleb128 0x1
 7578 1823 9C       		.byte	0x9c
 7579 1824 F2180000 		.4byte	0x18f2
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 236


 7580 1828 1E       		.uleb128 0x1e
 7581 1829 93230000 		.4byte	.LASF279
 7582 182d 01       		.byte	0x1
 7583 182e 1F0A     		.2byte	0xa1f
 7584 1830 A50C0000 		.4byte	0xca5
 7585 1834 AD060000 		.4byte	.LLST49
 7586 1838 1E       		.uleb128 0x1e
 7587 1839 5A1B0000 		.4byte	.LASF233
 7588 183d 01       		.byte	0x1
 7589 183e 200A     		.2byte	0xa20
 7590 1840 41090000 		.4byte	0x941
 7591 1844 CB060000 		.4byte	.LLST50
 7592 1848 1E       		.uleb128 0x1e
 7593 1849 1A1C0000 		.4byte	.LASF326
 7594 184d 01       		.byte	0x1
 7595 184e 210A     		.2byte	0xa21
 7596 1850 2B090000 		.4byte	0x92b
 7597 1854 DE060000 		.4byte	.LLST51
 7598 1858 35       		.uleb128 0x35
 7599 1859 00000000 		.4byte	.Ldebug_ranges0+0
 7600 185d 1E       		.uleb128 0x1e
 7601 185e E6070000 		.4byte	.LASF298
 7602 1862 01       		.byte	0x1
 7603 1863 2B0A     		.2byte	0xa2b
 7604 1865 14100000 		.4byte	0x1014
 7605 1869 36070000 		.4byte	.LLST52
 7606 186d 2B       		.uleb128 0x2b
 7607 186e 1C000000 		.4byte	.LBB124
 7608 1872 34000000 		.4byte	.LBE124-.LBB124
 7609 1876 B8180000 		.4byte	0x18b8
 7610 187a 1E       		.uleb128 0x1e
 7611 187b 9F0B0000 		.4byte	.LASF327
 7612 187f 01       		.byte	0x1
 7613 1880 330A     		.2byte	0xa33
 7614 1882 F2180000 		.4byte	0x18f2
 7615 1886 49070000 		.4byte	.LLST53
 7616 188a 2F       		.uleb128 0x2f
 7617 188b A70B0000 		.4byte	0xba7
 7618 188f 22000000 		.4byte	.LBB125
 7619 1893 12000000 		.4byte	.LBE125-.LBB125
 7620 1897 01       		.byte	0x1
 7621 1898 330A     		.2byte	0xa33
 7622 189a AE180000 		.4byte	0x18ae
 7623 189e 20       		.uleb128 0x20
 7624 189f 22000000 		.4byte	.LBB126
 7625 18a3 12000000 		.4byte	.LBE126-.LBB126
 7626 18a7 21       		.uleb128 0x21
 7627 18a8 B30B0000 		.4byte	0xbb3
 7628 18ac 00       		.byte	0
 7629 18ad 00       		.byte	0
 7630 18ae 23       		.uleb128 0x23
 7631 18af 50000000 		.4byte	.LVL161
 7632 18b3 7E0C0000 		.4byte	0xc7e
 7633 18b7 00       		.byte	0
 7634 18b8 29       		.uleb128 0x29
 7635 18b9 9A000000 		.4byte	.LVL168
 7636 18bd 3A2B0000 		.4byte	0x2b3a
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 237


 7637 18c1 CC180000 		.4byte	0x18cc
 7638 18c5 25       		.uleb128 0x25
 7639 18c6 01       		.uleb128 0x1
 7640 18c7 50       		.byte	0x50
 7641 18c8 02       		.uleb128 0x2
 7642 18c9 78       		.byte	0x78
 7643 18ca 00       		.sleb128 0
 7644 18cb 00       		.byte	0
 7645 18cc 29       		.uleb128 0x29
 7646 18cd A6000000 		.4byte	.LVL169
 7647 18d1 3A2B0000 		.4byte	0x2b3a
 7648 18d5 E0180000 		.4byte	0x18e0
 7649 18d9 25       		.uleb128 0x25
 7650 18da 01       		.uleb128 0x1
 7651 18db 50       		.byte	0x50
 7652 18dc 02       		.uleb128 0x2
 7653 18dd 75       		.byte	0x75
 7654 18de 18       		.sleb128 24
 7655 18df 00       		.byte	0
 7656 18e0 24       		.uleb128 0x24
 7657 18e1 CC000000 		.4byte	.LVL170
 7658 18e5 232B0000 		.4byte	0x2b23
 7659 18e9 25       		.uleb128 0x25
 7660 18ea 01       		.uleb128 0x1
 7661 18eb 51       		.byte	0x51
 7662 18ec 02       		.uleb128 0x2
 7663 18ed 78       		.byte	0x78
 7664 18ee 00       		.sleb128 0
 7665 18ef 00       		.byte	0
 7666 18f0 00       		.byte	0
 7667 18f1 00       		.byte	0
 7668 18f2 06       		.uleb128 0x6
 7669 18f3 04       		.byte	0x4
 7670 18f4 2E0A0000 		.4byte	0xa2e
 7671 18f8 2D       		.uleb128 0x2d
 7672 18f9 361A0000 		.4byte	.LASF328
 7673 18fd 01       		.byte	0x1
 7674 18fe 3908     		.2byte	0x839
 7675 1900 2B090000 		.4byte	0x92b
 7676 1904 00000000 		.4byte	.LFB611
 7677 1908 F0000000 		.4byte	.LFE611-.LFB611
 7678 190c 01       		.uleb128 0x1
 7679 190d 9C       		.byte	0x9c
 7680 190e D5190000 		.4byte	0x19d5
 7681 1912 1E       		.uleb128 0x1e
 7682 1913 93230000 		.4byte	.LASF279
 7683 1917 01       		.byte	0x1
 7684 1918 3B08     		.2byte	0x83b
 7685 191a A50C0000 		.4byte	0xca5
 7686 191e 6B070000 		.4byte	.LLST54
 7687 1922 1E       		.uleb128 0x1e
 7688 1923 67210000 		.4byte	.LASF329
 7689 1927 01       		.byte	0x1
 7690 1928 3C08     		.2byte	0x83c
 7691 192a 2B090000 		.4byte	0x92b
 7692 192e AD070000 		.4byte	.LLST55
 7693 1932 2F       		.uleb128 0x2f
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 238


 7694 1933 A70B0000 		.4byte	0xba7
 7695 1937 08000000 		.4byte	.LBB128
 7696 193b 12000000 		.4byte	.LBE128-.LBB128
 7697 193f 01       		.byte	0x1
 7698 1940 4008     		.2byte	0x840
 7699 1942 56190000 		.4byte	0x1956
 7700 1946 20       		.uleb128 0x20
 7701 1947 08000000 		.4byte	.LBB129
 7702 194b 12000000 		.4byte	.LBE129-.LBB129
 7703 194f 21       		.uleb128 0x21
 7704 1950 B30B0000 		.4byte	0xbb3
 7705 1954 00       		.byte	0
 7706 1955 00       		.byte	0
 7707 1956 2B       		.uleb128 0x2b
 7708 1957 9C000000 		.4byte	.LBB130
 7709 195b 22000000 		.4byte	.LBE130-.LBB130
 7710 195f 7D190000 		.4byte	0x197d
 7711 1963 1E       		.uleb128 0x1e
 7712 1964 FB010000 		.4byte	.LASF330
 7713 1968 01       		.byte	0x1
 7714 1969 7408     		.2byte	0x874
 7715 196b 36090000 		.4byte	0x936
 7716 196f EF070000 		.4byte	.LLST56
 7717 1973 23       		.uleb128 0x23
 7718 1974 A8000000 		.4byte	.LVL187
 7719 1978 0E180000 		.4byte	0x180e
 7720 197c 00       		.byte	0
 7721 197d 23       		.uleb128 0x23
 7722 197e 20000000 		.4byte	.LVL177
 7723 1982 182B0000 		.4byte	0x2b18
 7724 1986 29       		.uleb128 0x29
 7725 1987 4E000000 		.4byte	.LVL180
 7726 198b 3A2B0000 		.4byte	0x2b3a
 7727 198f 9A190000 		.4byte	0x199a
 7728 1993 25       		.uleb128 0x25
 7729 1994 01       		.uleb128 0x1
 7730 1995 50       		.byte	0x50
 7731 1996 02       		.uleb128 0x2
 7732 1997 74       		.byte	0x74
 7733 1998 18       		.sleb128 24
 7734 1999 00       		.byte	0
 7735 199a 29       		.uleb128 0x29
 7736 199b 56000000 		.4byte	.LVL181
 7737 199f 3A2B0000 		.4byte	0x2b3a
 7738 19a3 AE190000 		.4byte	0x19ae
 7739 19a7 25       		.uleb128 0x25
 7740 19a8 01       		.uleb128 0x1
 7741 19a9 50       		.byte	0x50
 7742 19aa 02       		.uleb128 0x2
 7743 19ab 76       		.byte	0x76
 7744 19ac 00       		.sleb128 0
 7745 19ad 00       		.byte	0
 7746 19ae 29       		.uleb128 0x29
 7747 19af 78000000 		.4byte	.LVL182
 7748 19b3 232B0000 		.4byte	0x2b23
 7749 19b7 C2190000 		.4byte	0x19c2
 7750 19bb 25       		.uleb128 0x25
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 239


 7751 19bc 01       		.uleb128 0x1
 7752 19bd 51       		.byte	0x51
 7753 19be 02       		.uleb128 0x2
 7754 19bf 76       		.byte	0x76
 7755 19c0 00       		.sleb128 0
 7756 19c1 00       		.byte	0
 7757 19c2 23       		.uleb128 0x23
 7758 19c3 9C000000 		.4byte	.LVL185
 7759 19c7 7E0C0000 		.4byte	0xc7e
 7760 19cb 23       		.uleb128 0x23
 7761 19cc E4000000 		.4byte	.LVL195
 7762 19d0 2F2B0000 		.4byte	0x2b2f
 7763 19d4 00       		.byte	0
 7764 19d5 2E       		.uleb128 0x2e
 7765 19d6 77200000 		.4byte	.LASF331
 7766 19da 01       		.byte	0x1
 7767 19db B404     		.2byte	0x4b4
 7768 19dd 00000000 		.4byte	.LFB599
 7769 19e1 AC000000 		.4byte	.LFE599-.LFB599
 7770 19e5 01       		.uleb128 0x1
 7771 19e6 9C       		.byte	0x9c
 7772 19e7 E11A0000 		.4byte	0x1ae1
 7773 19eb 1D       		.uleb128 0x1d
 7774 19ec 6A1D0000 		.4byte	.LASF332
 7775 19f0 01       		.byte	0x1
 7776 19f1 B404     		.2byte	0x4b4
 7777 19f3 E71A0000 		.4byte	0x1ae7
 7778 19f7 25080000 		.4byte	.LLST57
 7779 19fb 1D       		.uleb128 0x1d
 7780 19fc 01230000 		.4byte	.LASF333
 7781 1a00 01       		.byte	0x1
 7782 1a01 B404     		.2byte	0x4b4
 7783 1a03 14100000 		.4byte	0x1014
 7784 1a07 51080000 		.4byte	.LLST58
 7785 1a0b 1E       		.uleb128 0x1e
 7786 1a0c 2F230000 		.4byte	.LASF297
 7787 1a10 01       		.byte	0x1
 7788 1a11 B604     		.2byte	0x4b6
 7789 1a13 41090000 		.4byte	0x941
 7790 1a17 7D080000 		.4byte	.LLST59
 7791 1a1b 27       		.uleb128 0x27
 7792 1a1c 67210000 		.4byte	.LASF329
 7793 1a20 01       		.byte	0x1
 7794 1a21 B704     		.2byte	0x4b7
 7795 1a23 2B090000 		.4byte	0x92b
 7796 1a27 01       		.uleb128 0x1
 7797 1a28 50       		.byte	0x50
 7798 1a29 1E       		.uleb128 0x1e
 7799 1a2a 67110000 		.4byte	.LASF334
 7800 1a2e 01       		.byte	0x1
 7801 1a2f B704     		.2byte	0x4b7
 7802 1a31 2B090000 		.4byte	0x92b
 7803 1a35 90080000 		.4byte	.LLST60
 7804 1a39 2F       		.uleb128 0x2f
 7805 1a3a A70B0000 		.4byte	0xba7
 7806 1a3e 04000000 		.4byte	.LBB131
 7807 1a42 14000000 		.4byte	.LBE131-.LBB131
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 240


 7808 1a46 01       		.byte	0x1
 7809 1a47 B904     		.2byte	0x4b9
 7810 1a49 5D1A0000 		.4byte	0x1a5d
 7811 1a4d 20       		.uleb128 0x20
 7812 1a4e 04000000 		.4byte	.LBB132
 7813 1a52 14000000 		.4byte	.LBE132-.LBB132
 7814 1a56 21       		.uleb128 0x21
 7815 1a57 B30B0000 		.4byte	0xbb3
 7816 1a5b 00       		.byte	0
 7817 1a5c 00       		.byte	0
 7818 1a5d 2F       		.uleb128 0x2f
 7819 1a5e A70B0000 		.4byte	0xba7
 7820 1a62 1A000000 		.4byte	.LBB133
 7821 1a66 12000000 		.4byte	.LBE133-.LBB133
 7822 1a6a 01       		.byte	0x1
 7823 1a6b BA04     		.2byte	0x4ba
 7824 1a6d 811A0000 		.4byte	0x1a81
 7825 1a71 20       		.uleb128 0x20
 7826 1a72 1A000000 		.4byte	.LBB134
 7827 1a76 12000000 		.4byte	.LBE134-.LBB134
 7828 1a7a 21       		.uleb128 0x21
 7829 1a7b B30B0000 		.4byte	0xbb3
 7830 1a7f 00       		.byte	0
 7831 1a80 00       		.byte	0
 7832 1a81 2F       		.uleb128 0x2f
 7833 1a82 A70B0000 		.4byte	0xba7
 7834 1a86 34000000 		.4byte	.LBB135
 7835 1a8a 14000000 		.4byte	.LBE135-.LBB135
 7836 1a8e 01       		.byte	0x1
 7837 1a8f BB04     		.2byte	0x4bb
 7838 1a91 A51A0000 		.4byte	0x1aa5
 7839 1a95 20       		.uleb128 0x20
 7840 1a96 34000000 		.4byte	.LBB136
 7841 1a9a 14000000 		.4byte	.LBE136-.LBB136
 7842 1a9e 21       		.uleb128 0x21
 7843 1a9f B30B0000 		.4byte	0xbb3
 7844 1aa3 00       		.byte	0
 7845 1aa4 00       		.byte	0
 7846 1aa5 36       		.uleb128 0x36
 7847 1aa6 18000000 		.4byte	.Ldebug_ranges0+0x18
 7848 1aaa CE1A0000 		.4byte	0x1ace
 7849 1aae 1E       		.uleb128 0x1e
 7850 1aaf E6070000 		.4byte	.LASF298
 7851 1ab3 01       		.byte	0x1
 7852 1ab4 C104     		.2byte	0x4c1
 7853 1ab6 14100000 		.4byte	0x1014
 7854 1aba AF080000 		.4byte	.LLST61
 7855 1abe 24       		.uleb128 0x24
 7856 1abf 8C000000 		.4byte	.LVL207
 7857 1ac3 860F0000 		.4byte	0xf86
 7858 1ac7 25       		.uleb128 0x25
 7859 1ac8 01       		.uleb128 0x1
 7860 1ac9 51       		.byte	0x51
 7861 1aca 01       		.uleb128 0x1
 7862 1acb 30       		.byte	0x30
 7863 1acc 00       		.byte	0
 7864 1acd 00       		.byte	0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 241


 7865 1ace 23       		.uleb128 0x23
 7866 1acf 4C000000 		.4byte	.LVL202
 7867 1ad3 23170000 		.4byte	0x1723
 7868 1ad7 23       		.uleb128 0x23
 7869 1ad8 90000000 		.4byte	.LVL208
 7870 1adc F8180000 		.4byte	0x18f8
 7871 1ae0 00       		.byte	0
 7872 1ae1 06       		.uleb128 0x6
 7873 1ae2 04       		.byte	0x4
 7874 1ae3 41090000 		.4byte	0x941
 7875 1ae7 07       		.uleb128 0x7
 7876 1ae8 E11A0000 		.4byte	0x1ae1
 7877 1aec 2E       		.uleb128 0x2e
 7878 1aed 840F0000 		.4byte	.LASF335
 7879 1af1 01       		.byte	0x1
 7880 1af2 0805     		.2byte	0x508
 7881 1af4 00000000 		.4byte	.LFB600
 7882 1af8 50000000 		.4byte	.LFE600-.LFB600
 7883 1afc 01       		.uleb128 0x1
 7884 1afd 9C       		.byte	0x9c
 7885 1afe 721B0000 		.4byte	0x1b72
 7886 1b02 1D       		.uleb128 0x1d
 7887 1b03 A11F0000 		.4byte	.LASF336
 7888 1b07 01       		.byte	0x1
 7889 1b08 0805     		.2byte	0x508
 7890 1b0a 14100000 		.4byte	0x1014
 7891 1b0e C2080000 		.4byte	.LLST62
 7892 1b12 1E       		.uleb128 0x1e
 7893 1b13 67210000 		.4byte	.LASF329
 7894 1b17 01       		.byte	0x1
 7895 1b18 0A05     		.2byte	0x50a
 7896 1b1a 2B090000 		.4byte	0x92b
 7897 1b1e F9080000 		.4byte	.LLST63
 7898 1b22 2F       		.uleb128 0x2f
 7899 1b23 A70B0000 		.4byte	0xba7
 7900 1b27 0E000000 		.4byte	.LBB140
 7901 1b2b 12000000 		.4byte	.LBE140-.LBB140
 7902 1b2f 01       		.byte	0x1
 7903 1b30 0F05     		.2byte	0x50f
 7904 1b32 461B0000 		.4byte	0x1b46
 7905 1b36 20       		.uleb128 0x20
 7906 1b37 0E000000 		.4byte	.LBB141
 7907 1b3b 12000000 		.4byte	.LBE141-.LBB141
 7908 1b3f 21       		.uleb128 0x21
 7909 1b40 B30B0000 		.4byte	0xbb3
 7910 1b44 00       		.byte	0
 7911 1b45 00       		.byte	0
 7912 1b46 23       		.uleb128 0x23
 7913 1b47 24000000 		.4byte	.LVL213
 7914 1b4b 23170000 		.4byte	0x1723
 7915 1b4f 29       		.uleb128 0x29
 7916 1b50 2C000000 		.4byte	.LVL214
 7917 1b54 860F0000 		.4byte	0xf86
 7918 1b58 681B0000 		.4byte	0x1b68
 7919 1b5c 25       		.uleb128 0x25
 7920 1b5d 01       		.uleb128 0x1
 7921 1b5e 50       		.byte	0x50
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 242


 7922 1b5f 02       		.uleb128 0x2
 7923 1b60 74       		.byte	0x74
 7924 1b61 00       		.sleb128 0
 7925 1b62 25       		.uleb128 0x25
 7926 1b63 01       		.uleb128 0x1
 7927 1b64 51       		.byte	0x51
 7928 1b65 01       		.uleb128 0x1
 7929 1b66 30       		.byte	0x30
 7930 1b67 00       		.byte	0
 7931 1b68 23       		.uleb128 0x23
 7932 1b69 30000000 		.4byte	.LVL215
 7933 1b6d F8180000 		.4byte	0x18f8
 7934 1b71 00       		.byte	0
 7935 1b72 2E       		.uleb128 0x2e
 7936 1b73 3B190000 		.4byte	.LASF337
 7937 1b77 01       		.byte	0x1
 7938 1b78 230B     		.2byte	0xb23
 7939 1b7a 00000000 		.4byte	.LFB617
 7940 1b7e C8000000 		.4byte	.LFE617-.LFB617
 7941 1b82 01       		.uleb128 0x1
 7942 1b83 9C       		.byte	0x9c
 7943 1b84 211C0000 		.4byte	0x1c21
 7944 1b88 2B       		.uleb128 0x2b
 7945 1b89 1C000000 		.4byte	.LBB142
 7946 1b8d 36000000 		.4byte	.LBE142-.LBB142
 7947 1b91 C01B0000 		.4byte	0x1bc0
 7948 1b95 1E       		.uleb128 0x1e
 7949 1b96 7F1F0000 		.4byte	.LASF338
 7950 1b9a 01       		.byte	0x1
 7951 1b9b 4D0B     		.2byte	0xb4d
 7952 1b9d 271C0000 		.4byte	0x1c27
 7953 1ba1 2F090000 		.4byte	.LLST64
 7954 1ba5 37       		.uleb128 0x37
 7955 1ba6 2F150000 		.4byte	.LASF339
 7956 1baa 01       		.byte	0x1
 7957 1bab 4E0B     		.2byte	0xb4e
 7958 1bad FB0D0000 		.4byte	0xdfb
 7959 1bb1 A5CB96AD 		.sleb128 -1515870811
 7959      7A
 7960 1bb6 23       		.uleb128 0x23
 7961 1bb7 52000000 		.4byte	.LVL220
 7962 1bbb 962B0000 		.4byte	0x2b96
 7963 1bbf 00       		.byte	0
 7964 1bc0 20       		.uleb128 0x20
 7965 1bc1 52000000 		.4byte	.LBB143
 7966 1bc5 76000000 		.4byte	.LBE143-.LBB143
 7967 1bc9 1E       		.uleb128 0x1e
 7968 1bca 37200000 		.4byte	.LASF340
 7969 1bce 01       		.byte	0x1
 7970 1bcf 5B0B     		.2byte	0xb5b
 7971 1bd1 36090000 		.4byte	0x936
 7972 1bd5 42090000 		.4byte	.LLST65
 7973 1bd9 2F       		.uleb128 0x2f
 7974 1bda A70B0000 		.4byte	0xba7
 7975 1bde 5C000000 		.4byte	.LBB144
 7976 1be2 12000000 		.4byte	.LBE144-.LBB144
 7977 1be6 01       		.byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 243


 7978 1be7 5B0B     		.2byte	0xb5b
 7979 1be9 FD1B0000 		.4byte	0x1bfd
 7980 1bed 20       		.uleb128 0x20
 7981 1bee 5C000000 		.4byte	.LBB145
 7982 1bf2 12000000 		.4byte	.LBE145-.LBB145
 7983 1bf6 21       		.uleb128 0x21
 7984 1bf7 B30B0000 		.4byte	0xbb3
 7985 1bfb 00       		.byte	0
 7986 1bfc 00       		.byte	0
 7987 1bfd 20       		.uleb128 0x20
 7988 1bfe 80000000 		.4byte	.LBB146
 7989 1c02 3E000000 		.4byte	.LBE146-.LBB146
 7990 1c06 27       		.uleb128 0x27
 7991 1c07 B3010000 		.4byte	.LASF341
 7992 1c0b 01       		.byte	0x1
 7993 1c0c 5B0B     		.2byte	0xb5b
 7994 1c0e 2C1C0000 		.4byte	0x1c2c
 7995 1c12 0B       		.uleb128 0xb
 7996 1c13 73       		.byte	0x73
 7997 1c14 00       		.sleb128 0
 7998 1c15 44       		.byte	0x44
 7999 1c16 1E       		.byte	0x1e
 8000 1c17 03       		.byte	0x3
 8001 1c18 30000000 		.4byte	pxReadyTasksLists
 8002 1c1c 22       		.byte	0x22
 8003 1c1d 9F       		.byte	0x9f
 8004 1c1e 00       		.byte	0
 8005 1c1f 00       		.byte	0
 8006 1c20 00       		.byte	0
 8007 1c21 06       		.uleb128 0x6
 8008 1c22 04       		.byte	0x4
 8009 1c23 FB0D0000 		.4byte	0xdfb
 8010 1c27 07       		.uleb128 0x7
 8011 1c28 211C0000 		.4byte	0x1c21
 8012 1c2c 07       		.uleb128 0x7
 8013 1c2d F2180000 		.4byte	0x18f2
 8014 1c31 2E       		.uleb128 0x2e
 8015 1c32 1B210000 		.4byte	.LASF342
 8016 1c36 01       		.byte	0x1
 8017 1c37 5E06     		.2byte	0x65e
 8018 1c39 00000000 		.4byte	.LFB604
 8019 1c3d B8000000 		.4byte	.LFE604-.LFB604
 8020 1c41 01       		.uleb128 0x1
 8021 1c42 9C       		.byte	0x9c
 8022 1c43 071D0000 		.4byte	0x1d07
 8023 1c47 1D       		.uleb128 0x1d
 8024 1c48 8C1C0000 		.4byte	.LASF343
 8025 1c4c 01       		.byte	0x1
 8026 1c4d 5E06     		.2byte	0x65e
 8027 1c4f 390A0000 		.4byte	0xa39
 8028 1c53 60090000 		.4byte	.LLST66
 8029 1c57 1E       		.uleb128 0x1e
 8030 1c58 93230000 		.4byte	.LASF279
 8031 1c5c 01       		.byte	0x1
 8032 1c5d 6006     		.2byte	0x660
 8033 1c5f A50C0000 		.4byte	0xca5
 8034 1c63 7E090000 		.4byte	.LLST67
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 244


 8035 1c67 2F       		.uleb128 0x2f
 8036 1c68 A70B0000 		.4byte	0xba7
 8037 1c6c 6E000000 		.4byte	.LBB147
 8038 1c70 12000000 		.4byte	.LBE147-.LBB147
 8039 1c74 01       		.byte	0x1
 8040 1c75 A206     		.2byte	0x6a2
 8041 1c77 8B1C0000 		.4byte	0x1c8b
 8042 1c7b 20       		.uleb128 0x20
 8043 1c7c 6E000000 		.4byte	.LBB148
 8044 1c80 12000000 		.4byte	.LBE148-.LBB148
 8045 1c84 21       		.uleb128 0x21
 8046 1c85 B30B0000 		.4byte	0xbb3
 8047 1c89 00       		.byte	0
 8048 1c8a 00       		.byte	0
 8049 1c8b 23       		.uleb128 0x23
 8050 1c8c 08000000 		.4byte	.LVL227
 8051 1c90 182B0000 		.4byte	0x2b18
 8052 1c94 29       		.uleb128 0x29
 8053 1c95 18000000 		.4byte	.LVL229
 8054 1c99 3A2B0000 		.4byte	0x2b3a
 8055 1c9d A81C0000 		.4byte	0x1ca8
 8056 1ca1 25       		.uleb128 0x25
 8057 1ca2 01       		.uleb128 0x1
 8058 1ca3 50       		.byte	0x50
 8059 1ca4 02       		.uleb128 0x2
 8060 1ca5 75       		.byte	0x75
 8061 1ca6 00       		.sleb128 0
 8062 1ca7 00       		.byte	0
 8063 1ca8 29       		.uleb128 0x29
 8064 1ca9 24000000 		.4byte	.LVL230
 8065 1cad 3A2B0000 		.4byte	0x2b3a
 8066 1cb1 BC1C0000 		.4byte	0x1cbc
 8067 1cb5 25       		.uleb128 0x25
 8068 1cb6 01       		.uleb128 0x1
 8069 1cb7 50       		.byte	0x50
 8070 1cb8 02       		.uleb128 0x2
 8071 1cb9 74       		.byte	0x74
 8072 1cba 18       		.sleb128 24
 8073 1cbb 00       		.byte	0
 8074 1cbc 29       		.uleb128 0x29
 8075 1cbd 2C000000 		.4byte	.LVL231
 8076 1cc1 232B0000 		.4byte	0x2b23
 8077 1cc5 D91C0000 		.4byte	0x1cd9
 8078 1cc9 25       		.uleb128 0x25
 8079 1cca 01       		.uleb128 0x1
 8080 1ccb 50       		.byte	0x50
 8081 1ccc 05       		.uleb128 0x5
 8082 1ccd 03       		.byte	0x3
 8083 1cce 00000000 		.4byte	.LANCHOR0
 8084 1cd2 25       		.uleb128 0x25
 8085 1cd3 01       		.uleb128 0x1
 8086 1cd4 51       		.byte	0x51
 8087 1cd5 02       		.uleb128 0x2
 8088 1cd6 75       		.byte	0x75
 8089 1cd7 00       		.sleb128 0
 8090 1cd8 00       		.byte	0
 8091 1cd9 23       		.uleb128 0x23
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 245


 8092 1cda 40000000 		.4byte	.LVL232
 8093 1cde 2F2B0000 		.4byte	0x2b2f
 8094 1ce2 23       		.uleb128 0x23
 8095 1ce3 4C000000 		.4byte	.LVL233
 8096 1ce7 182B0000 		.4byte	0x2b18
 8097 1ceb 23       		.uleb128 0x23
 8098 1cec 50000000 		.4byte	.LVL234
 8099 1cf0 7E0C0000 		.4byte	0xc7e
 8100 1cf4 23       		.uleb128 0x23
 8101 1cf5 54000000 		.4byte	.LVL235
 8102 1cf9 2F2B0000 		.4byte	0x2b2f
 8103 1cfd 23       		.uleb128 0x23
 8104 1cfe AC000000 		.4byte	.LVL239
 8105 1d02 721B0000 		.4byte	0x1b72
 8106 1d06 00       		.byte	0
 8107 1d07 2E       		.uleb128 0x2e
 8108 1d08 6E0F0000 		.4byte	.LASF344
 8109 1d0c 01       		.byte	0x1
 8110 1d0d 690B     		.2byte	0xb69
 8111 1d0f 00000000 		.4byte	.LFB618
 8112 1d13 34000000 		.4byte	.LFE618-.LFB618
 8113 1d17 01       		.uleb128 0x1
 8114 1d18 9C       		.byte	0x9c
 8115 1d19 801D0000 		.4byte	0x1d80
 8116 1d1d 1D       		.uleb128 0x1d
 8117 1d1e 0B030000 		.4byte	.LASF345
 8118 1d22 01       		.byte	0x1
 8119 1d23 690B     		.2byte	0xb69
 8120 1d25 2C1C0000 		.4byte	0x1c2c
 8121 1d29 91090000 		.4byte	.LLST68
 8122 1d2d 1D       		.uleb128 0x1d
 8123 1d2e FB200000 		.4byte	.LASF295
 8124 1d32 01       		.byte	0x1
 8125 1d33 690B     		.2byte	0xb69
 8126 1d35 14100000 		.4byte	0x1014
 8127 1d39 B2090000 		.4byte	.LLST69
 8128 1d3d 2F       		.uleb128 0x2f
 8129 1d3e A70B0000 		.4byte	0xba7
 8130 1d42 02000000 		.4byte	.LBB149
 8131 1d46 12000000 		.4byte	.LBE149-.LBB149
 8132 1d4a 01       		.byte	0x1
 8133 1d4b 6B0B     		.2byte	0xb6b
 8134 1d4d 611D0000 		.4byte	0x1d61
 8135 1d51 20       		.uleb128 0x20
 8136 1d52 02000000 		.4byte	.LBB150
 8137 1d56 12000000 		.4byte	.LBE150-.LBB150
 8138 1d5a 21       		.uleb128 0x21
 8139 1d5b B30B0000 		.4byte	0xbb3
 8140 1d5f 00       		.byte	0
 8141 1d60 00       		.byte	0
 8142 1d61 23       		.uleb128 0x23
 8143 1d62 24000000 		.4byte	.LVL244
 8144 1d66 462B0000 		.4byte	0x2b46
 8145 1d6a 24       		.uleb128 0x24
 8146 1d6b 2C000000 		.4byte	.LVL245
 8147 1d6f 860F0000 		.4byte	0xf86
 8148 1d73 25       		.uleb128 0x25
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 246


 8149 1d74 01       		.uleb128 0x1
 8150 1d75 50       		.byte	0x50
 8151 1d76 02       		.uleb128 0x2
 8152 1d77 74       		.byte	0x74
 8153 1d78 00       		.sleb128 0
 8154 1d79 25       		.uleb128 0x25
 8155 1d7a 01       		.uleb128 0x1
 8156 1d7b 51       		.byte	0x51
 8157 1d7c 01       		.uleb128 0x1
 8158 1d7d 31       		.byte	0x31
 8159 1d7e 00       		.byte	0
 8160 1d7f 00       		.byte	0
 8161 1d80 2E       		.uleb128 0x2e
 8162 1d81 BA1F0000 		.4byte	.LASF346
 8163 1d85 01       		.byte	0x1
 8164 1d86 7A0B     		.2byte	0xb7a
 8165 1d88 00000000 		.4byte	.LFB619
 8166 1d8c 5C000000 		.4byte	.LFE619-.LFB619
 8167 1d90 01       		.uleb128 0x1
 8168 1d91 9C       		.byte	0x9c
 8169 1d92 391E0000 		.4byte	0x1e39
 8170 1d96 1D       		.uleb128 0x1d
 8171 1d97 0B030000 		.4byte	.LASF345
 8172 1d9b 01       		.byte	0x1
 8173 1d9c 7A0B     		.2byte	0xb7a
 8174 1d9e F2180000 		.4byte	0x18f2
 8175 1da2 DE090000 		.4byte	.LLST70
 8176 1da6 1D       		.uleb128 0x1d
 8177 1da7 5A1B0000 		.4byte	.LASF233
 8178 1dab 01       		.byte	0x1
 8179 1dac 7A0B     		.2byte	0xb7a
 8180 1dae 14100000 		.4byte	0x1014
 8181 1db2 2E0A0000 		.4byte	.LLST71
 8182 1db6 1D       		.uleb128 0x1d
 8183 1db7 FB200000 		.4byte	.LASF295
 8184 1dbb 01       		.byte	0x1
 8185 1dbc 7A0B     		.2byte	0xb7a
 8186 1dbe 14100000 		.4byte	0x1014
 8187 1dc2 5A0A0000 		.4byte	.LLST72
 8188 1dc6 2F       		.uleb128 0x2f
 8189 1dc7 A70B0000 		.4byte	0xba7
 8190 1dcb 02000000 		.4byte	.LBB151
 8191 1dcf 14000000 		.4byte	.LBE151-.LBB151
 8192 1dd3 01       		.byte	0x1
 8193 1dd4 7C0B     		.2byte	0xb7c
 8194 1dd6 EA1D0000 		.4byte	0x1dea
 8195 1dda 20       		.uleb128 0x20
 8196 1ddb 02000000 		.4byte	.LBB152
 8197 1ddf 14000000 		.4byte	.LBE152-.LBB152
 8198 1de3 21       		.uleb128 0x21
 8199 1de4 B30B0000 		.4byte	0xbb3
 8200 1de8 00       		.byte	0
 8201 1de9 00       		.byte	0
 8202 1dea 2F       		.uleb128 0x2f
 8203 1deb A70B0000 		.4byte	0xba7
 8204 1def 1E000000 		.4byte	.LBB153
 8205 1df3 12000000 		.4byte	.LBE153-.LBB153
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 247


 8206 1df7 01       		.byte	0x1
 8207 1df8 800B     		.2byte	0xb80
 8208 1dfa 0E1E0000 		.4byte	0x1e0e
 8209 1dfe 20       		.uleb128 0x20
 8210 1dff 1E000000 		.4byte	.LBB154
 8211 1e03 12000000 		.4byte	.LBE154-.LBB154
 8212 1e07 21       		.uleb128 0x21
 8213 1e08 B30B0000 		.4byte	0xbb3
 8214 1e0c 00       		.byte	0
 8215 1e0d 00       		.byte	0
 8216 1e0e 29       		.uleb128 0x29
 8217 1e0f 4E000000 		.4byte	.LVL256
 8218 1e13 232B0000 		.4byte	0x2b23
 8219 1e17 231E0000 		.4byte	0x1e23
 8220 1e1b 25       		.uleb128 0x25
 8221 1e1c 01       		.uleb128 0x1
 8222 1e1d 50       		.byte	0x50
 8223 1e1e 03       		.uleb128 0x3
 8224 1e1f F3       		.byte	0xf3
 8225 1e20 01       		.uleb128 0x1
 8226 1e21 50       		.byte	0x50
 8227 1e22 00       		.byte	0
 8228 1e23 24       		.uleb128 0x24
 8229 1e24 56000000 		.4byte	.LVL257
 8230 1e28 860F0000 		.4byte	0xf86
 8231 1e2c 25       		.uleb128 0x25
 8232 1e2d 01       		.uleb128 0x1
 8233 1e2e 50       		.byte	0x50
 8234 1e2f 02       		.uleb128 0x2
 8235 1e30 74       		.byte	0x74
 8236 1e31 00       		.sleb128 0
 8237 1e32 25       		.uleb128 0x25
 8238 1e33 01       		.uleb128 0x1
 8239 1e34 51       		.byte	0x51
 8240 1e35 01       		.uleb128 0x1
 8241 1e36 31       		.byte	0x31
 8242 1e37 00       		.byte	0
 8243 1e38 00       		.byte	0
 8244 1e39 2E       		.uleb128 0x2e
 8245 1e3a 3F120000 		.4byte	.LASF347
 8246 1e3e 01       		.byte	0x1
 8247 1e3f 940B     		.2byte	0xb94
 8248 1e41 00000000 		.4byte	.LFB620
 8249 1e45 3C000000 		.4byte	.LFE620-.LFB620
 8250 1e49 01       		.uleb128 0x1
 8251 1e4a 9C       		.byte	0x9c
 8252 1e4b C31E0000 		.4byte	0x1ec3
 8253 1e4f 1D       		.uleb128 0x1d
 8254 1e50 0B030000 		.4byte	.LASF345
 8255 1e54 01       		.byte	0x1
 8256 1e55 940B     		.2byte	0xb94
 8257 1e57 2C1C0000 		.4byte	0x1c2c
 8258 1e5b 860A0000 		.4byte	.LLST73
 8259 1e5f 1D       		.uleb128 0x1d
 8260 1e60 FB200000 		.4byte	.LASF295
 8261 1e64 01       		.byte	0x1
 8262 1e65 940B     		.2byte	0xb94
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 248


 8263 1e67 41090000 		.4byte	0x941
 8264 1e6b A70A0000 		.4byte	.LLST74
 8265 1e6f 1D       		.uleb128 0x1d
 8266 1e70 6F0D0000 		.4byte	.LASF348
 8267 1e74 01       		.byte	0x1
 8268 1e75 940B     		.2byte	0xb94
 8269 1e77 0F100000 		.4byte	0x100f
 8270 1e7b C50A0000 		.4byte	.LLST75
 8271 1e7f 2F       		.uleb128 0x2f
 8272 1e80 A70B0000 		.4byte	0xba7
 8273 1e84 04000000 		.4byte	.LBB155
 8274 1e88 16000000 		.4byte	.LBE155-.LBB155
 8275 1e8c 01       		.byte	0x1
 8276 1e8d 960B     		.2byte	0xb96
 8277 1e8f A31E0000 		.4byte	0x1ea3
 8278 1e93 20       		.uleb128 0x20
 8279 1e94 04000000 		.4byte	.LBB156
 8280 1e98 16000000 		.4byte	.LBE156-.LBB156
 8281 1e9c 21       		.uleb128 0x21
 8282 1e9d B30B0000 		.4byte	0xbb3
 8283 1ea1 00       		.byte	0
 8284 1ea2 00       		.byte	0
 8285 1ea3 23       		.uleb128 0x23
 8286 1ea4 26000000 		.4byte	.LVL263
 8287 1ea8 232B0000 		.4byte	0x2b23
 8288 1eac 24       		.uleb128 0x24
 8289 1ead 34000000 		.4byte	.LVL265
 8290 1eb1 860F0000 		.4byte	0xf86
 8291 1eb5 25       		.uleb128 0x25
 8292 1eb6 01       		.uleb128 0x1
 8293 1eb7 50       		.byte	0x50
 8294 1eb8 02       		.uleb128 0x2
 8295 1eb9 74       		.byte	0x74
 8296 1eba 00       		.sleb128 0
 8297 1ebb 25       		.uleb128 0x25
 8298 1ebc 01       		.uleb128 0x1
 8299 1ebd 51       		.byte	0x51
 8300 1ebe 02       		.uleb128 0x2
 8301 1ebf 75       		.byte	0x75
 8302 1ec0 00       		.sleb128 0
 8303 1ec1 00       		.byte	0
 8304 1ec2 00       		.byte	0
 8305 1ec3 2D       		.uleb128 0x2d
 8306 1ec4 C0100000 		.4byte	.LASF349
 8307 1ec8 01       		.byte	0x1
 8308 1ec9 B30B     		.2byte	0xbb3
 8309 1ecb 2B090000 		.4byte	0x92b
 8310 1ecf 00000000 		.4byte	.LFB621
 8311 1ed3 88000000 		.4byte	.LFE621-.LFB621
 8312 1ed7 01       		.uleb128 0x1
 8313 1ed8 9C       		.byte	0x9c
 8314 1ed9 871F0000 		.4byte	0x1f87
 8315 1edd 1D       		.uleb128 0x1d
 8316 1ede 0B030000 		.4byte	.LASF345
 8317 1ee2 01       		.byte	0x1
 8318 1ee3 B30B     		.2byte	0xbb3
 8319 1ee5 921F0000 		.4byte	0x1f92
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 249


 8320 1ee9 F10A0000 		.4byte	.LLST76
 8321 1eed 1E       		.uleb128 0x1e
 8322 1eee 6F090000 		.4byte	.LASF350
 8323 1ef2 01       		.byte	0x1
 8324 1ef3 B50B     		.2byte	0xbb5
 8325 1ef5 A50C0000 		.4byte	0xca5
 8326 1ef9 120B0000 		.4byte	.LLST77
 8327 1efd 1E       		.uleb128 0x1e
 8328 1efe 901E0000 		.4byte	.LASF278
 8329 1f02 01       		.byte	0x1
 8330 1f03 B60B     		.2byte	0xbb6
 8331 1f05 2B090000 		.4byte	0x92b
 8332 1f09 250B0000 		.4byte	.LLST78
 8333 1f0d 2F       		.uleb128 0x2f
 8334 1f0e A70B0000 		.4byte	0xba7
 8335 1f12 08000000 		.4byte	.LBB157
 8336 1f16 12000000 		.4byte	.LBE157-.LBB157
 8337 1f1a 01       		.byte	0x1
 8338 1f1b C60B     		.2byte	0xbc6
 8339 1f1d 311F0000 		.4byte	0x1f31
 8340 1f21 20       		.uleb128 0x20
 8341 1f22 08000000 		.4byte	.LBB158
 8342 1f26 12000000 		.4byte	.LBE158-.LBB158
 8343 1f2a 21       		.uleb128 0x21
 8344 1f2b B30B0000 		.4byte	0xbb3
 8345 1f2f 00       		.byte	0
 8346 1f30 00       		.byte	0
 8347 1f31 29       		.uleb128 0x29
 8348 1f32 24000000 		.4byte	.LVL271
 8349 1f36 3A2B0000 		.4byte	0x2b3a
 8350 1f3a 451F0000 		.4byte	0x1f45
 8351 1f3e 25       		.uleb128 0x25
 8352 1f3f 01       		.uleb128 0x1
 8353 1f40 50       		.byte	0x50
 8354 1f41 02       		.uleb128 0x2
 8355 1f42 75       		.byte	0x75
 8356 1f43 00       		.sleb128 0
 8357 1f44 00       		.byte	0
 8358 1f45 29       		.uleb128 0x29
 8359 1f46 34000000 		.4byte	.LVL272
 8360 1f4a 3A2B0000 		.4byte	0x2b3a
 8361 1f4e 591F0000 		.4byte	0x1f59
 8362 1f52 25       		.uleb128 0x25
 8363 1f53 01       		.uleb128 0x1
 8364 1f54 50       		.byte	0x50
 8365 1f55 02       		.uleb128 0x2
 8366 1f56 75       		.byte	0x75
 8367 1f57 00       		.sleb128 0
 8368 1f58 00       		.byte	0
 8369 1f59 29       		.uleb128 0x29
 8370 1f5a 56000000 		.4byte	.LVL273
 8371 1f5e 232B0000 		.4byte	0x2b23
 8372 1f62 6D1F0000 		.4byte	0x1f6d
 8373 1f66 25       		.uleb128 0x25
 8374 1f67 01       		.uleb128 0x1
 8375 1f68 51       		.byte	0x51
 8376 1f69 02       		.uleb128 0x2
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 250


 8377 1f6a 75       		.byte	0x75
 8378 1f6b 00       		.sleb128 0
 8379 1f6c 00       		.byte	0
 8380 1f6d 24       		.uleb128 0x24
 8381 1f6e 60000000 		.4byte	.LVL274
 8382 1f72 232B0000 		.4byte	0x2b23
 8383 1f76 25       		.uleb128 0x25
 8384 1f77 01       		.uleb128 0x1
 8385 1f78 50       		.byte	0x50
 8386 1f79 05       		.uleb128 0x5
 8387 1f7a 03       		.byte	0x3
 8388 1f7b 14000000 		.4byte	.LANCHOR0+20
 8389 1f7f 25       		.uleb128 0x25
 8390 1f80 01       		.uleb128 0x1
 8391 1f81 51       		.byte	0x51
 8392 1f82 02       		.uleb128 0x2
 8393 1f83 75       		.byte	0x75
 8394 1f84 00       		.sleb128 0
 8395 1f85 00       		.byte	0
 8396 1f86 00       		.byte	0
 8397 1f87 06       		.uleb128 0x6
 8398 1f88 04       		.byte	0x4
 8399 1f89 8D1F0000 		.4byte	0x1f8d
 8400 1f8d 07       		.uleb128 0x7
 8401 1f8e 2E0A0000 		.4byte	0xa2e
 8402 1f92 07       		.uleb128 0x7
 8403 1f93 871F0000 		.4byte	0x1f87
 8404 1f97 2E       		.uleb128 0x2e
 8405 1f98 77040000 		.4byte	.LASF351
 8406 1f9c 01       		.byte	0x1
 8407 1f9d F70B     		.2byte	0xbf7
 8408 1f9f 00000000 		.4byte	.LFB622
 8409 1fa3 84000000 		.4byte	.LFE622-.LFB622
 8410 1fa7 01       		.uleb128 0x1
 8411 1fa8 9C       		.byte	0x9c
 8412 1fa9 53200000 		.4byte	0x2053
 8413 1fad 1D       		.uleb128 0x1d
 8414 1fae 9C240000 		.4byte	.LASF352
 8415 1fb2 01       		.byte	0x1
 8416 1fb3 F70B     		.2byte	0xbf7
 8417 1fb5 280A0000 		.4byte	0xa28
 8418 1fb9 440B0000 		.4byte	.LLST79
 8419 1fbd 1D       		.uleb128 0x1d
 8420 1fbe 5A1B0000 		.4byte	.LASF233
 8421 1fc2 01       		.byte	0x1
 8422 1fc3 F70B     		.2byte	0xbf7
 8423 1fc5 14100000 		.4byte	0x1014
 8424 1fc9 650B0000 		.4byte	.LLST80
 8425 1fcd 1E       		.uleb128 0x1e
 8426 1fce 6F090000 		.4byte	.LASF350
 8427 1fd2 01       		.byte	0x1
 8428 1fd3 F90B     		.2byte	0xbf9
 8429 1fd5 A50C0000 		.4byte	0xca5
 8430 1fd9 860B0000 		.4byte	.LLST81
 8431 1fdd 2F       		.uleb128 0x2f
 8432 1fde A70B0000 		.4byte	0xba7
 8433 1fe2 08000000 		.4byte	.LBB159
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 251


 8434 1fe6 12000000 		.4byte	.LBE159-.LBB159
 8435 1fea 01       		.byte	0x1
 8436 1feb FD0B     		.2byte	0xbfd
 8437 1fed 01200000 		.4byte	0x2001
 8438 1ff1 20       		.uleb128 0x20
 8439 1ff2 08000000 		.4byte	.LBB160
 8440 1ff6 12000000 		.4byte	.LBE160-.LBB160
 8441 1ffa 21       		.uleb128 0x21
 8442 1ffb B30B0000 		.4byte	0xbb3
 8443 1fff 00       		.byte	0
 8444 2000 00       		.byte	0
 8445 2001 2F       		.uleb128 0x2f
 8446 2002 A70B0000 		.4byte	0xba7
 8447 2006 26000000 		.4byte	.LBB161
 8448 200a 12000000 		.4byte	.LBE161-.LBB161
 8449 200e 01       		.byte	0x1
 8450 200f 050C     		.2byte	0xc05
 8451 2011 25200000 		.4byte	0x2025
 8452 2015 20       		.uleb128 0x20
 8453 2016 26000000 		.4byte	.LBB162
 8454 201a 12000000 		.4byte	.LBE162-.LBB162
 8455 201e 21       		.uleb128 0x21
 8456 201f B30B0000 		.4byte	0xbb3
 8457 2023 00       		.byte	0
 8458 2024 00       		.byte	0
 8459 2025 23       		.uleb128 0x23
 8460 2026 3C000000 		.4byte	.LVL283
 8461 202a 3A2B0000 		.4byte	0x2b3a
 8462 202e 29       		.uleb128 0x29
 8463 202f 44000000 		.4byte	.LVL284
 8464 2033 3A2B0000 		.4byte	0x2b3a
 8465 2037 42200000 		.4byte	0x2042
 8466 203b 25       		.uleb128 0x25
 8467 203c 01       		.uleb128 0x1
 8468 203d 50       		.byte	0x50
 8469 203e 02       		.uleb128 0x2
 8470 203f 76       		.byte	0x76
 8471 2040 00       		.sleb128 0
 8472 2041 00       		.byte	0
 8473 2042 24       		.uleb128 0x24
 8474 2043 6A000000 		.4byte	.LVL285
 8475 2047 232B0000 		.4byte	0x2b23
 8476 204b 25       		.uleb128 0x25
 8477 204c 01       		.uleb128 0x1
 8478 204d 51       		.byte	0x51
 8479 204e 02       		.uleb128 0x2
 8480 204f 76       		.byte	0x76
 8481 2050 00       		.sleb128 0
 8482 2051 00       		.byte	0
 8483 2052 00       		.byte	0
 8484 2053 2E       		.uleb128 0x2e
 8485 2054 0D050000 		.4byte	.LASF353
 8486 2058 01       		.byte	0x1
 8487 2059 190C     		.2byte	0xc19
 8488 205b 00000000 		.4byte	.LFB623
 8489 205f 34000000 		.4byte	.LFE623-.LFB623
 8490 2063 01       		.uleb128 0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 252


 8491 2064 9C       		.byte	0x9c
 8492 2065 B0200000 		.4byte	0x20b0
 8493 2069 1D       		.uleb128 0x1d
 8494 206a D3150000 		.4byte	.LASF354
 8495 206e 01       		.byte	0x1
 8496 206f 190C     		.2byte	0xc19
 8497 2071 B6200000 		.4byte	0x20b6
 8498 2075 990B0000 		.4byte	.LLST82
 8499 2079 2F       		.uleb128 0x2f
 8500 207a A70B0000 		.4byte	0xba7
 8501 207e 02000000 		.4byte	.LBB163
 8502 2082 12000000 		.4byte	.LBE163-.LBB163
 8503 2086 01       		.byte	0x1
 8504 2087 1B0C     		.2byte	0xc1b
 8505 2089 9D200000 		.4byte	0x209d
 8506 208d 20       		.uleb128 0x20
 8507 208e 02000000 		.4byte	.LBB164
 8508 2092 12000000 		.4byte	.LBE164-.LBB164
 8509 2096 21       		.uleb128 0x21
 8510 2097 B30B0000 		.4byte	0xbb3
 8511 209b 00       		.byte	0
 8512 209c 00       		.byte	0
 8513 209d 23       		.uleb128 0x23
 8514 209e 1C000000 		.4byte	.LVL289
 8515 20a2 182B0000 		.4byte	0x2b18
 8516 20a6 23       		.uleb128 0x23
 8517 20a7 2E000000 		.4byte	.LVL290
 8518 20ab 2F2B0000 		.4byte	0x2b2f
 8519 20af 00       		.byte	0
 8520 20b0 06       		.uleb128 0x6
 8521 20b1 04       		.byte	0x4
 8522 20b2 9F0A0000 		.4byte	0xa9f
 8523 20b6 07       		.uleb128 0x7
 8524 20b7 B0200000 		.4byte	0x20b0
 8525 20bb 2E       		.uleb128 0x2e
 8526 20bc BC160000 		.4byte	.LASF355
 8527 20c0 01       		.byte	0x1
 8528 20c1 250C     		.2byte	0xc25
 8529 20c3 00000000 		.4byte	.LFB624
 8530 20c7 14000000 		.4byte	.LFE624-.LFB624
 8531 20cb 01       		.uleb128 0x1
 8532 20cc 9C       		.byte	0x9c
 8533 20cd E0200000 		.4byte	0x20e0
 8534 20d1 26       		.uleb128 0x26
 8535 20d2 D3150000 		.4byte	.LASF354
 8536 20d6 01       		.byte	0x1
 8537 20d7 250C     		.2byte	0xc25
 8538 20d9 B6200000 		.4byte	0x20b6
 8539 20dd 01       		.uleb128 0x1
 8540 20de 50       		.byte	0x50
 8541 20df 00       		.byte	0
 8542 20e0 2D       		.uleb128 0x2d
 8543 20e1 BD1C0000 		.4byte	.LASF356
 8544 20e5 01       		.byte	0x1
 8545 20e6 2D0C     		.2byte	0xc2d
 8546 20e8 2B090000 		.4byte	0x92b
 8547 20ec 00000000 		.4byte	.LFB625
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 253


 8548 20f0 80000000 		.4byte	.LFE625-.LFB625
 8549 20f4 01       		.uleb128 0x1
 8550 20f5 9C       		.byte	0x9c
 8551 20f6 C3210000 		.4byte	0x21c3
 8552 20fa 1D       		.uleb128 0x1d
 8553 20fb D3150000 		.4byte	.LASF354
 8554 20ff 01       		.byte	0x1
 8555 2100 2D0C     		.2byte	0xc2d
 8556 2102 B6200000 		.4byte	0x20b6
 8557 2106 C50B0000 		.4byte	.LLST83
 8558 210a 1D       		.uleb128 0x1d
 8559 210b 8E070000 		.4byte	.LASF357
 8560 210f 01       		.byte	0x1
 8561 2110 2D0C     		.2byte	0xc2d
 8562 2112 E71A0000 		.4byte	0x1ae7
 8563 2116 F10B0000 		.4byte	.LLST84
 8564 211a 1E       		.uleb128 0x1e
 8565 211b 901E0000 		.4byte	.LASF278
 8566 211f 01       		.byte	0x1
 8567 2120 2F0C     		.2byte	0xc2f
 8568 2122 2B090000 		.4byte	0x92b
 8569 2126 680C0000 		.4byte	.LLST85
 8570 212a 2F       		.uleb128 0x2f
 8571 212b A70B0000 		.4byte	0xba7
 8572 212f 04000000 		.4byte	.LBB165
 8573 2133 14000000 		.4byte	.LBE165-.LBB165
 8574 2137 01       		.byte	0x1
 8575 2138 310C     		.2byte	0xc31
 8576 213a 4E210000 		.4byte	0x214e
 8577 213e 20       		.uleb128 0x20
 8578 213f 04000000 		.4byte	.LBB166
 8579 2143 14000000 		.4byte	.LBE166-.LBB166
 8580 2147 21       		.uleb128 0x21
 8581 2148 B30B0000 		.4byte	0xbb3
 8582 214c 00       		.byte	0
 8583 214d 00       		.byte	0
 8584 214e 2F       		.uleb128 0x2f
 8585 214f A70B0000 		.4byte	0xba7
 8586 2153 1A000000 		.4byte	.LBB167
 8587 2157 14000000 		.4byte	.LBE167-.LBB167
 8588 215b 01       		.byte	0x1
 8589 215c 320C     		.2byte	0xc32
 8590 215e 72210000 		.4byte	0x2172
 8591 2162 20       		.uleb128 0x20
 8592 2163 1A000000 		.4byte	.LBB168
 8593 2167 14000000 		.4byte	.LBE168-.LBB168
 8594 216b 21       		.uleb128 0x21
 8595 216c B30B0000 		.4byte	0xbb3
 8596 2170 00       		.byte	0
 8597 2171 00       		.byte	0
 8598 2172 2B       		.uleb128 0x2b
 8599 2173 32000000 		.4byte	.LBB169
 8600 2177 42000000 		.4byte	.LBE169-.LBB169
 8601 217b B0210000 		.4byte	0x21b0
 8602 217f 1E       		.uleb128 0x1e
 8603 2180 E6070000 		.4byte	.LASF298
 8604 2184 01       		.byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 254


 8605 2185 370C     		.2byte	0xc37
 8606 2187 14100000 		.4byte	0x1014
 8607 218b 9E0C0000 		.4byte	.LLST86
 8608 218f 1E       		.uleb128 0x1e
 8609 2190 070A0000 		.4byte	.LASF358
 8610 2194 01       		.byte	0x1
 8611 2195 380C     		.2byte	0xc38
 8612 2197 14100000 		.4byte	0x1014
 8613 219b BC0C0000 		.4byte	.LLST87
 8614 219f 24       		.uleb128 0x24
 8615 21a0 62000000 		.4byte	.LVL300
 8616 21a4 BB200000 		.4byte	0x20bb
 8617 21a8 25       		.uleb128 0x25
 8618 21a9 01       		.uleb128 0x1
 8619 21aa 50       		.byte	0x50
 8620 21ab 02       		.uleb128 0x2
 8621 21ac 75       		.byte	0x75
 8622 21ad 00       		.sleb128 0
 8623 21ae 00       		.byte	0
 8624 21af 00       		.byte	0
 8625 21b0 23       		.uleb128 0x23
 8626 21b1 32000000 		.4byte	.LVL296
 8627 21b5 182B0000 		.4byte	0x2b18
 8628 21b9 23       		.uleb128 0x23
 8629 21ba 78000000 		.4byte	.LVL309
 8630 21be 2F2B0000 		.4byte	0x2b2f
 8631 21c2 00       		.byte	0
 8632 21c3 32       		.uleb128 0x32
 8633 21c4 C51E0000 		.4byte	.LASF360
 8634 21c8 01       		.byte	0x1
 8635 21c9 6C0C     		.2byte	0xc6c
 8636 21cb 00000000 		.4byte	.LFB626
 8637 21cf 10000000 		.4byte	.LFE626-.LFB626
 8638 21d3 01       		.uleb128 0x1
 8639 21d4 9C       		.byte	0x9c
 8640 21d5 2E       		.uleb128 0x2e
 8641 21d6 0A020000 		.4byte	.LASF361
 8642 21da 01       		.byte	0x1
 8643 21db 420D     		.2byte	0xd42
 8644 21dd 00000000 		.4byte	.LFB628
 8645 21e1 1C000000 		.4byte	.LFE628-.LFB628
 8646 21e5 01       		.uleb128 0x1
 8647 21e6 9C       		.byte	0x9c
 8648 21e7 2A220000 		.4byte	0x222a
 8649 21eb 1D       		.uleb128 0x1d
 8650 21ec 170F0000 		.4byte	.LASF362
 8651 21f0 01       		.byte	0x1
 8652 21f1 420D     		.2byte	0xd42
 8653 21f3 390A0000 		.4byte	0xa39
 8654 21f7 DA0C0000 		.4byte	.LLST88
 8655 21fb 1D       		.uleb128 0x1d
 8656 21fc 9D1D0000 		.4byte	.LASF363
 8657 2200 01       		.byte	0x1
 8658 2201 420D     		.2byte	0xd42
 8659 2203 2B090000 		.4byte	0x92b
 8660 2207 ED0C0000 		.4byte	.LLST89
 8661 220b 26       		.uleb128 0x26
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 255


 8662 220c AC240000 		.4byte	.LASF364
 8663 2210 01       		.byte	0x1
 8664 2211 420D     		.2byte	0xd42
 8665 2213 B0000000 		.4byte	0xb0
 8666 2217 01       		.uleb128 0x1
 8667 2218 52       		.byte	0x52
 8668 2219 1E       		.uleb128 0x1e
 8669 221a 93230000 		.4byte	.LASF279
 8670 221e 01       		.byte	0x1
 8671 221f 440D     		.2byte	0xd44
 8672 2221 A50C0000 		.4byte	0xca5
 8673 2225 1B0D0000 		.4byte	.LLST90
 8674 2229 00       		.byte	0
 8675 222a 2D       		.uleb128 0x2d
 8676 222b 730B0000 		.4byte	.LASF365
 8677 222f 01       		.byte	0x1
 8678 2230 520D     		.2byte	0xd52
 8679 2232 B0000000 		.4byte	0xb0
 8680 2236 00000000 		.4byte	.LFB629
 8681 223a 20000000 		.4byte	.LFE629-.LFB629
 8682 223e 01       		.uleb128 0x1
 8683 223f 9C       		.byte	0x9c
 8684 2240 85220000 		.4byte	0x2285
 8685 2244 1D       		.uleb128 0x1d
 8686 2245 7C180000 		.4byte	.LASF324
 8687 2249 01       		.byte	0x1
 8688 224a 520D     		.2byte	0xd52
 8689 224c 390A0000 		.4byte	0xa39
 8690 2250 2E0D0000 		.4byte	.LLST91
 8691 2254 1D       		.uleb128 0x1d
 8692 2255 9D1D0000 		.4byte	.LASF363
 8693 2259 01       		.byte	0x1
 8694 225a 520D     		.2byte	0xd52
 8695 225c 2B090000 		.4byte	0x92b
 8696 2260 5A0D0000 		.4byte	.LLST92
 8697 2264 1E       		.uleb128 0x1e
 8698 2265 960B0000 		.4byte	.LASF366
 8699 2269 01       		.byte	0x1
 8700 226a 540D     		.2byte	0xd54
 8701 226c B0000000 		.4byte	0xb0
 8702 2270 850D0000 		.4byte	.LLST93
 8703 2274 1E       		.uleb128 0x1e
 8704 2275 93230000 		.4byte	.LASF279
 8705 2279 01       		.byte	0x1
 8706 227a 550D     		.2byte	0xd55
 8707 227c A50C0000 		.4byte	0xca5
 8708 2280 BB0D0000 		.4byte	.LLST94
 8709 2284 00       		.byte	0
 8710 2285 2D       		.uleb128 0x2d
 8711 2286 77210000 		.4byte	.LASF367
 8712 228a 01       		.byte	0x1
 8713 228b B70E     		.2byte	0xeb7
 8714 228d 390A0000 		.4byte	0xa39
 8715 2291 00000000 		.4byte	.LFB634
 8716 2295 0C000000 		.4byte	.LFE634-.LFB634
 8717 2299 01       		.uleb128 0x1
 8718 229a 9C       		.byte	0x9c
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 256


 8719 229b AE220000 		.4byte	0x22ae
 8720 229f 27       		.uleb128 0x27
 8721 22a0 901E0000 		.4byte	.LASF278
 8722 22a4 01       		.byte	0x1
 8723 22a5 B90E     		.2byte	0xeb9
 8724 22a7 390A0000 		.4byte	0xa39
 8725 22ab 01       		.uleb128 0x1
 8726 22ac 50       		.byte	0x50
 8727 22ad 00       		.byte	0
 8728 22ae 2D       		.uleb128 0x2d
 8729 22af 94020000 		.4byte	.LASF368
 8730 22b3 01       		.byte	0x1
 8731 22b4 C80E     		.2byte	0xec8
 8732 22b6 2B090000 		.4byte	0x92b
 8733 22ba 00000000 		.4byte	.LFB635
 8734 22be 20000000 		.4byte	.LFE635-.LFB635
 8735 22c2 01       		.uleb128 0x1
 8736 22c3 9C       		.byte	0x9c
 8737 22c4 D7220000 		.4byte	0x22d7
 8738 22c8 27       		.uleb128 0x27
 8739 22c9 901E0000 		.4byte	.LASF278
 8740 22cd 01       		.byte	0x1
 8741 22ce CA0E     		.2byte	0xeca
 8742 22d0 2B090000 		.4byte	0x92b
 8743 22d4 01       		.uleb128 0x1
 8744 22d5 50       		.byte	0x50
 8745 22d6 00       		.byte	0
 8746 22d7 2D       		.uleb128 0x2d
 8747 22d8 57170000 		.4byte	.LASF369
 8748 22dc 01       		.byte	0x1
 8749 22dd 2911     		.2byte	0x1129
 8750 22df 41090000 		.4byte	0x941
 8751 22e3 00000000 		.4byte	.LFB636
 8752 22e7 20000000 		.4byte	.LFE636-.LFB636
 8753 22eb 01       		.uleb128 0x1
 8754 22ec 9C       		.byte	0x9c
 8755 22ed 00230000 		.4byte	0x2300
 8756 22f1 27       		.uleb128 0x27
 8757 22f2 71140000 		.4byte	.LASF305
 8758 22f6 01       		.byte	0x1
 8759 22f7 2B11     		.2byte	0x112b
 8760 22f9 41090000 		.4byte	0x941
 8761 22fd 01       		.uleb128 0x1
 8762 22fe 50       		.byte	0x50
 8763 22ff 00       		.byte	0
 8764 2300 2D       		.uleb128 0x2d
 8765 2301 711C0000 		.4byte	.LASF370
 8766 2305 01       		.byte	0x1
 8767 2306 4A11     		.2byte	0x114a
 8768 2308 EB000000 		.4byte	0xeb
 8769 230c 00000000 		.4byte	.LFB637
 8770 2310 80000000 		.4byte	.LFE637-.LFB637
 8771 2314 01       		.uleb128 0x1
 8772 2315 9C       		.byte	0x9c
 8773 2316 88230000 		.4byte	0x2388
 8774 231a 1D       		.uleb128 0x1d
 8775 231b 9E090000 		.4byte	.LASF371
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 257


 8776 231f 01       		.byte	0x1
 8777 2320 4A11     		.2byte	0x114a
 8778 2322 2B090000 		.4byte	0x92b
 8779 2326 CE0D0000 		.4byte	.LLST95
 8780 232a 1D       		.uleb128 0x1d
 8781 232b FB200000 		.4byte	.LASF295
 8782 232f 01       		.byte	0x1
 8783 2330 4A11     		.2byte	0x114a
 8784 2332 41090000 		.4byte	0x941
 8785 2336 FA0D0000 		.4byte	.LLST96
 8786 233a 1E       		.uleb128 0x1e
 8787 233b 95140000 		.4byte	.LASF372
 8788 233f 01       		.byte	0x1
 8789 2340 4C11     		.2byte	0x114c
 8790 2342 EB000000 		.4byte	0xeb
 8791 2346 260E0000 		.4byte	.LLST97
 8792 234a 23       		.uleb128 0x23
 8793 234b 0A000000 		.4byte	.LVL327
 8794 234f 182B0000 		.4byte	0x2b18
 8795 2353 29       		.uleb128 0x29
 8796 2354 2A000000 		.4byte	.LVL328
 8797 2358 860F0000 		.4byte	0xf86
 8798 235c 6C230000 		.4byte	0x236c
 8799 2360 25       		.uleb128 0x25
 8800 2361 01       		.uleb128 0x1
 8801 2362 50       		.byte	0x50
 8802 2363 02       		.uleb128 0x2
 8803 2364 74       		.byte	0x74
 8804 2365 00       		.sleb128 0
 8805 2366 25       		.uleb128 0x25
 8806 2367 01       		.uleb128 0x1
 8807 2368 51       		.byte	0x51
 8808 2369 01       		.uleb128 0x1
 8809 236a 31       		.byte	0x31
 8810 236b 00       		.byte	0
 8811 236c 23       		.uleb128 0x23
 8812 236d 3E000000 		.4byte	.LVL329
 8813 2371 2F2B0000 		.4byte	0x2b2f
 8814 2375 23       		.uleb128 0x23
 8815 2376 42000000 		.4byte	.LVL330
 8816 237a 182B0000 		.4byte	0x2b18
 8817 237e 23       		.uleb128 0x23
 8818 237f 74000000 		.4byte	.LVL332
 8819 2383 2F2B0000 		.4byte	0x2b2f
 8820 2387 00       		.byte	0
 8821 2388 2D       		.uleb128 0x2d
 8822 2389 3C110000 		.4byte	.LASF373
 8823 238d 01       		.byte	0x1
 8824 238e 8E11     		.2byte	0x118e
 8825 2390 2B090000 		.4byte	0x92b
 8826 2394 00000000 		.4byte	.LFB638
 8827 2398 A4000000 		.4byte	.LFE638-.LFB638
 8828 239c 01       		.uleb128 0x1
 8829 239d 9C       		.byte	0x9c
 8830 239e 30240000 		.4byte	0x2430
 8831 23a2 1D       		.uleb128 0x1d
 8832 23a3 AF0A0000 		.4byte	.LASF374
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 258


 8833 23a7 01       		.byte	0x1
 8834 23a8 8E11     		.2byte	0x118e
 8835 23aa EB000000 		.4byte	0xeb
 8836 23ae 440E0000 		.4byte	.LLST98
 8837 23b2 1D       		.uleb128 0x1d
 8838 23b3 5C020000 		.4byte	.LASF375
 8839 23b7 01       		.byte	0x1
 8840 23b8 8E11     		.2byte	0x118e
 8841 23ba EB000000 		.4byte	0xeb
 8842 23be 700E0000 		.4byte	.LLST99
 8843 23c2 1D       		.uleb128 0x1d
 8844 23c3 6E1E0000 		.4byte	.LASF376
 8845 23c7 01       		.byte	0x1
 8846 23c8 8E11     		.2byte	0x118e
 8847 23ca 0E010000 		.4byte	0x10e
 8848 23ce B50E0000 		.4byte	.LLST100
 8849 23d2 1D       		.uleb128 0x1d
 8850 23d3 FB200000 		.4byte	.LASF295
 8851 23d7 01       		.byte	0x1
 8852 23d8 8E11     		.2byte	0x118e
 8853 23da 41090000 		.4byte	0x941
 8854 23de FA0E0000 		.4byte	.LLST101
 8855 23e2 1E       		.uleb128 0x1e
 8856 23e3 901E0000 		.4byte	.LASF278
 8857 23e7 01       		.byte	0x1
 8858 23e8 9011     		.2byte	0x1190
 8859 23ea 2B090000 		.4byte	0x92b
 8860 23ee 260F0000 		.4byte	.LLST102
 8861 23f2 23       		.uleb128 0x23
 8862 23f3 0E000000 		.4byte	.LVL335
 8863 23f7 182B0000 		.4byte	0x2b18
 8864 23fb 29       		.uleb128 0x29
 8865 23fc 40000000 		.4byte	.LVL336
 8866 2400 860F0000 		.4byte	0xf86
 8867 2404 14240000 		.4byte	0x2414
 8868 2408 25       		.uleb128 0x25
 8869 2409 01       		.uleb128 0x1
 8870 240a 50       		.byte	0x50
 8871 240b 02       		.uleb128 0x2
 8872 240c 76       		.byte	0x76
 8873 240d 00       		.sleb128 0
 8874 240e 25       		.uleb128 0x25
 8875 240f 01       		.uleb128 0x1
 8876 2410 51       		.byte	0x51
 8877 2411 01       		.uleb128 0x1
 8878 2412 31       		.byte	0x31
 8879 2413 00       		.byte	0
 8880 2414 23       		.uleb128 0x23
 8881 2415 54000000 		.4byte	.LVL337
 8882 2419 2F2B0000 		.4byte	0x2b2f
 8883 241d 23       		.uleb128 0x23
 8884 241e 58000000 		.4byte	.LVL338
 8885 2422 182B0000 		.4byte	0x2b18
 8886 2426 23       		.uleb128 0x23
 8887 2427 98000000 		.4byte	.LVL344
 8888 242b 2F2B0000 		.4byte	0x2b2f
 8889 242f 00       		.byte	0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 259


 8890 2430 2D       		.uleb128 0x2d
 8891 2431 F4080000 		.4byte	.LASF377
 8892 2435 01       		.byte	0x1
 8893 2436 DE11     		.2byte	0x11de
 8894 2438 2B090000 		.4byte	0x92b
 8895 243c 00000000 		.4byte	.LFB639
 8896 2440 E4000000 		.4byte	.LFE639-.LFB639
 8897 2444 01       		.uleb128 0x1
 8898 2445 9C       		.byte	0x9c
 8899 2446 3D250000 		.4byte	0x253d
 8900 244a 1D       		.uleb128 0x1d
 8901 244b 89180000 		.4byte	.LASF378
 8902 244f 01       		.byte	0x1
 8903 2450 DE11     		.2byte	0x11de
 8904 2452 390A0000 		.4byte	0xa39
 8905 2456 500F0000 		.4byte	.LLST103
 8906 245a 1D       		.uleb128 0x1d
 8907 245b 0F160000 		.4byte	.LASF379
 8908 245f 01       		.byte	0x1
 8909 2460 DE11     		.2byte	0x11de
 8910 2462 EB000000 		.4byte	0xeb
 8911 2466 7C0F0000 		.4byte	.LLST104
 8912 246a 1D       		.uleb128 0x1d
 8913 246b 2E170000 		.4byte	.LASF380
 8914 246f 01       		.byte	0x1
 8915 2470 DE11     		.2byte	0x11de
 8916 2472 6F0A0000 		.4byte	0xa6f
 8917 2476 C10F0000 		.4byte	.LLST105
 8918 247a 1D       		.uleb128 0x1d
 8919 247b AF150000 		.4byte	.LASF381
 8920 247f 01       		.byte	0x1
 8921 2480 DE11     		.2byte	0x11de
 8922 2482 0E010000 		.4byte	0x10e
 8923 2486 E20F0000 		.4byte	.LLST106
 8924 248a 1E       		.uleb128 0x1e
 8925 248b 93230000 		.4byte	.LASF279
 8926 248f 01       		.byte	0x1
 8927 2490 E011     		.2byte	0x11e0
 8928 2492 A50C0000 		.4byte	0xca5
 8929 2496 27100000 		.4byte	.LLST107
 8930 249a 1E       		.uleb128 0x1e
 8931 249b 901E0000 		.4byte	.LASF278
 8932 249f 01       		.byte	0x1
 8933 24a0 E111     		.2byte	0x11e1
 8934 24a2 2B090000 		.4byte	0x92b
 8935 24a6 48100000 		.4byte	.LLST108
 8936 24aa 1E       		.uleb128 0x1e
 8937 24ab F7040000 		.4byte	.LASF382
 8938 24af 01       		.byte	0x1
 8939 24b0 E211     		.2byte	0x11e2
 8940 24b2 CA000000 		.4byte	0xca
 8941 24b6 72100000 		.4byte	.LLST109
 8942 24ba 2F       		.uleb128 0x2f
 8943 24bb A70B0000 		.4byte	0xba7
 8944 24bf 04000000 		.4byte	.LBB170
 8945 24c3 1A000000 		.4byte	.LBE170-.LBB170
 8946 24c7 01       		.byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 260


 8947 24c8 E411     		.2byte	0x11e4
 8948 24ca DE240000 		.4byte	0x24de
 8949 24ce 20       		.uleb128 0x20
 8950 24cf 04000000 		.4byte	.LBB171
 8951 24d3 1A000000 		.4byte	.LBE171-.LBB171
 8952 24d7 21       		.uleb128 0x21
 8953 24d8 B30B0000 		.4byte	0xbb3
 8954 24dc 00       		.byte	0
 8955 24dd 00       		.byte	0
 8956 24de 2F       		.uleb128 0x2f
 8957 24df A70B0000 		.4byte	0xba7
 8958 24e3 9E000000 		.4byte	.LBB172
 8959 24e7 12000000 		.4byte	.LBE172-.LBB172
 8960 24eb 01       		.byte	0x1
 8961 24ec 1C12     		.2byte	0x121c
 8962 24ee 02250000 		.4byte	0x2502
 8963 24f2 20       		.uleb128 0x20
 8964 24f3 9E000000 		.4byte	.LBB173
 8965 24f7 12000000 		.4byte	.LBE173-.LBB173
 8966 24fb 21       		.uleb128 0x21
 8967 24fc B30B0000 		.4byte	0xbb3
 8968 2500 00       		.byte	0
 8969 2501 00       		.byte	0
 8970 2502 23       		.uleb128 0x23
 8971 2503 22000000 		.4byte	.LVL351
 8972 2507 182B0000 		.4byte	0x2b18
 8973 250b 29       		.uleb128 0x29
 8974 250c 78000000 		.4byte	.LVL356
 8975 2510 3A2B0000 		.4byte	0x2b3a
 8976 2514 1F250000 		.4byte	0x251f
 8977 2518 25       		.uleb128 0x25
 8978 2519 01       		.uleb128 0x1
 8979 251a 50       		.byte	0x50
 8980 251b 02       		.uleb128 0x2
 8981 251c 76       		.byte	0x76
 8982 251d 00       		.sleb128 0
 8983 251e 00       		.byte	0
 8984 251f 29       		.uleb128 0x29
 8985 2520 9A000000 		.4byte	.LVL357
 8986 2524 232B0000 		.4byte	0x2b23
 8987 2528 33250000 		.4byte	0x2533
 8988 252c 25       		.uleb128 0x25
 8989 252d 01       		.uleb128 0x1
 8990 252e 51       		.byte	0x51
 8991 252f 02       		.uleb128 0x2
 8992 2530 76       		.byte	0x76
 8993 2531 00       		.sleb128 0
 8994 2532 00       		.byte	0
 8995 2533 23       		.uleb128 0x23
 8996 2534 D2000000 		.4byte	.LVL359
 8997 2538 2F2B0000 		.4byte	0x2b2f
 8998 253c 00       		.byte	0
 8999 253d 2D       		.uleb128 0x2d
 9000 253e 2D080000 		.4byte	.LASF383
 9001 2542 01       		.byte	0x1
 9002 2543 4812     		.2byte	0x1248
 9003 2545 2B090000 		.4byte	0x92b
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 261


 9004 2549 00000000 		.4byte	.LFB640
 9005 254d 20010000 		.4byte	.LFE640-.LFB640
 9006 2551 01       		.uleb128 0x1
 9007 2552 9C       		.byte	0x9c
 9008 2553 BD260000 		.4byte	0x26bd
 9009 2557 1D       		.uleb128 0x1d
 9010 2558 89180000 		.4byte	.LASF378
 9011 255c 01       		.byte	0x1
 9012 255d 4812     		.2byte	0x1248
 9013 255f 390A0000 		.4byte	0xa39
 9014 2563 85100000 		.4byte	.LLST110
 9015 2567 1D       		.uleb128 0x1d
 9016 2568 0F160000 		.4byte	.LASF379
 9017 256c 01       		.byte	0x1
 9018 256d 4812     		.2byte	0x1248
 9019 256f EB000000 		.4byte	0xeb
 9020 2573 B1100000 		.4byte	.LLST111
 9021 2577 1D       		.uleb128 0x1d
 9022 2578 2E170000 		.4byte	.LASF380
 9023 257c 01       		.byte	0x1
 9024 257d 4812     		.2byte	0x1248
 9025 257f 6F0A0000 		.4byte	0xa6f
 9026 2583 F6100000 		.4byte	.LLST112
 9027 2587 1D       		.uleb128 0x1d
 9028 2588 AF150000 		.4byte	.LASF381
 9029 258c 01       		.byte	0x1
 9030 258d 4812     		.2byte	0x1248
 9031 258f 0E010000 		.4byte	0x10e
 9032 2593 17110000 		.4byte	.LLST113
 9033 2597 1D       		.uleb128 0x1d
 9034 2598 AB020000 		.4byte	.LASF384
 9035 259c 01       		.byte	0x1
 9036 259d 4812     		.2byte	0x1248
 9037 259f BD260000 		.4byte	0x26bd
 9038 25a3 5C110000 		.4byte	.LLST114
 9039 25a7 1E       		.uleb128 0x1e
 9040 25a8 93230000 		.4byte	.LASF279
 9041 25ac 01       		.byte	0x1
 9042 25ad 4A12     		.2byte	0x124a
 9043 25af A50C0000 		.4byte	0xca5
 9044 25b3 7C110000 		.4byte	.LLST115
 9045 25b7 1E       		.uleb128 0x1e
 9046 25b8 F7040000 		.4byte	.LASF382
 9047 25bc 01       		.byte	0x1
 9048 25bd 4B12     		.2byte	0x124b
 9049 25bf CA000000 		.4byte	0xca
 9050 25c3 9D110000 		.4byte	.LLST116
 9051 25c7 1E       		.uleb128 0x1e
 9052 25c8 901E0000 		.4byte	.LASF278
 9053 25cc 01       		.byte	0x1
 9054 25cd 4C12     		.2byte	0x124c
 9055 25cf 2B090000 		.4byte	0x92b
 9056 25d3 B0110000 		.4byte	.LLST117
 9057 25d7 30       		.uleb128 0x30
 9058 25d8 01250000 		.4byte	.LASF317
 9059 25dc 01       		.byte	0x1
 9060 25dd 4D12     		.2byte	0x124d
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 262


 9061 25df 36090000 		.4byte	0x936
 9062 25e3 2F       		.uleb128 0x2f
 9063 25e4 A70B0000 		.4byte	0xba7
 9064 25e8 08000000 		.4byte	.LBB174
 9065 25ec 1A000000 		.4byte	.LBE174-.LBB174
 9066 25f0 01       		.byte	0x1
 9067 25f1 4F12     		.2byte	0x124f
 9068 25f3 07260000 		.4byte	0x2607
 9069 25f7 20       		.uleb128 0x20
 9070 25f8 08000000 		.4byte	.LBB175
 9071 25fc 1A000000 		.4byte	.LBE175-.LBB175
 9072 2600 21       		.uleb128 0x21
 9073 2601 B30B0000 		.4byte	0xbb3
 9074 2605 00       		.byte	0
 9075 2606 00       		.byte	0
 9076 2607 2F       		.uleb128 0x2f
 9077 2608 BF0B0000 		.4byte	0xbbf
 9078 260c 26000000 		.4byte	.LBB176
 9079 2610 14000000 		.4byte	.LBE176-.LBB176
 9080 2614 01       		.byte	0x1
 9081 2615 6512     		.2byte	0x1265
 9082 2617 30260000 		.4byte	0x2630
 9083 261b 20       		.uleb128 0x20
 9084 261c 26000000 		.4byte	.LBB177
 9085 2620 14000000 		.4byte	.LBE177-.LBB177
 9086 2624 21       		.uleb128 0x21
 9087 2625 CF0B0000 		.4byte	0xbcf
 9088 2629 21       		.uleb128 0x21
 9089 262a DA0B0000 		.4byte	0xbda
 9090 262e 00       		.byte	0
 9091 262f 00       		.byte	0
 9092 2630 2F       		.uleb128 0x2f
 9093 2631 A70B0000 		.4byte	0xba7
 9094 2635 98000000 		.4byte	.LBB178
 9095 2639 12000000 		.4byte	.LBE178-.LBB178
 9096 263d 01       		.byte	0x1
 9097 263e 9612     		.2byte	0x1296
 9098 2640 54260000 		.4byte	0x2654
 9099 2644 20       		.uleb128 0x20
 9100 2645 98000000 		.4byte	.LBB179
 9101 2649 12000000 		.4byte	.LBE179-.LBB179
 9102 264d 21       		.uleb128 0x21
 9103 264e B30B0000 		.4byte	0xbb3
 9104 2652 00       		.byte	0
 9105 2653 00       		.byte	0
 9106 2654 2F       		.uleb128 0x2f
 9107 2655 E60B0000 		.4byte	0xbe6
 9108 2659 08010000 		.4byte	.LBB180
 9109 265d 04000000 		.4byte	.LBE180-.LBB180
 9110 2661 01       		.byte	0x1
 9111 2662 BA12     		.2byte	0x12ba
 9112 2664 72260000 		.4byte	0x2672
 9113 2668 31       		.uleb128 0x31
 9114 2669 F20B0000 		.4byte	0xbf2
 9115 266d DA110000 		.4byte	.LLST118
 9116 2671 00       		.byte	0
 9117 2672 23       		.uleb128 0x23
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 263


 9118 2673 26000000 		.4byte	.LVL365
 9119 2677 692B0000 		.4byte	0x2b69
 9120 267b 29       		.uleb128 0x29
 9121 267c BC000000 		.4byte	.LVL371
 9122 2680 3A2B0000 		.4byte	0x2b3a
 9123 2684 8F260000 		.4byte	0x268f
 9124 2688 25       		.uleb128 0x25
 9125 2689 01       		.uleb128 0x1
 9126 268a 50       		.byte	0x50
 9127 268b 02       		.uleb128 0x2
 9128 268c 78       		.byte	0x78
 9129 268d 00       		.sleb128 0
 9130 268e 00       		.byte	0
 9131 268f 29       		.uleb128 0x29
 9132 2690 DE000000 		.4byte	.LVL372
 9133 2694 232B0000 		.4byte	0x2b23
 9134 2698 A3260000 		.4byte	0x26a3
 9135 269c 25       		.uleb128 0x25
 9136 269d 01       		.uleb128 0x1
 9137 269e 51       		.byte	0x51
 9138 269f 02       		.uleb128 0x2
 9139 26a0 78       		.byte	0x78
 9140 26a1 00       		.sleb128 0
 9141 26a2 00       		.byte	0
 9142 26a3 24       		.uleb128 0x24
 9143 26a4 EA000000 		.4byte	.LVL374
 9144 26a8 232B0000 		.4byte	0x2b23
 9145 26ac 25       		.uleb128 0x25
 9146 26ad 01       		.uleb128 0x1
 9147 26ae 50       		.byte	0x50
 9148 26af 05       		.uleb128 0x5
 9149 26b0 03       		.byte	0x3
 9150 26b1 14000000 		.4byte	.LANCHOR0+20
 9151 26b5 25       		.uleb128 0x25
 9152 26b6 01       		.uleb128 0x1
 9153 26b7 51       		.byte	0x51
 9154 26b8 02       		.uleb128 0x2
 9155 26b9 74       		.byte	0x74
 9156 26ba 18       		.sleb128 24
 9157 26bb 00       		.byte	0
 9158 26bc 00       		.byte	0
 9159 26bd 06       		.uleb128 0x6
 9160 26be 04       		.byte	0x4
 9161 26bf 2B090000 		.4byte	0x92b
 9162 26c3 2E       		.uleb128 0x2e
 9163 26c4 AD1B0000 		.4byte	.LASF385
 9164 26c8 01       		.byte	0x1
 9165 26c9 C412     		.2byte	0x12c4
 9166 26cb 00000000 		.4byte	.LFB641
 9167 26cf CC000000 		.4byte	.LFE641-.LFB641
 9168 26d3 01       		.uleb128 0x1
 9169 26d4 9C       		.byte	0x9c
 9170 26d5 FF270000 		.4byte	0x27ff
 9171 26d9 1D       		.uleb128 0x1d
 9172 26da 89180000 		.4byte	.LASF378
 9173 26de 01       		.byte	0x1
 9174 26df C412     		.2byte	0x12c4
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 264


 9175 26e1 390A0000 		.4byte	0xa39
 9176 26e5 ED110000 		.4byte	.LLST119
 9177 26e9 1D       		.uleb128 0x1d
 9178 26ea AB020000 		.4byte	.LASF384
 9179 26ee 01       		.byte	0x1
 9180 26ef C412     		.2byte	0x12c4
 9181 26f1 BD260000 		.4byte	0x26bd
 9182 26f5 19120000 		.4byte	.LLST120
 9183 26f9 1E       		.uleb128 0x1e
 9184 26fa 93230000 		.4byte	.LASF279
 9185 26fe 01       		.byte	0x1
 9186 26ff C612     		.2byte	0x12c6
 9187 2701 A50C0000 		.4byte	0xca5
 9188 2705 45120000 		.4byte	.LLST121
 9189 2709 1E       		.uleb128 0x1e
 9190 270a F7040000 		.4byte	.LASF382
 9191 270e 01       		.byte	0x1
 9192 270f C712     		.2byte	0x12c7
 9193 2711 CA000000 		.4byte	0xca
 9194 2715 66120000 		.4byte	.LLST122
 9195 2719 30       		.uleb128 0x30
 9196 271a 01250000 		.4byte	.LASF317
 9197 271e 01       		.byte	0x1
 9198 271f C812     		.2byte	0x12c8
 9199 2721 36090000 		.4byte	0x936
 9200 2725 2F       		.uleb128 0x2f
 9201 2726 A70B0000 		.4byte	0xba7
 9202 272a 04000000 		.4byte	.LBB182
 9203 272e 16000000 		.4byte	.LBE182-.LBB182
 9204 2732 01       		.byte	0x1
 9205 2733 CA12     		.2byte	0x12ca
 9206 2735 49270000 		.4byte	0x2749
 9207 2739 20       		.uleb128 0x20
 9208 273a 04000000 		.4byte	.LBB183
 9209 273e 16000000 		.4byte	.LBE183-.LBB183
 9210 2742 21       		.uleb128 0x21
 9211 2743 B30B0000 		.4byte	0xbb3
 9212 2747 00       		.byte	0
 9213 2748 00       		.byte	0
 9214 2749 2F       		.uleb128 0x2f
 9215 274a BF0B0000 		.4byte	0xbbf
 9216 274e 1E000000 		.4byte	.LBB184
 9217 2752 14000000 		.4byte	.LBE184-.LBB184
 9218 2756 01       		.byte	0x1
 9219 2757 E012     		.2byte	0x12e0
 9220 2759 72270000 		.4byte	0x2772
 9221 275d 20       		.uleb128 0x20
 9222 275e 1E000000 		.4byte	.LBB185
 9223 2762 14000000 		.4byte	.LBE185-.LBB185
 9224 2766 21       		.uleb128 0x21
 9225 2767 CF0B0000 		.4byte	0xbcf
 9226 276b 21       		.uleb128 0x21
 9227 276c DA0B0000 		.4byte	0xbda
 9228 2770 00       		.byte	0
 9229 2771 00       		.byte	0
 9230 2772 2F       		.uleb128 0x2f
 9231 2773 A70B0000 		.4byte	0xba7
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 265


 9232 2777 4C000000 		.4byte	.LBB186
 9233 277b 12000000 		.4byte	.LBE186-.LBB186
 9234 277f 01       		.byte	0x1
 9235 2780 F012     		.2byte	0x12f0
 9236 2782 96270000 		.4byte	0x2796
 9237 2786 20       		.uleb128 0x20
 9238 2787 4C000000 		.4byte	.LBB187
 9239 278b 12000000 		.4byte	.LBE187-.LBB187
 9240 278f 21       		.uleb128 0x21
 9241 2790 B30B0000 		.4byte	0xbb3
 9242 2794 00       		.byte	0
 9243 2795 00       		.byte	0
 9244 2796 2F       		.uleb128 0x2f
 9245 2797 E60B0000 		.4byte	0xbe6
 9246 279b BA000000 		.4byte	.LBB188
 9247 279f 12000000 		.4byte	.LBE188-.LBB188
 9248 27a3 01       		.byte	0x1
 9249 27a4 1413     		.2byte	0x1314
 9250 27a6 B4270000 		.4byte	0x27b4
 9251 27aa 31       		.uleb128 0x31
 9252 27ab F20B0000 		.4byte	0xbf2
 9253 27af 79120000 		.4byte	.LLST123
 9254 27b3 00       		.byte	0
 9255 27b4 23       		.uleb128 0x23
 9256 27b5 1E000000 		.4byte	.LVL380
 9257 27b9 692B0000 		.4byte	0x2b69
 9258 27bd 29       		.uleb128 0x29
 9259 27be 6E000000 		.4byte	.LVL384
 9260 27c2 3A2B0000 		.4byte	0x2b3a
 9261 27c6 D1270000 		.4byte	0x27d1
 9262 27ca 25       		.uleb128 0x25
 9263 27cb 01       		.uleb128 0x1
 9264 27cc 50       		.byte	0x50
 9265 27cd 02       		.uleb128 0x2
 9266 27ce 77       		.byte	0x77
 9267 27cf 00       		.sleb128 0
 9268 27d0 00       		.byte	0
 9269 27d1 29       		.uleb128 0x29
 9270 27d2 90000000 		.4byte	.LVL385
 9271 27d6 232B0000 		.4byte	0x2b23
 9272 27da E5270000 		.4byte	0x27e5
 9273 27de 25       		.uleb128 0x25
 9274 27df 01       		.uleb128 0x1
 9275 27e0 51       		.byte	0x51
 9276 27e1 02       		.uleb128 0x2
 9277 27e2 77       		.byte	0x77
 9278 27e3 00       		.sleb128 0
 9279 27e4 00       		.byte	0
 9280 27e5 24       		.uleb128 0x24
 9281 27e6 9C000000 		.4byte	.LVL386
 9282 27ea 232B0000 		.4byte	0x2b23
 9283 27ee 25       		.uleb128 0x25
 9284 27ef 01       		.uleb128 0x1
 9285 27f0 50       		.byte	0x50
 9286 27f1 05       		.uleb128 0x5
 9287 27f2 03       		.byte	0x3
 9288 27f3 14000000 		.4byte	.LANCHOR0+20
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 266


 9289 27f7 25       		.uleb128 0x25
 9290 27f8 01       		.uleb128 0x1
 9291 27f9 51       		.byte	0x51
 9292 27fa 02       		.uleb128 0x2
 9293 27fb 74       		.byte	0x74
 9294 27fc 18       		.sleb128 24
 9295 27fd 00       		.byte	0
 9296 27fe 00       		.byte	0
 9297 27ff 2D       		.uleb128 0x2d
 9298 2800 3B230000 		.4byte	.LASF386
 9299 2804 01       		.byte	0x1
 9300 2805 1D13     		.2byte	0x131d
 9301 2807 2B090000 		.4byte	0x92b
 9302 280b 00000000 		.4byte	.LFB642
 9303 280f 34000000 		.4byte	.LFE642-.LFB642
 9304 2813 01       		.uleb128 0x1
 9305 2814 9C       		.byte	0x9c
 9306 2815 5C280000 		.4byte	0x285c
 9307 2819 1D       		.uleb128 0x1d
 9308 281a 97180000 		.4byte	.LASF282
 9309 281e 01       		.byte	0x1
 9310 281f 1D13     		.2byte	0x131d
 9311 2821 390A0000 		.4byte	0xa39
 9312 2825 8C120000 		.4byte	.LLST124
 9313 2829 1E       		.uleb128 0x1e
 9314 282a 93230000 		.4byte	.LASF279
 9315 282e 01       		.byte	0x1
 9316 282f 1F13     		.2byte	0x131f
 9317 2831 A50C0000 		.4byte	0xca5
 9318 2835 9F120000 		.4byte	.LLST125
 9319 2839 1E       		.uleb128 0x1e
 9320 283a 901E0000 		.4byte	.LASF278
 9321 283e 01       		.byte	0x1
 9322 283f 2013     		.2byte	0x1320
 9323 2841 2B090000 		.4byte	0x92b
 9324 2845 BD120000 		.4byte	.LLST126
 9325 2849 23       		.uleb128 0x23
 9326 284a 10000000 		.4byte	.LVL392
 9327 284e 182B0000 		.4byte	0x2b18
 9328 2852 23       		.uleb128 0x23
 9329 2853 2A000000 		.4byte	.LVL397
 9330 2857 2F2B0000 		.4byte	0x2b2f
 9331 285b 00       		.byte	0
 9332 285c 11       		.uleb128 0x11
 9333 285d 2E0A0000 		.4byte	0xa2e
 9334 2861 6C280000 		.4byte	0x286c
 9335 2865 12       		.uleb128 0x12
 9336 2866 A9000000 		.4byte	0xa9
 9337 286a 13       		.byte	0x13
 9338 286b 00       		.byte	0
 9339 286c 27       		.uleb128 0x27
 9340 286d F1030000 		.4byte	.LASF387
 9341 2871 01       		.byte	0x1
 9342 2872 5F01     		.2byte	0x15f
 9343 2874 5C280000 		.4byte	0x285c
 9344 2878 05       		.uleb128 0x5
 9345 2879 03       		.byte	0x3
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 267


 9346 287a 30000000 		.4byte	pxReadyTasksLists
 9347 287e 27       		.uleb128 0x27
 9348 287f B41D0000 		.4byte	.LASF388
 9349 2883 01       		.byte	0x1
 9350 2884 6001     		.2byte	0x160
 9351 2886 2E0A0000 		.4byte	0xa2e
 9352 288a 05       		.uleb128 0x5
 9353 288b 03       		.byte	0x3
 9354 288c C0010000 		.4byte	xDelayedTaskList1
 9355 2890 27       		.uleb128 0x27
 9356 2891 A3050000 		.4byte	.LASF389
 9357 2895 01       		.byte	0x1
 9358 2896 6101     		.2byte	0x161
 9359 2898 2E0A0000 		.4byte	0xa2e
 9360 289c 05       		.uleb128 0x5
 9361 289d 03       		.byte	0x3
 9362 289e D4010000 		.4byte	xDelayedTaskList2
 9363 28a2 27       		.uleb128 0x27
 9364 28a3 C41B0000 		.4byte	.LASF390
 9365 28a7 01       		.byte	0x1
 9366 28a8 6201     		.2byte	0x162
 9367 28aa B4280000 		.4byte	0x28b4
 9368 28ae 05       		.uleb128 0x5
 9369 28af 03       		.byte	0x3
 9370 28b0 28000000 		.4byte	pxDelayedTaskList
 9371 28b4 08       		.uleb128 0x8
 9372 28b5 F2180000 		.4byte	0x18f2
 9373 28b9 27       		.uleb128 0x27
 9374 28ba 220F0000 		.4byte	.LASF391
 9375 28be 01       		.byte	0x1
 9376 28bf 6301     		.2byte	0x163
 9377 28c1 B4280000 		.4byte	0x28b4
 9378 28c5 05       		.uleb128 0x5
 9379 28c6 03       		.byte	0x3
 9380 28c7 FC010000 		.4byte	pxOverflowDelayedTaskList
 9381 28cb 27       		.uleb128 0x27
 9382 28cc F70A0000 		.4byte	.LASF392
 9383 28d0 01       		.byte	0x1
 9384 28d1 6401     		.2byte	0x164
 9385 28d3 2E0A0000 		.4byte	0xa2e
 9386 28d7 05       		.uleb128 0x5
 9387 28d8 03       		.byte	0x3
 9388 28d9 14000000 		.4byte	xPendingReadyList
 9389 28dd 27       		.uleb128 0x27
 9390 28de 22050000 		.4byte	.LASF393
 9391 28e2 01       		.byte	0x1
 9392 28e3 6801     		.2byte	0x168
 9393 28e5 2E0A0000 		.4byte	0xa2e
 9394 28e9 05       		.uleb128 0x5
 9395 28ea 03       		.byte	0x3
 9396 28eb E8010000 		.4byte	xTasksWaitingTermination
 9397 28ef 27       		.uleb128 0x27
 9398 28f0 A0030000 		.4byte	.LASF394
 9399 28f4 01       		.byte	0x1
 9400 28f5 6901     		.2byte	0x169
 9401 28f7 230A0000 		.4byte	0xa23
 9402 28fb 05       		.uleb128 0x5
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 268


 9403 28fc 03       		.byte	0x3
 9404 28fd 14020000 		.4byte	uxDeletedTasksWaitingCleanUp
 9405 2901 27       		.uleb128 0x27
 9406 2902 BE0E0000 		.4byte	.LASF395
 9407 2906 01       		.byte	0x1
 9408 2907 6F01     		.2byte	0x16f
 9409 2909 2E0A0000 		.4byte	0xa2e
 9410 290d 05       		.uleb128 0x5
 9411 290e 03       		.byte	0x3
 9412 290f 00000000 		.4byte	xSuspendedTaskList
 9413 2913 27       		.uleb128 0x27
 9414 2914 EA220000 		.4byte	.LASF396
 9415 2918 01       		.byte	0x1
 9416 2919 7401     		.2byte	0x174
 9417 291b 230A0000 		.4byte	0xa23
 9418 291f 05       		.uleb128 0x5
 9419 2920 03       		.byte	0x3
 9420 2921 00020000 		.4byte	uxCurrentNumberOfTasks
 9421 2925 27       		.uleb128 0x27
 9422 2926 C20D0000 		.4byte	.LASF397
 9423 292a 01       		.byte	0x1
 9424 292b 7501     		.2byte	0x175
 9425 292d 37290000 		.4byte	0x2937
 9426 2931 05       		.uleb128 0x5
 9427 2932 03       		.byte	0x3
 9428 2933 18020000 		.4byte	xTickCount
 9429 2937 08       		.uleb128 0x8
 9430 2938 41090000 		.4byte	0x941
 9431 293c 27       		.uleb128 0x27
 9432 293d 381D0000 		.4byte	.LASF398
 9433 2941 01       		.byte	0x1
 9434 2942 7601     		.2byte	0x176
 9435 2944 230A0000 		.4byte	0xa23
 9436 2948 05       		.uleb128 0x5
 9437 2949 03       		.byte	0x3
 9438 294a 10020000 		.4byte	uxTopReadyPriority
 9439 294e 27       		.uleb128 0x27
 9440 294f 17030000 		.4byte	.LASF399
 9441 2953 01       		.byte	0x1
 9442 2954 7701     		.2byte	0x177
 9443 2956 60290000 		.4byte	0x2960
 9444 295a 05       		.uleb128 0x5
 9445 295b 03       		.byte	0x3
 9446 295c 08020000 		.4byte	xSchedulerRunning
 9447 2960 08       		.uleb128 0x8
 9448 2961 2B090000 		.4byte	0x92b
 9449 2965 27       		.uleb128 0x27
 9450 2966 D61E0000 		.4byte	.LASF400
 9451 296a 01       		.byte	0x1
 9452 296b 7801     		.2byte	0x178
 9453 296d 230A0000 		.4byte	0xa23
 9454 2971 05       		.uleb128 0x5
 9455 2972 03       		.byte	0x3
 9456 2973 28020000 		.4byte	uxPendedTicks
 9457 2977 27       		.uleb128 0x27
 9458 2978 98250000 		.4byte	.LASF401
 9459 297c 01       		.byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 269


 9460 297d 7901     		.2byte	0x179
 9461 297f 60290000 		.4byte	0x2960
 9462 2983 05       		.uleb128 0x5
 9463 2984 03       		.byte	0x3
 9464 2985 2C020000 		.4byte	xYieldPending
 9465 2989 27       		.uleb128 0x27
 9466 298a 4E190000 		.4byte	.LASF402
 9467 298e 01       		.byte	0x1
 9468 298f 7A01     		.2byte	0x17a
 9469 2991 60290000 		.4byte	0x2960
 9470 2995 05       		.uleb128 0x5
 9471 2996 03       		.byte	0x3
 9472 2997 24020000 		.4byte	xNumOfOverflows
 9473 299b 27       		.uleb128 0x27
 9474 299c D9160000 		.4byte	.LASF403
 9475 29a0 01       		.byte	0x1
 9476 29a1 7B01     		.2byte	0x17b
 9477 29a3 36090000 		.4byte	0x936
 9478 29a7 05       		.uleb128 0x5
 9479 29a8 03       		.byte	0x3
 9480 29a9 0C020000 		.4byte	uxTaskNumber
 9481 29ad 27       		.uleb128 0x27
 9482 29ae 98130000 		.4byte	.LASF404
 9483 29b2 01       		.byte	0x1
 9484 29b3 7C01     		.2byte	0x17c
 9485 29b5 37290000 		.4byte	0x2937
 9486 29b9 05       		.uleb128 0x5
 9487 29ba 03       		.byte	0x3
 9488 29bb 2C000000 		.4byte	xNextTaskUnblockTime
 9489 29bf 27       		.uleb128 0x27
 9490 29c0 A41D0000 		.4byte	.LASF405
 9491 29c4 01       		.byte	0x1
 9492 29c5 7D01     		.2byte	0x17d
 9493 29c7 390A0000 		.4byte	0xa39
 9494 29cb 05       		.uleb128 0x5
 9495 29cc 03       		.byte	0x3
 9496 29cd 20020000 		.4byte	xIdleTaskHandle
 9497 29d1 27       		.uleb128 0x27
 9498 29d2 DF230000 		.4byte	.LASF406
 9499 29d6 01       		.byte	0x1
 9500 29d7 8701     		.2byte	0x187
 9501 29d9 230A0000 		.4byte	0xa23
 9502 29dd 05       		.uleb128 0x5
 9503 29de 03       		.byte	0x3
 9504 29df 1C020000 		.4byte	uxSchedulerSuspended
 9505 29e3 38       		.uleb128 0x38
 9506 29e4 7F1B0000 		.4byte	.LASF407
 9507 29e8 13       		.byte	0x13
 9508 29e9 EA07     		.2byte	0x7ea
 9509 29eb EF290000 		.4byte	0x29ef
 9510 29ef 08       		.uleb128 0x8
 9511 29f0 E0000000 		.4byte	0xe0
 9512 29f4 11       		.uleb128 0x11
 9513 29f5 B1070000 		.4byte	0x7b1
 9514 29f9 042A0000 		.4byte	0x2a04
 9515 29fd 12       		.uleb128 0x12
 9516 29fe A9000000 		.4byte	0xa9
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 270


 9517 2a02 0B       		.byte	0xb
 9518 2a03 00       		.byte	0
 9519 2a04 38       		.uleb128 0x38
 9520 2a05 871D0000 		.4byte	.LASF408
 9521 2a09 06       		.byte	0x6
 9522 2a0a FC02     		.2byte	0x2fc
 9523 2a0c 102A0000 		.4byte	0x2a10
 9524 2a10 07       		.uleb128 0x7
 9525 2a11 F4290000 		.4byte	0x29f4
 9526 2a15 38       		.uleb128 0x38
 9527 2a16 79130000 		.4byte	.LASF409
 9528 2a1a 0C       		.byte	0xc
 9529 2a1b 2202     		.2byte	0x222
 9530 2a1d 0B080000 		.4byte	0x80b
 9531 2a21 11       		.uleb128 0x11
 9532 2a22 DA070000 		.4byte	0x7da
 9533 2a26 312A0000 		.4byte	0x2a31
 9534 2a2a 12       		.uleb128 0x12
 9535 2a2b A9000000 		.4byte	0xa9
 9536 2a2f 00       		.byte	0
 9537 2a30 00       		.byte	0
 9538 2a31 38       		.uleb128 0x38
 9539 2a32 29030000 		.4byte	.LASF410
 9540 2a36 0C       		.byte	0xc
 9541 2a37 2C02     		.2byte	0x22c
 9542 2a39 212A0000 		.4byte	0x2a21
 9543 2a3d 11       		.uleb128 0x11
 9544 2a3e 53080000 		.4byte	0x853
 9545 2a42 4D2A0000 		.4byte	0x2a4d
 9546 2a46 12       		.uleb128 0x12
 9547 2a47 A9000000 		.4byte	0xa9
 9548 2a4b 00       		.byte	0
 9549 2a4c 00       		.byte	0
 9550 2a4d 38       		.uleb128 0x38
 9551 2a4e 24000000 		.4byte	.LASF411
 9552 2a52 0C       		.byte	0xc
 9553 2a53 2D02     		.2byte	0x22d
 9554 2a55 3D2A0000 		.4byte	0x2a3d
 9555 2a59 38       		.uleb128 0x38
 9556 2a5a 55250000 		.4byte	.LASF412
 9557 2a5e 0C       		.byte	0xc
 9558 2a5f 5202     		.2byte	0x252
 9559 2a61 CA000000 		.4byte	0xca
 9560 2a65 39       		.uleb128 0x39
 9561 2a66 9D180000 		.4byte	.LASF413
 9562 2a6a 14       		.byte	0x14
 9563 2a6b 87       		.byte	0x87
 9564 2a6c 51030000 		.4byte	0x351
 9565 2a70 39       		.uleb128 0x39
 9566 2a71 CB110000 		.4byte	.LASF414
 9567 2a75 15       		.byte	0x15
 9568 2a76 7C       		.byte	0x7c
 9569 2a77 14010000 		.4byte	0x114
 9570 2a7b 39       		.uleb128 0x39
 9571 2a7c 61090000 		.4byte	.LASF415
 9572 2a80 15       		.byte	0x15
 9573 2a81 7D       		.byte	0x7d
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 271


 9574 2a82 862A0000 		.4byte	0x2a86
 9575 2a86 07       		.uleb128 0x7
 9576 2a87 C9010000 		.4byte	0x1c9
 9577 2a8b 39       		.uleb128 0x39
 9578 2a8c 78010000 		.4byte	.LASF416
 9579 2a90 16       		.byte	0x16
 9580 2a91 5E       		.byte	0x5e
 9581 2a92 75020000 		.4byte	0x275
 9582 2a96 38       		.uleb128 0x38
 9583 2a97 BC210000 		.4byte	.LASF417
 9584 2a9b 0F       		.byte	0xf
 9585 2a9c 6001     		.2byte	0x160
 9586 2a9e EB000000 		.4byte	0xeb
 9587 2aa2 11       		.uleb128 0x11
 9588 2aa3 B22A0000 		.4byte	0x2ab2
 9589 2aa7 B22A0000 		.4byte	0x2ab2
 9590 2aab 12       		.uleb128 0x12
 9591 2aac A9000000 		.4byte	0xa9
 9592 2ab0 00       		.byte	0
 9593 2ab1 00       		.byte	0
 9594 2ab2 07       		.uleb128 0x7
 9595 2ab3 F9080000 		.4byte	0x8f9
 9596 2ab7 38       		.uleb128 0x38
 9597 2ab8 F21A0000 		.4byte	.LASF418
 9598 2abc 0F       		.byte	0xf
 9599 2abd 6401     		.2byte	0x164
 9600 2abf C32A0000 		.4byte	0x2ac3
 9601 2ac3 07       		.uleb128 0x7
 9602 2ac4 A22A0000 		.4byte	0x2aa2
 9603 2ac8 3A       		.uleb128 0x3a
 9604 2ac9 AD190000 		.4byte	.LASF419
 9605 2acd 01       		.byte	0x1
 9606 2ace 5C01     		.2byte	0x15c
 9607 2ad0 DA2A0000 		.4byte	0x2ada
 9608 2ad4 05       		.uleb128 0x5
 9609 2ad5 03       		.byte	0x3
 9610 2ad6 00000000 		.4byte	pxCurrentTCB
 9611 2ada 08       		.uleb128 0x8
 9612 2adb A50C0000 		.4byte	0xca5
 9613 2adf 3B       		.uleb128 0x3b
 9614 2ae0 E41C0000 		.4byte	.LASF420
 9615 2ae4 E41C0000 		.4byte	.LASF420
 9616 2ae8 17       		.byte	0x17
 9617 2ae9 82       		.byte	0x82
 9618 2aea 3B       		.uleb128 0x3b
 9619 2aeb CC150000 		.4byte	.LASF421
 9620 2aef CC150000 		.4byte	.LASF421
 9621 2af3 18       		.byte	0x18
 9622 2af4 19       		.byte	0x19
 9623 2af5 3C       		.uleb128 0x3c
 9624 2af6 011B0000 		.4byte	.LASF422
 9625 2afa 011B0000 		.4byte	.LASF422
 9626 2afe 11       		.byte	0x11
 9627 2aff 6301     		.2byte	0x163
 9628 2b01 3B       		.uleb128 0x3b
 9629 2b02 E9130000 		.4byte	.LASF423
 9630 2b06 E9130000 		.4byte	.LASF423
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 272


 9631 2b0a 17       		.byte	0x17
 9632 2b0b 66       		.byte	0x66
 9633 2b0c 3C       		.uleb128 0x3c
 9634 2b0d E41F0000 		.4byte	.LASF424
 9635 2b11 E41F0000 		.4byte	.LASF424
 9636 2b15 11       		.byte	0x11
 9637 2b16 5801     		.2byte	0x158
 9638 2b18 3B       		.uleb128 0x3b
 9639 2b19 E0050000 		.4byte	.LASF425
 9640 2b1d E0050000 		.4byte	.LASF425
 9641 2b21 02       		.byte	0x2
 9642 2b22 61       		.byte	0x61
 9643 2b23 3C       		.uleb128 0x3c
 9644 2b24 870E0000 		.4byte	.LASF426
 9645 2b28 870E0000 		.4byte	.LASF426
 9646 2b2c 11       		.byte	0x11
 9647 2b2d 8501     		.2byte	0x185
 9648 2b2f 3B       		.uleb128 0x3b
 9649 2b30 35000000 		.4byte	.LASF427
 9650 2b34 35000000 		.4byte	.LASF427
 9651 2b38 02       		.byte	0x2
 9652 2b39 62       		.byte	0x62
 9653 2b3a 3C       		.uleb128 0x3c
 9654 2b3b 081F0000 		.4byte	.LASF428
 9655 2b3f 081F0000 		.4byte	.LASF428
 9656 2b43 11       		.byte	0x11
 9657 2b44 9401     		.2byte	0x194
 9658 2b46 3C       		.uleb128 0x3c
 9659 2b47 00000000 		.4byte	.LASF429
 9660 2b4b 00000000 		.4byte	.LASF429
 9661 2b4f 11       		.byte	0x11
 9662 2b50 7001     		.2byte	0x170
 9663 2b52 3C       		.uleb128 0x3c
 9664 2b53 48060000 		.4byte	.LASF430
 9665 2b57 48060000 		.4byte	.LASF430
 9666 2b5b 01       		.byte	0x1
 9667 2b5c D80C     		.2byte	0xcd8
 9668 2b5e 3B       		.uleb128 0x3b
 9669 2b5f 5D240000 		.4byte	.LASF431
 9670 2b63 5D240000 		.4byte	.LASF431
 9671 2b67 17       		.byte	0x17
 9672 2b68 81       		.byte	0x81
 9673 2b69 3B       		.uleb128 0x3b
 9674 2b6a F41F0000 		.4byte	.LASF432
 9675 2b6e F41F0000 		.4byte	.LASF432
 9676 2b72 02       		.byte	0x2
 9677 2b73 75       		.byte	0x75
 9678 2b74 3C       		.uleb128 0x3c
 9679 2b75 F6070000 		.4byte	.LASF433
 9680 2b79 F6070000 		.4byte	.LASF433
 9681 2b7d 19       		.byte	0x19
 9682 2b7e EF04     		.2byte	0x4ef
 9683 2b80 3B       		.uleb128 0x3b
 9684 2b81 8D010000 		.4byte	.LASF434
 9685 2b85 8D010000 		.4byte	.LASF434
 9686 2b89 17       		.byte	0x17
 9687 2b8a 8B       		.byte	0x8b
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 273


 9688 2b8b 3B       		.uleb128 0x3b
 9689 2b8c D21C0000 		.4byte	.LASF435
 9690 2b90 D21C0000 		.4byte	.LASF435
 9691 2b94 17       		.byte	0x17
 9692 2b95 92       		.byte	0x92
 9693 2b96 3C       		.uleb128 0x3c
 9694 2b97 9C1A0000 		.4byte	.LASF436
 9695 2b9b 9C1A0000 		.4byte	.LASF436
 9696 2b9f 01       		.byte	0x1
 9697 2ba0 9701     		.2byte	0x197
 9698 2ba2 00       		.byte	0
 9699              		.section	.debug_abbrev,"",%progbits
 9700              	.Ldebug_abbrev0:
 9701 0000 01       		.uleb128 0x1
 9702 0001 11       		.uleb128 0x11
 9703 0002 01       		.byte	0x1
 9704 0003 25       		.uleb128 0x25
 9705 0004 0E       		.uleb128 0xe
 9706 0005 13       		.uleb128 0x13
 9707 0006 0B       		.uleb128 0xb
 9708 0007 03       		.uleb128 0x3
 9709 0008 0E       		.uleb128 0xe
 9710 0009 1B       		.uleb128 0x1b
 9711 000a 0E       		.uleb128 0xe
 9712 000b 55       		.uleb128 0x55
 9713 000c 17       		.uleb128 0x17
 9714 000d 11       		.uleb128 0x11
 9715 000e 01       		.uleb128 0x1
 9716 000f 10       		.uleb128 0x10
 9717 0010 17       		.uleb128 0x17
 9718 0011 00       		.byte	0
 9719 0012 00       		.byte	0
 9720 0013 02       		.uleb128 0x2
 9721 0014 16       		.uleb128 0x16
 9722 0015 00       		.byte	0
 9723 0016 03       		.uleb128 0x3
 9724 0017 0E       		.uleb128 0xe
 9725 0018 3A       		.uleb128 0x3a
 9726 0019 0B       		.uleb128 0xb
 9727 001a 3B       		.uleb128 0x3b
 9728 001b 0B       		.uleb128 0xb
 9729 001c 49       		.uleb128 0x49
 9730 001d 13       		.uleb128 0x13
 9731 001e 00       		.byte	0
 9732 001f 00       		.byte	0
 9733 0020 03       		.uleb128 0x3
 9734 0021 24       		.uleb128 0x24
 9735 0022 00       		.byte	0
 9736 0023 0B       		.uleb128 0xb
 9737 0024 0B       		.uleb128 0xb
 9738 0025 3E       		.uleb128 0x3e
 9739 0026 0B       		.uleb128 0xb
 9740 0027 03       		.uleb128 0x3
 9741 0028 0E       		.uleb128 0xe
 9742 0029 00       		.byte	0
 9743 002a 00       		.byte	0
 9744 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 274


 9745 002c 24       		.uleb128 0x24
 9746 002d 00       		.byte	0
 9747 002e 0B       		.uleb128 0xb
 9748 002f 0B       		.uleb128 0xb
 9749 0030 3E       		.uleb128 0x3e
 9750 0031 0B       		.uleb128 0xb
 9751 0032 03       		.uleb128 0x3
 9752 0033 08       		.uleb128 0x8
 9753 0034 00       		.byte	0
 9754 0035 00       		.byte	0
 9755 0036 05       		.uleb128 0x5
 9756 0037 0F       		.uleb128 0xf
 9757 0038 00       		.byte	0
 9758 0039 0B       		.uleb128 0xb
 9759 003a 0B       		.uleb128 0xb
 9760 003b 00       		.byte	0
 9761 003c 00       		.byte	0
 9762 003d 06       		.uleb128 0x6
 9763 003e 0F       		.uleb128 0xf
 9764 003f 00       		.byte	0
 9765 0040 0B       		.uleb128 0xb
 9766 0041 0B       		.uleb128 0xb
 9767 0042 49       		.uleb128 0x49
 9768 0043 13       		.uleb128 0x13
 9769 0044 00       		.byte	0
 9770 0045 00       		.byte	0
 9771 0046 07       		.uleb128 0x7
 9772 0047 26       		.uleb128 0x26
 9773 0048 00       		.byte	0
 9774 0049 49       		.uleb128 0x49
 9775 004a 13       		.uleb128 0x13
 9776 004b 00       		.byte	0
 9777 004c 00       		.byte	0
 9778 004d 08       		.uleb128 0x8
 9779 004e 35       		.uleb128 0x35
 9780 004f 00       		.byte	0
 9781 0050 49       		.uleb128 0x49
 9782 0051 13       		.uleb128 0x13
 9783 0052 00       		.byte	0
 9784 0053 00       		.byte	0
 9785 0054 09       		.uleb128 0x9
 9786 0055 04       		.uleb128 0x4
 9787 0056 01       		.byte	0x1
 9788 0057 0B       		.uleb128 0xb
 9789 0058 0B       		.uleb128 0xb
 9790 0059 49       		.uleb128 0x49
 9791 005a 13       		.uleb128 0x13
 9792 005b 3A       		.uleb128 0x3a
 9793 005c 0B       		.uleb128 0xb
 9794 005d 3B       		.uleb128 0x3b
 9795 005e 05       		.uleb128 0x5
 9796 005f 01       		.uleb128 0x1
 9797 0060 13       		.uleb128 0x13
 9798 0061 00       		.byte	0
 9799 0062 00       		.byte	0
 9800 0063 0A       		.uleb128 0xa
 9801 0064 28       		.uleb128 0x28
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 275


 9802 0065 00       		.byte	0
 9803 0066 03       		.uleb128 0x3
 9804 0067 0E       		.uleb128 0xe
 9805 0068 1C       		.uleb128 0x1c
 9806 0069 0B       		.uleb128 0xb
 9807 006a 00       		.byte	0
 9808 006b 00       		.byte	0
 9809 006c 0B       		.uleb128 0xb
 9810 006d 16       		.uleb128 0x16
 9811 006e 00       		.byte	0
 9812 006f 03       		.uleb128 0x3
 9813 0070 0E       		.uleb128 0xe
 9814 0071 3A       		.uleb128 0x3a
 9815 0072 0B       		.uleb128 0xb
 9816 0073 3B       		.uleb128 0x3b
 9817 0074 05       		.uleb128 0x5
 9818 0075 49       		.uleb128 0x49
 9819 0076 13       		.uleb128 0x13
 9820 0077 00       		.byte	0
 9821 0078 00       		.byte	0
 9822 0079 0C       		.uleb128 0xc
 9823 007a 13       		.uleb128 0x13
 9824 007b 01       		.byte	0x1
 9825 007c 0B       		.uleb128 0xb
 9826 007d 0B       		.uleb128 0xb
 9827 007e 3A       		.uleb128 0x3a
 9828 007f 0B       		.uleb128 0xb
 9829 0080 3B       		.uleb128 0x3b
 9830 0081 05       		.uleb128 0x5
 9831 0082 01       		.uleb128 0x1
 9832 0083 13       		.uleb128 0x13
 9833 0084 00       		.byte	0
 9834 0085 00       		.byte	0
 9835 0086 0D       		.uleb128 0xd
 9836 0087 0D       		.uleb128 0xd
 9837 0088 00       		.byte	0
 9838 0089 03       		.uleb128 0x3
 9839 008a 0E       		.uleb128 0xe
 9840 008b 3A       		.uleb128 0x3a
 9841 008c 0B       		.uleb128 0xb
 9842 008d 3B       		.uleb128 0x3b
 9843 008e 05       		.uleb128 0x5
 9844 008f 49       		.uleb128 0x49
 9845 0090 13       		.uleb128 0x13
 9846 0091 38       		.uleb128 0x38
 9847 0092 0B       		.uleb128 0xb
 9848 0093 00       		.byte	0
 9849 0094 00       		.byte	0
 9850 0095 0E       		.uleb128 0xe
 9851 0096 15       		.uleb128 0x15
 9852 0097 01       		.byte	0x1
 9853 0098 27       		.uleb128 0x27
 9854 0099 19       		.uleb128 0x19
 9855 009a 01       		.uleb128 0x1
 9856 009b 13       		.uleb128 0x13
 9857 009c 00       		.byte	0
 9858 009d 00       		.byte	0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 276


 9859 009e 0F       		.uleb128 0xf
 9860 009f 05       		.uleb128 0x5
 9861 00a0 00       		.byte	0
 9862 00a1 49       		.uleb128 0x49
 9863 00a2 13       		.uleb128 0x13
 9864 00a3 00       		.byte	0
 9865 00a4 00       		.byte	0
 9866 00a5 10       		.uleb128 0x10
 9867 00a6 13       		.uleb128 0x13
 9868 00a7 01       		.byte	0x1
 9869 00a8 03       		.uleb128 0x3
 9870 00a9 0E       		.uleb128 0xe
 9871 00aa 0B       		.uleb128 0xb
 9872 00ab 0B       		.uleb128 0xb
 9873 00ac 3A       		.uleb128 0x3a
 9874 00ad 0B       		.uleb128 0xb
 9875 00ae 3B       		.uleb128 0x3b
 9876 00af 05       		.uleb128 0x5
 9877 00b0 01       		.uleb128 0x1
 9878 00b1 13       		.uleb128 0x13
 9879 00b2 00       		.byte	0
 9880 00b3 00       		.byte	0
 9881 00b4 11       		.uleb128 0x11
 9882 00b5 01       		.uleb128 0x1
 9883 00b6 01       		.byte	0x1
 9884 00b7 49       		.uleb128 0x49
 9885 00b8 13       		.uleb128 0x13
 9886 00b9 01       		.uleb128 0x1
 9887 00ba 13       		.uleb128 0x13
 9888 00bb 00       		.byte	0
 9889 00bc 00       		.byte	0
 9890 00bd 12       		.uleb128 0x12
 9891 00be 21       		.uleb128 0x21
 9892 00bf 00       		.byte	0
 9893 00c0 49       		.uleb128 0x49
 9894 00c1 13       		.uleb128 0x13
 9895 00c2 2F       		.uleb128 0x2f
 9896 00c3 0B       		.uleb128 0xb
 9897 00c4 00       		.byte	0
 9898 00c5 00       		.byte	0
 9899 00c6 13       		.uleb128 0x13
 9900 00c7 28       		.uleb128 0x28
 9901 00c8 00       		.byte	0
 9902 00c9 03       		.uleb128 0x3
 9903 00ca 0E       		.uleb128 0xe
 9904 00cb 1C       		.uleb128 0x1c
 9905 00cc 05       		.uleb128 0x5
 9906 00cd 00       		.byte	0
 9907 00ce 00       		.byte	0
 9908 00cf 14       		.uleb128 0x14
 9909 00d0 04       		.uleb128 0x4
 9910 00d1 01       		.byte	0x1
 9911 00d2 0B       		.uleb128 0xb
 9912 00d3 0B       		.uleb128 0xb
 9913 00d4 49       		.uleb128 0x49
 9914 00d5 13       		.uleb128 0x13
 9915 00d6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 277


 9916 00d7 0B       		.uleb128 0xb
 9917 00d8 3B       		.uleb128 0x3b
 9918 00d9 0B       		.uleb128 0xb
 9919 00da 01       		.uleb128 0x1
 9920 00db 13       		.uleb128 0x13
 9921 00dc 00       		.byte	0
 9922 00dd 00       		.byte	0
 9923 00de 15       		.uleb128 0x15
 9924 00df 13       		.uleb128 0x13
 9925 00e0 01       		.byte	0x1
 9926 00e1 0B       		.uleb128 0xb
 9927 00e2 0B       		.uleb128 0xb
 9928 00e3 3A       		.uleb128 0x3a
 9929 00e4 0B       		.uleb128 0xb
 9930 00e5 3B       		.uleb128 0x3b
 9931 00e6 0B       		.uleb128 0xb
 9932 00e7 01       		.uleb128 0x1
 9933 00e8 13       		.uleb128 0x13
 9934 00e9 00       		.byte	0
 9935 00ea 00       		.byte	0
 9936 00eb 16       		.uleb128 0x16
 9937 00ec 0D       		.uleb128 0xd
 9938 00ed 00       		.byte	0
 9939 00ee 03       		.uleb128 0x3
 9940 00ef 0E       		.uleb128 0xe
 9941 00f0 3A       		.uleb128 0x3a
 9942 00f1 0B       		.uleb128 0xb
 9943 00f2 3B       		.uleb128 0x3b
 9944 00f3 0B       		.uleb128 0xb
 9945 00f4 49       		.uleb128 0x49
 9946 00f5 13       		.uleb128 0x13
 9947 00f6 38       		.uleb128 0x38
 9948 00f7 0B       		.uleb128 0xb
 9949 00f8 00       		.byte	0
 9950 00f9 00       		.byte	0
 9951 00fa 17       		.uleb128 0x17
 9952 00fb 13       		.uleb128 0x13
 9953 00fc 01       		.byte	0x1
 9954 00fd 03       		.uleb128 0x3
 9955 00fe 0E       		.uleb128 0xe
 9956 00ff 0B       		.uleb128 0xb
 9957 0100 0B       		.uleb128 0xb
 9958 0101 3A       		.uleb128 0x3a
 9959 0102 0B       		.uleb128 0xb
 9960 0103 3B       		.uleb128 0x3b
 9961 0104 0B       		.uleb128 0xb
 9962 0105 01       		.uleb128 0x1
 9963 0106 13       		.uleb128 0x13
 9964 0107 00       		.byte	0
 9965 0108 00       		.byte	0
 9966 0109 18       		.uleb128 0x18
 9967 010a 2E       		.uleb128 0x2e
 9968 010b 01       		.byte	0x1
 9969 010c 03       		.uleb128 0x3
 9970 010d 0E       		.uleb128 0xe
 9971 010e 3A       		.uleb128 0x3a
 9972 010f 0B       		.uleb128 0xb
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 278


 9973 0110 3B       		.uleb128 0x3b
 9974 0111 0B       		.uleb128 0xb
 9975 0112 27       		.uleb128 0x27
 9976 0113 19       		.uleb128 0x19
 9977 0114 20       		.uleb128 0x20
 9978 0115 0B       		.uleb128 0xb
 9979 0116 01       		.uleb128 0x1
 9980 0117 13       		.uleb128 0x13
 9981 0118 00       		.byte	0
 9982 0119 00       		.byte	0
 9983 011a 19       		.uleb128 0x19
 9984 011b 34       		.uleb128 0x34
 9985 011c 00       		.byte	0
 9986 011d 03       		.uleb128 0x3
 9987 011e 0E       		.uleb128 0xe
 9988 011f 3A       		.uleb128 0x3a
 9989 0120 0B       		.uleb128 0xb
 9990 0121 3B       		.uleb128 0x3b
 9991 0122 0B       		.uleb128 0xb
 9992 0123 49       		.uleb128 0x49
 9993 0124 13       		.uleb128 0x13
 9994 0125 00       		.byte	0
 9995 0126 00       		.byte	0
 9996 0127 1A       		.uleb128 0x1a
 9997 0128 2E       		.uleb128 0x2e
 9998 0129 01       		.byte	0x1
 9999 012a 03       		.uleb128 0x3
 10000 012b 0E       		.uleb128 0xe
 10001 012c 3A       		.uleb128 0x3a
 10002 012d 0B       		.uleb128 0xb
 10003 012e 3B       		.uleb128 0x3b
 10004 012f 0B       		.uleb128 0xb
 10005 0130 27       		.uleb128 0x27
 10006 0131 19       		.uleb128 0x19
 10007 0132 49       		.uleb128 0x49
 10008 0133 13       		.uleb128 0x13
 10009 0134 20       		.uleb128 0x20
 10010 0135 0B       		.uleb128 0xb
 10011 0136 01       		.uleb128 0x1
 10012 0137 13       		.uleb128 0x13
 10013 0138 00       		.byte	0
 10014 0139 00       		.byte	0
 10015 013a 1B       		.uleb128 0x1b
 10016 013b 05       		.uleb128 0x5
 10017 013c 00       		.byte	0
 10018 013d 03       		.uleb128 0x3
 10019 013e 0E       		.uleb128 0xe
 10020 013f 3A       		.uleb128 0x3a
 10021 0140 0B       		.uleb128 0xb
 10022 0141 3B       		.uleb128 0x3b
 10023 0142 0B       		.uleb128 0xb
 10024 0143 49       		.uleb128 0x49
 10025 0144 13       		.uleb128 0x13
 10026 0145 00       		.byte	0
 10027 0146 00       		.byte	0
 10028 0147 1C       		.uleb128 0x1c
 10029 0148 2E       		.uleb128 0x2e
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 279


 10030 0149 01       		.byte	0x1
 10031 014a 03       		.uleb128 0x3
 10032 014b 0E       		.uleb128 0xe
 10033 014c 3A       		.uleb128 0x3a
 10034 014d 0B       		.uleb128 0xb
 10035 014e 3B       		.uleb128 0x3b
 10036 014f 05       		.uleb128 0x5
 10037 0150 27       		.uleb128 0x27
 10038 0151 19       		.uleb128 0x19
 10039 0152 49       		.uleb128 0x49
 10040 0153 13       		.uleb128 0x13
 10041 0154 11       		.uleb128 0x11
 10042 0155 01       		.uleb128 0x1
 10043 0156 12       		.uleb128 0x12
 10044 0157 06       		.uleb128 0x6
 10045 0158 40       		.uleb128 0x40
 10046 0159 18       		.uleb128 0x18
 10047 015a 9742     		.uleb128 0x2117
 10048 015c 19       		.uleb128 0x19
 10049 015d 01       		.uleb128 0x1
 10050 015e 13       		.uleb128 0x13
 10051 015f 00       		.byte	0
 10052 0160 00       		.byte	0
 10053 0161 1D       		.uleb128 0x1d
 10054 0162 05       		.uleb128 0x5
 10055 0163 00       		.byte	0
 10056 0164 03       		.uleb128 0x3
 10057 0165 0E       		.uleb128 0xe
 10058 0166 3A       		.uleb128 0x3a
 10059 0167 0B       		.uleb128 0xb
 10060 0168 3B       		.uleb128 0x3b
 10061 0169 05       		.uleb128 0x5
 10062 016a 49       		.uleb128 0x49
 10063 016b 13       		.uleb128 0x13
 10064 016c 02       		.uleb128 0x2
 10065 016d 17       		.uleb128 0x17
 10066 016e 00       		.byte	0
 10067 016f 00       		.byte	0
 10068 0170 1E       		.uleb128 0x1e
 10069 0171 34       		.uleb128 0x34
 10070 0172 00       		.byte	0
 10071 0173 03       		.uleb128 0x3
 10072 0174 0E       		.uleb128 0xe
 10073 0175 3A       		.uleb128 0x3a
 10074 0176 0B       		.uleb128 0xb
 10075 0177 3B       		.uleb128 0x3b
 10076 0178 05       		.uleb128 0x5
 10077 0179 49       		.uleb128 0x49
 10078 017a 13       		.uleb128 0x13
 10079 017b 02       		.uleb128 0x2
 10080 017c 17       		.uleb128 0x17
 10081 017d 00       		.byte	0
 10082 017e 00       		.byte	0
 10083 017f 1F       		.uleb128 0x1f
 10084 0180 1D       		.uleb128 0x1d
 10085 0181 01       		.byte	0x1
 10086 0182 31       		.uleb128 0x31
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 280


 10087 0183 13       		.uleb128 0x13
 10088 0184 11       		.uleb128 0x11
 10089 0185 01       		.uleb128 0x1
 10090 0186 12       		.uleb128 0x12
 10091 0187 06       		.uleb128 0x6
 10092 0188 58       		.uleb128 0x58
 10093 0189 0B       		.uleb128 0xb
 10094 018a 59       		.uleb128 0x59
 10095 018b 05       		.uleb128 0x5
 10096 018c 00       		.byte	0
 10097 018d 00       		.byte	0
 10098 018e 20       		.uleb128 0x20
 10099 018f 0B       		.uleb128 0xb
 10100 0190 01       		.byte	0x1
 10101 0191 11       		.uleb128 0x11
 10102 0192 01       		.uleb128 0x1
 10103 0193 12       		.uleb128 0x12
 10104 0194 06       		.uleb128 0x6
 10105 0195 00       		.byte	0
 10106 0196 00       		.byte	0
 10107 0197 21       		.uleb128 0x21
 10108 0198 34       		.uleb128 0x34
 10109 0199 00       		.byte	0
 10110 019a 31       		.uleb128 0x31
 10111 019b 13       		.uleb128 0x13
 10112 019c 00       		.byte	0
 10113 019d 00       		.byte	0
 10114 019e 22       		.uleb128 0x22
 10115 019f 2E       		.uleb128 0x2e
 10116 01a0 01       		.byte	0x1
 10117 01a1 03       		.uleb128 0x3
 10118 01a2 0E       		.uleb128 0xe
 10119 01a3 3A       		.uleb128 0x3a
 10120 01a4 0B       		.uleb128 0xb
 10121 01a5 3B       		.uleb128 0x3b
 10122 01a6 05       		.uleb128 0x5
 10123 01a7 27       		.uleb128 0x27
 10124 01a8 19       		.uleb128 0x19
 10125 01a9 11       		.uleb128 0x11
 10126 01aa 01       		.uleb128 0x1
 10127 01ab 12       		.uleb128 0x12
 10128 01ac 06       		.uleb128 0x6
 10129 01ad 40       		.uleb128 0x40
 10130 01ae 18       		.uleb128 0x18
 10131 01af 9742     		.uleb128 0x2117
 10132 01b1 19       		.uleb128 0x19
 10133 01b2 01       		.uleb128 0x1
 10134 01b3 13       		.uleb128 0x13
 10135 01b4 00       		.byte	0
 10136 01b5 00       		.byte	0
 10137 01b6 23       		.uleb128 0x23
 10138 01b7 898201   		.uleb128 0x4109
 10139 01ba 00       		.byte	0
 10140 01bb 11       		.uleb128 0x11
 10141 01bc 01       		.uleb128 0x1
 10142 01bd 31       		.uleb128 0x31
 10143 01be 13       		.uleb128 0x13
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 281


 10144 01bf 00       		.byte	0
 10145 01c0 00       		.byte	0
 10146 01c1 24       		.uleb128 0x24
 10147 01c2 898201   		.uleb128 0x4109
 10148 01c5 01       		.byte	0x1
 10149 01c6 11       		.uleb128 0x11
 10150 01c7 01       		.uleb128 0x1
 10151 01c8 31       		.uleb128 0x31
 10152 01c9 13       		.uleb128 0x13
 10153 01ca 00       		.byte	0
 10154 01cb 00       		.byte	0
 10155 01cc 25       		.uleb128 0x25
 10156 01cd 8A8201   		.uleb128 0x410a
 10157 01d0 00       		.byte	0
 10158 01d1 02       		.uleb128 0x2
 10159 01d2 18       		.uleb128 0x18
 10160 01d3 9142     		.uleb128 0x2111
 10161 01d5 18       		.uleb128 0x18
 10162 01d6 00       		.byte	0
 10163 01d7 00       		.byte	0
 10164 01d8 26       		.uleb128 0x26
 10165 01d9 05       		.uleb128 0x5
 10166 01da 00       		.byte	0
 10167 01db 03       		.uleb128 0x3
 10168 01dc 0E       		.uleb128 0xe
 10169 01dd 3A       		.uleb128 0x3a
 10170 01de 0B       		.uleb128 0xb
 10171 01df 3B       		.uleb128 0x3b
 10172 01e0 05       		.uleb128 0x5
 10173 01e1 49       		.uleb128 0x49
 10174 01e2 13       		.uleb128 0x13
 10175 01e3 02       		.uleb128 0x2
 10176 01e4 18       		.uleb128 0x18
 10177 01e5 00       		.byte	0
 10178 01e6 00       		.byte	0
 10179 01e7 27       		.uleb128 0x27
 10180 01e8 34       		.uleb128 0x34
 10181 01e9 00       		.byte	0
 10182 01ea 03       		.uleb128 0x3
 10183 01eb 0E       		.uleb128 0xe
 10184 01ec 3A       		.uleb128 0x3a
 10185 01ed 0B       		.uleb128 0xb
 10186 01ee 3B       		.uleb128 0x3b
 10187 01ef 05       		.uleb128 0x5
 10188 01f0 49       		.uleb128 0x49
 10189 01f1 13       		.uleb128 0x13
 10190 01f2 02       		.uleb128 0x2
 10191 01f3 18       		.uleb128 0x18
 10192 01f4 00       		.byte	0
 10193 01f5 00       		.byte	0
 10194 01f6 28       		.uleb128 0x28
 10195 01f7 34       		.uleb128 0x34
 10196 01f8 00       		.byte	0
 10197 01f9 03       		.uleb128 0x3
 10198 01fa 08       		.uleb128 0x8
 10199 01fb 3A       		.uleb128 0x3a
 10200 01fc 0B       		.uleb128 0xb
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 282


 10201 01fd 3B       		.uleb128 0x3b
 10202 01fe 05       		.uleb128 0x5
 10203 01ff 49       		.uleb128 0x49
 10204 0200 13       		.uleb128 0x13
 10205 0201 02       		.uleb128 0x2
 10206 0202 17       		.uleb128 0x17
 10207 0203 00       		.byte	0
 10208 0204 00       		.byte	0
 10209 0205 29       		.uleb128 0x29
 10210 0206 898201   		.uleb128 0x4109
 10211 0209 01       		.byte	0x1
 10212 020a 11       		.uleb128 0x11
 10213 020b 01       		.uleb128 0x1
 10214 020c 31       		.uleb128 0x31
 10215 020d 13       		.uleb128 0x13
 10216 020e 01       		.uleb128 0x1
 10217 020f 13       		.uleb128 0x13
 10218 0210 00       		.byte	0
 10219 0211 00       		.byte	0
 10220 0212 2A       		.uleb128 0x2a
 10221 0213 2E       		.uleb128 0x2e
 10222 0214 01       		.byte	0x1
 10223 0215 03       		.uleb128 0x3
 10224 0216 0E       		.uleb128 0xe
 10225 0217 3A       		.uleb128 0x3a
 10226 0218 0B       		.uleb128 0xb
 10227 0219 3B       		.uleb128 0x3b
 10228 021a 05       		.uleb128 0x5
 10229 021b 27       		.uleb128 0x27
 10230 021c 19       		.uleb128 0x19
 10231 021d 8701     		.uleb128 0x87
 10232 021f 19       		.uleb128 0x19
 10233 0220 11       		.uleb128 0x11
 10234 0221 01       		.uleb128 0x1
 10235 0222 12       		.uleb128 0x12
 10236 0223 06       		.uleb128 0x6
 10237 0224 40       		.uleb128 0x40
 10238 0225 18       		.uleb128 0x18
 10239 0226 9742     		.uleb128 0x2117
 10240 0228 19       		.uleb128 0x19
 10241 0229 01       		.uleb128 0x1
 10242 022a 13       		.uleb128 0x13
 10243 022b 00       		.byte	0
 10244 022c 00       		.byte	0
 10245 022d 2B       		.uleb128 0x2b
 10246 022e 0B       		.uleb128 0xb
 10247 022f 01       		.byte	0x1
 10248 0230 11       		.uleb128 0x11
 10249 0231 01       		.uleb128 0x1
 10250 0232 12       		.uleb128 0x12
 10251 0233 06       		.uleb128 0x6
 10252 0234 01       		.uleb128 0x1
 10253 0235 13       		.uleb128 0x13
 10254 0236 00       		.byte	0
 10255 0237 00       		.byte	0
 10256 0238 2C       		.uleb128 0x2c
 10257 0239 2E       		.uleb128 0x2e
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 283


 10258 023a 00       		.byte	0
 10259 023b 3F       		.uleb128 0x3f
 10260 023c 19       		.uleb128 0x19
 10261 023d 03       		.uleb128 0x3
 10262 023e 0E       		.uleb128 0xe
 10263 023f 3A       		.uleb128 0x3a
 10264 0240 0B       		.uleb128 0xb
 10265 0241 3B       		.uleb128 0x3b
 10266 0242 05       		.uleb128 0x5
 10267 0243 27       		.uleb128 0x27
 10268 0244 19       		.uleb128 0x19
 10269 0245 3C       		.uleb128 0x3c
 10270 0246 19       		.uleb128 0x19
 10271 0247 00       		.byte	0
 10272 0248 00       		.byte	0
 10273 0249 2D       		.uleb128 0x2d
 10274 024a 2E       		.uleb128 0x2e
 10275 024b 01       		.byte	0x1
 10276 024c 3F       		.uleb128 0x3f
 10277 024d 19       		.uleb128 0x19
 10278 024e 03       		.uleb128 0x3
 10279 024f 0E       		.uleb128 0xe
 10280 0250 3A       		.uleb128 0x3a
 10281 0251 0B       		.uleb128 0xb
 10282 0252 3B       		.uleb128 0x3b
 10283 0253 05       		.uleb128 0x5
 10284 0254 27       		.uleb128 0x27
 10285 0255 19       		.uleb128 0x19
 10286 0256 49       		.uleb128 0x49
 10287 0257 13       		.uleb128 0x13
 10288 0258 11       		.uleb128 0x11
 10289 0259 01       		.uleb128 0x1
 10290 025a 12       		.uleb128 0x12
 10291 025b 06       		.uleb128 0x6
 10292 025c 40       		.uleb128 0x40
 10293 025d 18       		.uleb128 0x18
 10294 025e 9742     		.uleb128 0x2117
 10295 0260 19       		.uleb128 0x19
 10296 0261 01       		.uleb128 0x1
 10297 0262 13       		.uleb128 0x13
 10298 0263 00       		.byte	0
 10299 0264 00       		.byte	0
 10300 0265 2E       		.uleb128 0x2e
 10301 0266 2E       		.uleb128 0x2e
 10302 0267 01       		.byte	0x1
 10303 0268 3F       		.uleb128 0x3f
 10304 0269 19       		.uleb128 0x19
 10305 026a 03       		.uleb128 0x3
 10306 026b 0E       		.uleb128 0xe
 10307 026c 3A       		.uleb128 0x3a
 10308 026d 0B       		.uleb128 0xb
 10309 026e 3B       		.uleb128 0x3b
 10310 026f 05       		.uleb128 0x5
 10311 0270 27       		.uleb128 0x27
 10312 0271 19       		.uleb128 0x19
 10313 0272 11       		.uleb128 0x11
 10314 0273 01       		.uleb128 0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 284


 10315 0274 12       		.uleb128 0x12
 10316 0275 06       		.uleb128 0x6
 10317 0276 40       		.uleb128 0x40
 10318 0277 18       		.uleb128 0x18
 10319 0278 9742     		.uleb128 0x2117
 10320 027a 19       		.uleb128 0x19
 10321 027b 01       		.uleb128 0x1
 10322 027c 13       		.uleb128 0x13
 10323 027d 00       		.byte	0
 10324 027e 00       		.byte	0
 10325 027f 2F       		.uleb128 0x2f
 10326 0280 1D       		.uleb128 0x1d
 10327 0281 01       		.byte	0x1
 10328 0282 31       		.uleb128 0x31
 10329 0283 13       		.uleb128 0x13
 10330 0284 11       		.uleb128 0x11
 10331 0285 01       		.uleb128 0x1
 10332 0286 12       		.uleb128 0x12
 10333 0287 06       		.uleb128 0x6
 10334 0288 58       		.uleb128 0x58
 10335 0289 0B       		.uleb128 0xb
 10336 028a 59       		.uleb128 0x59
 10337 028b 05       		.uleb128 0x5
 10338 028c 01       		.uleb128 0x1
 10339 028d 13       		.uleb128 0x13
 10340 028e 00       		.byte	0
 10341 028f 00       		.byte	0
 10342 0290 30       		.uleb128 0x30
 10343 0291 34       		.uleb128 0x34
 10344 0292 00       		.byte	0
 10345 0293 03       		.uleb128 0x3
 10346 0294 0E       		.uleb128 0xe
 10347 0295 3A       		.uleb128 0x3a
 10348 0296 0B       		.uleb128 0xb
 10349 0297 3B       		.uleb128 0x3b
 10350 0298 05       		.uleb128 0x5
 10351 0299 49       		.uleb128 0x49
 10352 029a 13       		.uleb128 0x13
 10353 029b 00       		.byte	0
 10354 029c 00       		.byte	0
 10355 029d 31       		.uleb128 0x31
 10356 029e 05       		.uleb128 0x5
 10357 029f 00       		.byte	0
 10358 02a0 31       		.uleb128 0x31
 10359 02a1 13       		.uleb128 0x13
 10360 02a2 02       		.uleb128 0x2
 10361 02a3 17       		.uleb128 0x17
 10362 02a4 00       		.byte	0
 10363 02a5 00       		.byte	0
 10364 02a6 32       		.uleb128 0x32
 10365 02a7 2E       		.uleb128 0x2e
 10366 02a8 00       		.byte	0
 10367 02a9 3F       		.uleb128 0x3f
 10368 02aa 19       		.uleb128 0x19
 10369 02ab 03       		.uleb128 0x3
 10370 02ac 0E       		.uleb128 0xe
 10371 02ad 3A       		.uleb128 0x3a
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 285


 10372 02ae 0B       		.uleb128 0xb
 10373 02af 3B       		.uleb128 0x3b
 10374 02b0 05       		.uleb128 0x5
 10375 02b1 27       		.uleb128 0x27
 10376 02b2 19       		.uleb128 0x19
 10377 02b3 11       		.uleb128 0x11
 10378 02b4 01       		.uleb128 0x1
 10379 02b5 12       		.uleb128 0x12
 10380 02b6 06       		.uleb128 0x6
 10381 02b7 40       		.uleb128 0x40
 10382 02b8 18       		.uleb128 0x18
 10383 02b9 9742     		.uleb128 0x2117
 10384 02bb 19       		.uleb128 0x19
 10385 02bc 00       		.byte	0
 10386 02bd 00       		.byte	0
 10387 02be 33       		.uleb128 0x33
 10388 02bf 34       		.uleb128 0x34
 10389 02c0 00       		.byte	0
 10390 02c1 03       		.uleb128 0x3
 10391 02c2 0E       		.uleb128 0xe
 10392 02c3 3A       		.uleb128 0x3a
 10393 02c4 0B       		.uleb128 0xb
 10394 02c5 3B       		.uleb128 0x3b
 10395 02c6 05       		.uleb128 0x5
 10396 02c7 49       		.uleb128 0x49
 10397 02c8 13       		.uleb128 0x13
 10398 02c9 1C       		.uleb128 0x1c
 10399 02ca 0B       		.uleb128 0xb
 10400 02cb 00       		.byte	0
 10401 02cc 00       		.byte	0
 10402 02cd 34       		.uleb128 0x34
 10403 02ce 2E       		.uleb128 0x2e
 10404 02cf 00       		.byte	0
 10405 02d0 3F       		.uleb128 0x3f
 10406 02d1 19       		.uleb128 0x19
 10407 02d2 03       		.uleb128 0x3
 10408 02d3 0E       		.uleb128 0xe
 10409 02d4 3A       		.uleb128 0x3a
 10410 02d5 0B       		.uleb128 0xb
 10411 02d6 3B       		.uleb128 0x3b
 10412 02d7 05       		.uleb128 0x5
 10413 02d8 27       		.uleb128 0x27
 10414 02d9 19       		.uleb128 0x19
 10415 02da 49       		.uleb128 0x49
 10416 02db 13       		.uleb128 0x13
 10417 02dc 11       		.uleb128 0x11
 10418 02dd 01       		.uleb128 0x1
 10419 02de 12       		.uleb128 0x12
 10420 02df 06       		.uleb128 0x6
 10421 02e0 40       		.uleb128 0x40
 10422 02e1 18       		.uleb128 0x18
 10423 02e2 9742     		.uleb128 0x2117
 10424 02e4 19       		.uleb128 0x19
 10425 02e5 00       		.byte	0
 10426 02e6 00       		.byte	0
 10427 02e7 35       		.uleb128 0x35
 10428 02e8 0B       		.uleb128 0xb
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 286


 10429 02e9 01       		.byte	0x1
 10430 02ea 55       		.uleb128 0x55
 10431 02eb 17       		.uleb128 0x17
 10432 02ec 00       		.byte	0
 10433 02ed 00       		.byte	0
 10434 02ee 36       		.uleb128 0x36
 10435 02ef 0B       		.uleb128 0xb
 10436 02f0 01       		.byte	0x1
 10437 02f1 55       		.uleb128 0x55
 10438 02f2 17       		.uleb128 0x17
 10439 02f3 01       		.uleb128 0x1
 10440 02f4 13       		.uleb128 0x13
 10441 02f5 00       		.byte	0
 10442 02f6 00       		.byte	0
 10443 02f7 37       		.uleb128 0x37
 10444 02f8 34       		.uleb128 0x34
 10445 02f9 00       		.byte	0
 10446 02fa 03       		.uleb128 0x3
 10447 02fb 0E       		.uleb128 0xe
 10448 02fc 3A       		.uleb128 0x3a
 10449 02fd 0B       		.uleb128 0xb
 10450 02fe 3B       		.uleb128 0x3b
 10451 02ff 05       		.uleb128 0x5
 10452 0300 49       		.uleb128 0x49
 10453 0301 13       		.uleb128 0x13
 10454 0302 1C       		.uleb128 0x1c
 10455 0303 0D       		.uleb128 0xd
 10456 0304 00       		.byte	0
 10457 0305 00       		.byte	0
 10458 0306 38       		.uleb128 0x38
 10459 0307 34       		.uleb128 0x34
 10460 0308 00       		.byte	0
 10461 0309 03       		.uleb128 0x3
 10462 030a 0E       		.uleb128 0xe
 10463 030b 3A       		.uleb128 0x3a
 10464 030c 0B       		.uleb128 0xb
 10465 030d 3B       		.uleb128 0x3b
 10466 030e 05       		.uleb128 0x5
 10467 030f 49       		.uleb128 0x49
 10468 0310 13       		.uleb128 0x13
 10469 0311 3F       		.uleb128 0x3f
 10470 0312 19       		.uleb128 0x19
 10471 0313 3C       		.uleb128 0x3c
 10472 0314 19       		.uleb128 0x19
 10473 0315 00       		.byte	0
 10474 0316 00       		.byte	0
 10475 0317 39       		.uleb128 0x39
 10476 0318 34       		.uleb128 0x34
 10477 0319 00       		.byte	0
 10478 031a 03       		.uleb128 0x3
 10479 031b 0E       		.uleb128 0xe
 10480 031c 3A       		.uleb128 0x3a
 10481 031d 0B       		.uleb128 0xb
 10482 031e 3B       		.uleb128 0x3b
 10483 031f 0B       		.uleb128 0xb
 10484 0320 49       		.uleb128 0x49
 10485 0321 13       		.uleb128 0x13
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 287


 10486 0322 3F       		.uleb128 0x3f
 10487 0323 19       		.uleb128 0x19
 10488 0324 3C       		.uleb128 0x3c
 10489 0325 19       		.uleb128 0x19
 10490 0326 00       		.byte	0
 10491 0327 00       		.byte	0
 10492 0328 3A       		.uleb128 0x3a
 10493 0329 34       		.uleb128 0x34
 10494 032a 00       		.byte	0
 10495 032b 03       		.uleb128 0x3
 10496 032c 0E       		.uleb128 0xe
 10497 032d 3A       		.uleb128 0x3a
 10498 032e 0B       		.uleb128 0xb
 10499 032f 3B       		.uleb128 0x3b
 10500 0330 05       		.uleb128 0x5
 10501 0331 49       		.uleb128 0x49
 10502 0332 13       		.uleb128 0x13
 10503 0333 3F       		.uleb128 0x3f
 10504 0334 19       		.uleb128 0x19
 10505 0335 02       		.uleb128 0x2
 10506 0336 18       		.uleb128 0x18
 10507 0337 00       		.byte	0
 10508 0338 00       		.byte	0
 10509 0339 3B       		.uleb128 0x3b
 10510 033a 2E       		.uleb128 0x2e
 10511 033b 00       		.byte	0
 10512 033c 3F       		.uleb128 0x3f
 10513 033d 19       		.uleb128 0x19
 10514 033e 3C       		.uleb128 0x3c
 10515 033f 19       		.uleb128 0x19
 10516 0340 6E       		.uleb128 0x6e
 10517 0341 0E       		.uleb128 0xe
 10518 0342 03       		.uleb128 0x3
 10519 0343 0E       		.uleb128 0xe
 10520 0344 3A       		.uleb128 0x3a
 10521 0345 0B       		.uleb128 0xb
 10522 0346 3B       		.uleb128 0x3b
 10523 0347 0B       		.uleb128 0xb
 10524 0348 00       		.byte	0
 10525 0349 00       		.byte	0
 10526 034a 3C       		.uleb128 0x3c
 10527 034b 2E       		.uleb128 0x2e
 10528 034c 00       		.byte	0
 10529 034d 3F       		.uleb128 0x3f
 10530 034e 19       		.uleb128 0x19
 10531 034f 3C       		.uleb128 0x3c
 10532 0350 19       		.uleb128 0x19
 10533 0351 6E       		.uleb128 0x6e
 10534 0352 0E       		.uleb128 0xe
 10535 0353 03       		.uleb128 0x3
 10536 0354 0E       		.uleb128 0xe
 10537 0355 3A       		.uleb128 0x3a
 10538 0356 0B       		.uleb128 0xb
 10539 0357 3B       		.uleb128 0x3b
 10540 0358 05       		.uleb128 0x5
 10541 0359 00       		.byte	0
 10542 035a 00       		.byte	0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 288


 10543 035b 00       		.byte	0
 10544              		.section	.debug_loc,"",%progbits
 10545              	.Ldebug_loc0:
 10546              	.LLST0:
 10547 0000 00000000 		.4byte	.LVL0
 10548 0004 36000000 		.4byte	.LVL2
 10549 0008 0100     		.2byte	0x1
 10550 000a 50       		.byte	0x50
 10551 000b 36000000 		.4byte	.LVL2
 10552 000f 38000000 		.4byte	.LVL3
 10553 0013 0400     		.2byte	0x4
 10554 0015 F3       		.byte	0xf3
 10555 0016 01       		.uleb128 0x1
 10556 0017 50       		.byte	0x50
 10557 0018 9F       		.byte	0x9f
 10558 0019 38000000 		.4byte	.LVL3
 10559 001d 3A000000 		.4byte	.LVL4
 10560 0021 0100     		.2byte	0x1
 10561 0023 50       		.byte	0x50
 10562 0024 3A000000 		.4byte	.LVL4
 10563 0028 3C000000 		.4byte	.LVL5
 10564 002c 0100     		.2byte	0x1
 10565 002e 52       		.byte	0x52
 10566 002f 3C000000 		.4byte	.LVL5
 10567 0033 3E000000 		.4byte	.LVL6
 10568 0037 0100     		.2byte	0x1
 10569 0039 50       		.byte	0x50
 10570 003a 3E000000 		.4byte	.LVL6
 10571 003e 40000000 		.4byte	.LVL7
 10572 0042 0400     		.2byte	0x4
 10573 0044 F3       		.byte	0xf3
 10574 0045 01       		.uleb128 0x1
 10575 0046 50       		.byte	0x50
 10576 0047 9F       		.byte	0x9f
 10577 0048 40000000 		.4byte	.LVL7
 10578 004c 42000000 		.4byte	.LVL8
 10579 0050 0100     		.2byte	0x1
 10580 0052 50       		.byte	0x50
 10581 0053 42000000 		.4byte	.LVL8
 10582 0057 4C000000 		.4byte	.LFE605
 10583 005b 0400     		.2byte	0x4
 10584 005d F3       		.byte	0xf3
 10585 005e 01       		.uleb128 0x1
 10586 005f 50       		.byte	0x50
 10587 0060 9F       		.byte	0x9f
 10588 0061 00000000 		.4byte	0
 10589 0065 00000000 		.4byte	0
 10590              	.LLST1:
 10591 0069 00000000 		.4byte	.LVL0
 10592 006d 42000000 		.4byte	.LVL8
 10593 0071 0200     		.2byte	0x2
 10594 0073 30       		.byte	0x30
 10595 0074 9F       		.byte	0x9f
 10596 0075 42000000 		.4byte	.LVL8
 10597 0079 4C000000 		.4byte	.LFE605
 10598 007d 0100     		.2byte	0x1
 10599 007f 50       		.byte	0x50
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 289


 10600 0080 00000000 		.4byte	0
 10601 0084 00000000 		.4byte	0
 10602              	.LLST2:
 10603 0088 00000000 		.4byte	.LVL0
 10604 008c 36000000 		.4byte	.LVL2
 10605 0090 0100     		.2byte	0x1
 10606 0092 50       		.byte	0x50
 10607 0093 36000000 		.4byte	.LVL2
 10608 0097 38000000 		.4byte	.LVL3
 10609 009b 0400     		.2byte	0x4
 10610 009d F3       		.byte	0xf3
 10611 009e 01       		.uleb128 0x1
 10612 009f 50       		.byte	0x50
 10613 00a0 9F       		.byte	0x9f
 10614 00a1 38000000 		.4byte	.LVL3
 10615 00a5 3A000000 		.4byte	.LVL4
 10616 00a9 0100     		.2byte	0x1
 10617 00ab 50       		.byte	0x50
 10618 00ac 3A000000 		.4byte	.LVL4
 10619 00b0 3C000000 		.4byte	.LVL5
 10620 00b4 0100     		.2byte	0x1
 10621 00b6 52       		.byte	0x52
 10622 00b7 3C000000 		.4byte	.LVL5
 10623 00bb 3E000000 		.4byte	.LVL6
 10624 00bf 0100     		.2byte	0x1
 10625 00c1 50       		.byte	0x50
 10626 00c2 3E000000 		.4byte	.LVL6
 10627 00c6 40000000 		.4byte	.LVL7
 10628 00ca 0400     		.2byte	0x4
 10629 00cc F3       		.byte	0xf3
 10630 00cd 01       		.uleb128 0x1
 10631 00ce 50       		.byte	0x50
 10632 00cf 9F       		.byte	0x9f
 10633 00d0 40000000 		.4byte	.LVL7
 10634 00d4 42000000 		.4byte	.LVL8
 10635 00d8 0100     		.2byte	0x1
 10636 00da 50       		.byte	0x50
 10637 00db 42000000 		.4byte	.LVL8
 10638 00df 4C000000 		.4byte	.LFE605
 10639 00e3 0400     		.2byte	0x4
 10640 00e5 F3       		.byte	0xf3
 10641 00e6 01       		.uleb128 0x1
 10642 00e7 50       		.byte	0x50
 10643 00e8 9F       		.byte	0x9f
 10644 00e9 00000000 		.4byte	0
 10645 00ed 00000000 		.4byte	0
 10646              	.LLST3:
 10647 00f1 22000000 		.4byte	.LVL9
 10648 00f5 24000000 		.4byte	.LVL10
 10649 00f9 0100     		.2byte	0x1
 10650 00fb 52       		.byte	0x52
 10651 00fc 00000000 		.4byte	0
 10652 0100 00000000 		.4byte	0
 10653              	.LLST4:
 10654 0104 00000000 		.4byte	.LVL11
 10655 0108 06000000 		.4byte	.LVL12
 10656 010c 0100     		.2byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 290


 10657 010e 50       		.byte	0x50
 10658 010f 06000000 		.4byte	.LVL12
 10659 0113 12000000 		.4byte	.LFE632
 10660 0117 0100     		.2byte	0x1
 10661 0119 54       		.byte	0x54
 10662 011a 00000000 		.4byte	0
 10663 011e 00000000 		.4byte	0
 10664              	.LLST5:
 10665 0122 00000000 		.4byte	.LVL15
 10666 0126 18000000 		.4byte	.LVL18
 10667 012a 0100     		.2byte	0x1
 10668 012c 50       		.byte	0x50
 10669 012d 18000000 		.4byte	.LVL18
 10670 0131 9E000000 		.4byte	.LFE596
 10671 0135 0100     		.2byte	0x1
 10672 0137 5A       		.byte	0x5a
 10673 0138 00000000 		.4byte	0
 10674 013c 00000000 		.4byte	0
 10675              	.LLST6:
 10676 0140 00000000 		.4byte	.LVL15
 10677 0144 16000000 		.4byte	.LVL17
 10678 0148 0100     		.2byte	0x1
 10679 014a 51       		.byte	0x51
 10680 014b 16000000 		.4byte	.LVL17
 10681 014f 9E000000 		.4byte	.LFE596
 10682 0153 0100     		.2byte	0x1
 10683 0155 59       		.byte	0x59
 10684 0156 00000000 		.4byte	0
 10685 015a 00000000 		.4byte	0
 10686              	.LLST7:
 10687 015e 00000000 		.4byte	.LVL15
 10688 0162 14000000 		.4byte	.LVL16
 10689 0166 0100     		.2byte	0x1
 10690 0168 52       		.byte	0x52
 10691 0169 14000000 		.4byte	.LVL16
 10692 016d 28000000 		.4byte	.LVL20
 10693 0171 0100     		.2byte	0x1
 10694 0173 55       		.byte	0x55
 10695 0174 28000000 		.4byte	.LVL20
 10696 0178 30000000 		.4byte	.LVL22
 10697 017c 0700     		.2byte	0x7
 10698 017e 72       		.byte	0x72
 10699 017f 81808080 		.sleb128 -1073741823
 10699      7C
 10700 0184 9F       		.byte	0x9f
 10701 0185 30000000 		.4byte	.LVL22
 10702 0189 9E000000 		.4byte	.LFE596
 10703 018d 0400     		.2byte	0x4
 10704 018f F3       		.byte	0xf3
 10705 0190 01       		.uleb128 0x1
 10706 0191 52       		.byte	0x52
 10707 0192 9F       		.byte	0x9f
 10708 0193 00000000 		.4byte	0
 10709 0197 00000000 		.4byte	0
 10710              	.LLST8:
 10711 019b 00000000 		.4byte	.LVL15
 10712 019f 1B000000 		.4byte	.LVL19-1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 291


 10713 01a3 0100     		.2byte	0x1
 10714 01a5 53       		.byte	0x53
 10715 01a6 1B000000 		.4byte	.LVL19-1
 10716 01aa 9E000000 		.4byte	.LFE596
 10717 01ae 0100     		.2byte	0x1
 10718 01b0 58       		.byte	0x58
 10719 01b1 00000000 		.4byte	0
 10720 01b5 00000000 		.4byte	0
 10721              	.LLST9:
 10722 01b9 00000000 		.4byte	.LVL15
 10723 01bd 52000000 		.4byte	.LVL25
 10724 01c1 0200     		.2byte	0x2
 10725 01c3 91       		.byte	0x91
 10726 01c4 00       		.sleb128 0
 10727 01c5 52000000 		.4byte	.LVL25
 10728 01c9 9E000000 		.4byte	.LFE596
 10729 01cd 0100     		.2byte	0x1
 10730 01cf 57       		.byte	0x57
 10731 01d0 00000000 		.4byte	0
 10732 01d4 00000000 		.4byte	0
 10733              	.LLST10:
 10734 01d8 30000000 		.4byte	.LVL22
 10735 01dc 48000000 		.4byte	.LVL24
 10736 01e0 0100     		.2byte	0x1
 10737 01e2 53       		.byte	0x53
 10738 01e3 6C000000 		.4byte	.LVL28
 10739 01e7 70000000 		.4byte	.LVL29
 10740 01eb 0200     		.2byte	0x2
 10741 01ed 30       		.byte	0x30
 10742 01ee 9F       		.byte	0x9f
 10743 01ef 70000000 		.4byte	.LVL29
 10744 01f3 84000000 		.4byte	.LVL31
 10745 01f7 0100     		.2byte	0x1
 10746 01f9 53       		.byte	0x53
 10747 01fa 00000000 		.4byte	0
 10748 01fe 00000000 		.4byte	0
 10749              	.LLST11:
 10750 0202 02000000 		.4byte	.LVL33
 10751 0206 06000000 		.4byte	.LVL34
 10752 020a 0200     		.2byte	0x2
 10753 020c 30       		.byte	0x30
 10754 020d 9F       		.byte	0x9f
 10755 020e 06000000 		.4byte	.LVL34
 10756 0212 1C000000 		.4byte	.LVL37
 10757 0216 0100     		.2byte	0x1
 10758 0218 54       		.byte	0x54
 10759 0219 00000000 		.4byte	0
 10760 021d 00000000 		.4byte	0
 10761              	.LLST12:
 10762 0221 00000000 		.4byte	.LVL43
 10763 0225 07000000 		.4byte	.LVL44-1
 10764 0229 0100     		.2byte	0x1
 10765 022b 50       		.byte	0x50
 10766 022c 07000000 		.4byte	.LVL44-1
 10767 0230 A2000000 		.4byte	.LVL48
 10768 0234 0100     		.2byte	0x1
 10769 0236 54       		.byte	0x54
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 292


 10770 0237 A2000000 		.4byte	.LVL48
 10771 023b AC000000 		.4byte	.LFE597
 10772 023f 0400     		.2byte	0x4
 10773 0241 F3       		.byte	0xf3
 10774 0242 01       		.uleb128 0x1
 10775 0243 50       		.byte	0x50
 10776 0244 9F       		.byte	0x9f
 10777 0245 00000000 		.4byte	0
 10778 0249 00000000 		.4byte	0
 10779              	.LLST13:
 10780 024d 10000000 		.4byte	.LVL50
 10781 0251 34000000 		.4byte	.LVL53
 10782 0255 0100     		.2byte	0x1
 10783 0257 55       		.byte	0x55
 10784 0258 00000000 		.4byte	0
 10785 025c 00000000 		.4byte	0
 10786              	.LLST14:
 10787 0260 00000000 		.4byte	.LVL54
 10788 0264 10000000 		.4byte	.LVL56
 10789 0268 0100     		.2byte	0x1
 10790 026a 50       		.byte	0x50
 10791 026b 10000000 		.4byte	.LVL56
 10792 026f 2E000000 		.4byte	.LVL60
 10793 0273 0100     		.2byte	0x1
 10794 0275 54       		.byte	0x54
 10795 0276 2E000000 		.4byte	.LVL60
 10796 027a 68000000 		.4byte	.LFE643
 10797 027e 0400     		.2byte	0x4
 10798 0280 F3       		.byte	0xf3
 10799 0281 01       		.uleb128 0x1
 10800 0282 50       		.byte	0x50
 10801 0283 9F       		.byte	0x9f
 10802 0284 00000000 		.4byte	0
 10803 0288 00000000 		.4byte	0
 10804              	.LLST15:
 10805 028c 00000000 		.4byte	.LVL54
 10806 0290 15000000 		.4byte	.LVL57-1
 10807 0294 0100     		.2byte	0x1
 10808 0296 51       		.byte	0x51
 10809 0297 15000000 		.4byte	.LVL57-1
 10810 029b 64000000 		.4byte	.LVL65
 10811 029f 0100     		.2byte	0x1
 10812 02a1 56       		.byte	0x56
 10813 02a2 64000000 		.4byte	.LVL65
 10814 02a6 68000000 		.4byte	.LFE643
 10815 02aa 0400     		.2byte	0x4
 10816 02ac F3       		.byte	0xf3
 10817 02ad 01       		.uleb128 0x1
 10818 02ae 51       		.byte	0x51
 10819 02af 9F       		.byte	0x9f
 10820 02b0 00000000 		.4byte	0
 10821 02b4 00000000 		.4byte	0
 10822              	.LLST16:
 10823 02b8 2E000000 		.4byte	.LVL60
 10824 02bc 64000000 		.4byte	.LVL65
 10825 02c0 0100     		.2byte	0x1
 10826 02c2 54       		.byte	0x54
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 293


 10827 02c3 00000000 		.4byte	0
 10828 02c7 00000000 		.4byte	0
 10829              	.LLST17:
 10830 02cb 0C000000 		.4byte	.LVL55
 10831 02cf 4E000000 		.4byte	.LVL63
 10832 02d3 0100     		.2byte	0x1
 10833 02d5 55       		.byte	0x55
 10834 02d6 00000000 		.4byte	0
 10835 02da 00000000 		.4byte	0
 10836              	.LLST18:
 10837 02de 00000000 		.4byte	.LVL66
 10838 02e2 02000000 		.4byte	.LVL67
 10839 02e6 0100     		.2byte	0x1
 10840 02e8 50       		.byte	0x50
 10841 02e9 02000000 		.4byte	.LVL67
 10842 02ed 2C000000 		.4byte	.LFE627
 10843 02f1 0400     		.2byte	0x4
 10844 02f3 F3       		.byte	0xf3
 10845 02f4 01       		.uleb128 0x1
 10846 02f5 50       		.byte	0x50
 10847 02f6 9F       		.byte	0x9f
 10848 02f7 00000000 		.4byte	0
 10849 02fb 00000000 		.4byte	0
 10850              	.LLST19:
 10851 02ff 00000000 		.4byte	.LVL70
 10852 0303 10000000 		.4byte	.LVL71
 10853 0307 0100     		.2byte	0x1
 10854 0309 50       		.byte	0x50
 10855 030a 10000000 		.4byte	.LVL71
 10856 030e 62000000 		.4byte	.LFE595
 10857 0312 0100     		.2byte	0x1
 10858 0314 56       		.byte	0x56
 10859 0315 00000000 		.4byte	0
 10860 0319 00000000 		.4byte	0
 10861              	.LLST20:
 10862 031d 00000000 		.4byte	.LVL70
 10863 0321 13000000 		.4byte	.LVL72-1
 10864 0325 0100     		.2byte	0x1
 10865 0327 51       		.byte	0x51
 10866 0328 13000000 		.4byte	.LVL72-1
 10867 032c 62000000 		.4byte	.LFE595
 10868 0330 0100     		.2byte	0x1
 10869 0332 57       		.byte	0x57
 10870 0333 00000000 		.4byte	0
 10871 0337 00000000 		.4byte	0
 10872              	.LLST21:
 10873 033b 00000000 		.4byte	.LVL70
 10874 033f 13000000 		.4byte	.LVL72-1
 10875 0343 0100     		.2byte	0x1
 10876 0345 52       		.byte	0x52
 10877 0346 13000000 		.4byte	.LVL72-1
 10878 034a 62000000 		.4byte	.LFE595
 10879 034e 0400     		.2byte	0x4
 10880 0350 F3       		.byte	0xf3
 10881 0351 01       		.uleb128 0x1
 10882 0352 52       		.byte	0x52
 10883 0353 9F       		.byte	0x9f
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 294


 10884 0354 00000000 		.4byte	0
 10885 0358 00000000 		.4byte	0
 10886              	.LLST22:
 10887 035c 00000000 		.4byte	.LVL70
 10888 0360 13000000 		.4byte	.LVL72-1
 10889 0364 0100     		.2byte	0x1
 10890 0366 53       		.byte	0x53
 10891 0367 13000000 		.4byte	.LVL72-1
 10892 036b 62000000 		.4byte	.LFE595
 10893 036f 0100     		.2byte	0x1
 10894 0371 58       		.byte	0x58
 10895 0372 00000000 		.4byte	0
 10896 0376 00000000 		.4byte	0
 10897              	.LLST23:
 10898 037a 1E000000 		.4byte	.LVL74
 10899 037e 2A000000 		.4byte	.LVL75
 10900 0382 0100     		.2byte	0x1
 10901 0384 50       		.byte	0x50
 10902 0385 2A000000 		.4byte	.LVL75
 10903 0389 30000000 		.4byte	.LVL77
 10904 038d 0100     		.2byte	0x1
 10905 038f 54       		.byte	0x54
 10906 0390 32000000 		.4byte	.LVL78
 10907 0394 62000000 		.4byte	.LFE595
 10908 0398 0100     		.2byte	0x1
 10909 039a 54       		.byte	0x54
 10910 039b 00000000 		.4byte	0
 10911 039f 00000000 		.4byte	0
 10912              	.LLST24:
 10913 03a3 54000000 		.4byte	.LVL80
 10914 03a7 58000000 		.4byte	.LVL81
 10915 03ab 0200     		.2byte	0x2
 10916 03ad 31       		.byte	0x31
 10917 03ae 9F       		.byte	0x9f
 10918 03af 5C000000 		.4byte	.LVL82
 10919 03b3 62000000 		.4byte	.LFE595
 10920 03b7 0100     		.2byte	0x1
 10921 03b9 50       		.byte	0x50
 10922 03ba 00000000 		.4byte	0
 10923 03be 00000000 		.4byte	0
 10924              	.LLST25:
 10925 03c2 14000000 		.4byte	.LVL72
 10926 03c6 1A000000 		.4byte	.LVL73
 10927 03ca 0100     		.2byte	0x1
 10928 03cc 50       		.byte	0x50
 10929 03cd 1A000000 		.4byte	.LVL73
 10930 03d1 30000000 		.4byte	.LVL77
 10931 03d5 0100     		.2byte	0x1
 10932 03d7 59       		.byte	0x59
 10933 03d8 30000000 		.4byte	.LVL77
 10934 03dc 32000000 		.4byte	.LVL78
 10935 03e0 0100     		.2byte	0x1
 10936 03e2 50       		.byte	0x50
 10937 03e3 00000000 		.4byte	0
 10938 03e7 00000000 		.4byte	0
 10939              	.LLST26:
 10940 03eb 00000000 		.4byte	.LVL83
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 295


 10941 03ef 07000000 		.4byte	.LVL84-1
 10942 03f3 0100     		.2byte	0x1
 10943 03f5 50       		.byte	0x50
 10944 03f6 07000000 		.4byte	.LVL84-1
 10945 03fa 10000000 		.4byte	.LVL85
 10946 03fe 0100     		.2byte	0x1
 10947 0400 54       		.byte	0x54
 10948 0401 00000000 		.4byte	0
 10949 0405 00000000 		.4byte	0
 10950              	.LLST27:
 10951 0409 10000000 		.4byte	.LVL85
 10952 040d A8000000 		.4byte	.LVL93
 10953 0411 0100     		.2byte	0x1
 10954 0413 54       		.byte	0x54
 10955 0414 00000000 		.4byte	0
 10956 0418 00000000 		.4byte	0
 10957              	.LLST28:
 10958 041c 00000000 		.4byte	.LVL94
 10959 0420 07000000 		.4byte	.LVL95-1
 10960 0424 0100     		.2byte	0x1
 10961 0426 50       		.byte	0x50
 10962 0427 07000000 		.4byte	.LVL95-1
 10963 042b 10000000 		.4byte	.LVL96
 10964 042f 0100     		.2byte	0x1
 10965 0431 54       		.byte	0x54
 10966 0432 00000000 		.4byte	0
 10967 0436 00000000 		.4byte	0
 10968              	.LLST29:
 10969 043a 10000000 		.4byte	.LVL96
 10970 043e 12000000 		.4byte	.LVL97
 10971 0442 0100     		.2byte	0x1
 10972 0444 54       		.byte	0x54
 10973 0445 00000000 		.4byte	0
 10974 0449 00000000 		.4byte	0
 10975              	.LLST30:
 10976 044d 12000000 		.4byte	.LVL97
 10977 0451 1A000000 		.4byte	.LVL99
 10978 0455 0100     		.2byte	0x1
 10979 0457 54       		.byte	0x54
 10980 0458 1A000000 		.4byte	.LVL99
 10981 045c 20000000 		.4byte	.LFE601
 10982 0460 0100     		.2byte	0x1
 10983 0462 50       		.byte	0x50
 10984 0463 00000000 		.4byte	0
 10985 0467 00000000 		.4byte	0
 10986              	.LLST31:
 10987 046b 00000000 		.4byte	.LVL100
 10988 046f 07000000 		.4byte	.LVL101-1
 10989 0473 0100     		.2byte	0x1
 10990 0475 50       		.byte	0x50
 10991 0476 07000000 		.4byte	.LVL101-1
 10992 047a 24000000 		.4byte	.LVL102
 10993 047e 0100     		.2byte	0x1
 10994 0480 54       		.byte	0x54
 10995 0481 00000000 		.4byte	0
 10996 0485 00000000 		.4byte	0
 10997              	.LLST32:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 296


 10998 0489 24000000 		.4byte	.LVL102
 10999 048d 2C000000 		.4byte	.LVL105
 11000 0491 0100     		.2byte	0x1
 11001 0493 54       		.byte	0x54
 11002 0494 00000000 		.4byte	0
 11003 0498 00000000 		.4byte	0
 11004              	.LLST33:
 11005 049c 26000000 		.4byte	.LVL103
 11006 04a0 2A000000 		.4byte	.LVL104
 11007 04a4 0100     		.2byte	0x1
 11008 04a6 53       		.byte	0x53
 11009 04a7 00000000 		.4byte	0
 11010 04ab 00000000 		.4byte	0
 11011              	.LLST34:
 11012 04af 00000000 		.4byte	.LVL106
 11013 04b3 25000000 		.4byte	.LVL109-1
 11014 04b7 0100     		.2byte	0x1
 11015 04b9 50       		.byte	0x50
 11016 04ba 25000000 		.4byte	.LVL109-1
 11017 04be 2E000000 		.4byte	.LVL110
 11018 04c2 0100     		.2byte	0x1
 11019 04c4 54       		.byte	0x54
 11020 04c5 00000000 		.4byte	0
 11021 04c9 00000000 		.4byte	0
 11022              	.LLST35:
 11023 04cd 00000000 		.4byte	.LVL106
 11024 04d1 22000000 		.4byte	.LVL108
 11025 04d5 0100     		.2byte	0x1
 11026 04d7 51       		.byte	0x51
 11027 04d8 22000000 		.4byte	.LVL108
 11028 04dc 74000000 		.4byte	.LVL113
 11029 04e0 0100     		.2byte	0x1
 11030 04e2 55       		.byte	0x55
 11031 04e3 74000000 		.4byte	.LVL113
 11032 04e7 95000000 		.4byte	.LVL115-1
 11033 04eb 0200     		.2byte	0x2
 11034 04ed 74       		.byte	0x74
 11035 04ee 2C       		.sleb128 44
 11036 04ef 00000000 		.4byte	0
 11037 04f3 00000000 		.4byte	0
 11038              	.LLST36:
 11039 04f7 2E000000 		.4byte	.LVL110
 11040 04fb D0000000 		.4byte	.LVL119
 11041 04ff 0100     		.2byte	0x1
 11042 0501 54       		.byte	0x54
 11043 0502 00000000 		.4byte	0
 11044 0506 00000000 		.4byte	0
 11045              	.LLST37:
 11046 050a 30000000 		.4byte	.LVL111
 11047 050e 7C000000 		.4byte	.LVL114
 11048 0512 0100     		.2byte	0x1
 11049 0514 53       		.byte	0x53
 11050 0515 00000000 		.4byte	0
 11051 0519 00000000 		.4byte	0
 11052              	.LLST38:
 11053 051d 68000000 		.4byte	.LVL112
 11054 0521 7C000000 		.4byte	.LVL114
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 297


 11055 0525 0100     		.2byte	0x1
 11056 0527 53       		.byte	0x53
 11057 0528 00000000 		.4byte	0
 11058 052c 00000000 		.4byte	0
 11059              	.LLST39:
 11060 0530 00000000 		.4byte	.LVL106
 11061 0534 68000000 		.4byte	.LVL112
 11062 0538 0200     		.2byte	0x2
 11063 053a 30       		.byte	0x30
 11064 053b 9F       		.byte	0x9f
 11065 053c 68000000 		.4byte	.LVL112
 11066 0540 CA000000 		.4byte	.LVL117
 11067 0544 0100     		.2byte	0x1
 11068 0546 56       		.byte	0x56
 11069 0547 00000000 		.4byte	0
 11070 054b 00000000 		.4byte	0
 11071              	.LLST40:
 11072 054f 00000000 		.4byte	.LVL120
 11073 0553 27000000 		.4byte	.LVL122-1
 11074 0557 0100     		.2byte	0x1
 11075 0559 50       		.byte	0x50
 11076 055a 27000000 		.4byte	.LVL122-1
 11077 055e 80000000 		.4byte	.LVL127
 11078 0562 0100     		.2byte	0x1
 11079 0564 54       		.byte	0x54
 11080 0565 80000000 		.4byte	.LVL127
 11081 0569 88000000 		.4byte	.LFE606
 11082 056d 0400     		.2byte	0x4
 11083 056f F3       		.byte	0xf3
 11084 0570 01       		.uleb128 0x1
 11085 0571 50       		.byte	0x50
 11086 0572 9F       		.byte	0x9f
 11087 0573 00000000 		.4byte	0
 11088 0577 00000000 		.4byte	0
 11089              	.LLST41:
 11090 057b 00000000 		.4byte	.LVL120
 11091 057f 27000000 		.4byte	.LVL122-1
 11092 0583 0100     		.2byte	0x1
 11093 0585 50       		.byte	0x50
 11094 0586 27000000 		.4byte	.LVL122-1
 11095 058a 80000000 		.4byte	.LVL127
 11096 058e 0100     		.2byte	0x1
 11097 0590 54       		.byte	0x54
 11098 0591 80000000 		.4byte	.LVL127
 11099 0595 88000000 		.4byte	.LFE606
 11100 0599 0400     		.2byte	0x4
 11101 059b F3       		.byte	0xf3
 11102 059c 01       		.uleb128 0x1
 11103 059d 50       		.byte	0x50
 11104 059e 9F       		.byte	0x9f
 11105 059f 00000000 		.4byte	0
 11106 05a3 00000000 		.4byte	0
 11107              	.LLST42:
 11108 05a7 00000000 		.4byte	.LVL128
 11109 05ab 1B000000 		.4byte	.LVL131-1
 11110 05af 0100     		.2byte	0x1
 11111 05b1 50       		.byte	0x50
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 298


 11112 05b2 1B000000 		.4byte	.LVL131-1
 11113 05b6 98000000 		.4byte	.LVL140
 11114 05ba 0100     		.2byte	0x1
 11115 05bc 54       		.byte	0x54
 11116 05bd 98000000 		.4byte	.LVL140
 11117 05c1 A4000000 		.4byte	.LFE607
 11118 05c5 0400     		.2byte	0x4
 11119 05c7 F3       		.byte	0xf3
 11120 05c8 01       		.uleb128 0x1
 11121 05c9 50       		.byte	0x50
 11122 05ca 9F       		.byte	0x9f
 11123 05cb 00000000 		.4byte	0
 11124 05cf 00000000 		.4byte	0
 11125              	.LLST43:
 11126 05d3 02000000 		.4byte	.LVL129
 11127 05d7 54000000 		.4byte	.LVL133
 11128 05db 0200     		.2byte	0x2
 11129 05dd 30       		.byte	0x30
 11130 05de 9F       		.byte	0x9f
 11131 05df 54000000 		.4byte	.LVL133
 11132 05e3 80000000 		.4byte	.LVL136
 11133 05e7 0100     		.2byte	0x1
 11134 05e9 55       		.byte	0x55
 11135 05ea 80000000 		.4byte	.LVL136
 11136 05ee 90000000 		.4byte	.LVL138
 11137 05f2 0200     		.2byte	0x2
 11138 05f4 30       		.byte	0x30
 11139 05f5 9F       		.byte	0x9f
 11140 05f6 90000000 		.4byte	.LVL138
 11141 05fa 98000000 		.4byte	.LVL140
 11142 05fe 0100     		.2byte	0x1
 11143 0600 55       		.byte	0x55
 11144 0601 98000000 		.4byte	.LVL140
 11145 0605 A4000000 		.4byte	.LFE607
 11146 0609 0100     		.2byte	0x1
 11147 060b 50       		.byte	0x50
 11148 060c 00000000 		.4byte	0
 11149 0610 00000000 		.4byte	0
 11150              	.LLST44:
 11151 0614 02000000 		.4byte	.LVL129
 11152 0618 1B000000 		.4byte	.LVL131-1
 11153 061c 0100     		.2byte	0x1
 11154 061e 50       		.byte	0x50
 11155 061f 1B000000 		.4byte	.LVL131-1
 11156 0623 98000000 		.4byte	.LVL140
 11157 0627 0100     		.2byte	0x1
 11158 0629 54       		.byte	0x54
 11159 062a 98000000 		.4byte	.LVL140
 11160 062e A4000000 		.4byte	.LFE607
 11161 0632 0400     		.2byte	0x4
 11162 0634 F3       		.byte	0xf3
 11163 0635 01       		.uleb128 0x1
 11164 0636 50       		.byte	0x50
 11165 0637 9F       		.byte	0x9f
 11166 0638 00000000 		.4byte	0
 11167 063c 00000000 		.4byte	0
 11168              	.LLST45:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 299


 11169 0640 90000000 		.4byte	.LVL138
 11170 0644 94000000 		.4byte	.LVL139
 11171 0648 0100     		.2byte	0x1
 11172 064a 57       		.byte	0x57
 11173 064b 00000000 		.4byte	0
 11174 064f 00000000 		.4byte	0
 11175              	.LLST46:
 11176 0653 16000000 		.4byte	.LVL141
 11177 0657 1D000000 		.4byte	.LVL142-1
 11178 065b 0100     		.2byte	0x1
 11179 065d 50       		.byte	0x50
 11180 065e 1E000000 		.4byte	.LVL142
 11181 0662 49000000 		.4byte	.LVL143-1
 11182 0666 0100     		.2byte	0x1
 11183 0668 50       		.byte	0x50
 11184 0669 4C000000 		.4byte	.LVL144
 11185 066d 64000000 		.4byte	.LVL146
 11186 0671 0100     		.2byte	0x1
 11187 0673 50       		.byte	0x50
 11188 0674 00000000 		.4byte	0
 11189 0678 00000000 		.4byte	0
 11190              	.LLST47:
 11191 067c 00000000 		.4byte	.LVL151
 11192 0680 0A000000 		.4byte	.LVL152
 11193 0684 0100     		.2byte	0x1
 11194 0686 50       		.byte	0x50
 11195 0687 00000000 		.4byte	0
 11196 068b 00000000 		.4byte	0
 11197              	.LLST48:
 11198 068f 0A000000 		.4byte	.LVL152
 11199 0693 1C000000 		.4byte	.LVL153
 11200 0697 0100     		.2byte	0x1
 11201 0699 53       		.byte	0x53
 11202 069a 1E000000 		.4byte	.LVL154
 11203 069e 28000000 		.4byte	.LFE615
 11204 06a2 0100     		.2byte	0x1
 11205 06a4 53       		.byte	0x53
 11206 06a5 00000000 		.4byte	0
 11207 06a9 00000000 		.4byte	0
 11208              	.LLST49:
 11209 06ad 5C000000 		.4byte	.LVL162
 11210 06b1 60000000 		.4byte	.LVL164
 11211 06b5 0100     		.2byte	0x1
 11212 06b7 55       		.byte	0x55
 11213 06b8 84000000 		.4byte	.LVL166
 11214 06bc DA000000 		.4byte	.LVL171
 11215 06c0 0100     		.2byte	0x1
 11216 06c2 55       		.byte	0x55
 11217 06c3 00000000 		.4byte	0
 11218 06c7 00000000 		.4byte	0
 11219              	.LLST50:
 11220 06cb 86000000 		.4byte	.LVL167
 11221 06cf 99000000 		.4byte	.LVL168-1
 11222 06d3 0100     		.2byte	0x1
 11223 06d5 53       		.byte	0x53
 11224 06d6 00000000 		.4byte	0
 11225 06da 00000000 		.4byte	0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 300


 11226              	.LLST51:
 11227 06de 04000000 		.4byte	.LVL155
 11228 06e2 5C000000 		.4byte	.LVL162
 11229 06e6 0200     		.2byte	0x2
 11230 06e8 30       		.byte	0x30
 11231 06e9 9F       		.byte	0x9f
 11232 06ea 5C000000 		.4byte	.LVL162
 11233 06ee 5E000000 		.4byte	.LVL163
 11234 06f2 0100     		.2byte	0x1
 11235 06f4 56       		.byte	0x56
 11236 06f5 60000000 		.4byte	.LVL164
 11237 06f9 62000000 		.4byte	.LVL165
 11238 06fd 0200     		.2byte	0x2
 11239 06ff 30       		.byte	0x30
 11240 0700 9F       		.byte	0x9f
 11241 0701 62000000 		.4byte	.LVL165
 11242 0705 DA000000 		.4byte	.LVL171
 11243 0709 0100     		.2byte	0x1
 11244 070b 56       		.byte	0x56
 11245 070c DA000000 		.4byte	.LVL171
 11246 0710 E8000000 		.4byte	.LVL172
 11247 0714 0200     		.2byte	0x2
 11248 0716 30       		.byte	0x30
 11249 0717 9F       		.byte	0x9f
 11250 0718 E8000000 		.4byte	.LVL172
 11251 071c F8000000 		.4byte	.LVL174
 11252 0720 0100     		.2byte	0x1
 11253 0722 56       		.byte	0x56
 11254 0723 F8000000 		.4byte	.LVL174
 11255 0727 FC000000 		.4byte	.LFE616
 11256 072b 0100     		.2byte	0x1
 11257 072d 50       		.byte	0x50
 11258 072e 00000000 		.4byte	0
 11259 0732 00000000 		.4byte	0
 11260              	.LLST52:
 11261 0736 16000000 		.4byte	.LVL156
 11262 073a DA000000 		.4byte	.LVL171
 11263 073e 0100     		.2byte	0x1
 11264 0740 54       		.byte	0x54
 11265 0741 00000000 		.4byte	0
 11266 0745 00000000 		.4byte	0
 11267              	.LLST53:
 11268 0749 38000000 		.4byte	.LVL158
 11269 074d 46000000 		.4byte	.LVL159
 11270 0751 0100     		.2byte	0x1
 11271 0753 52       		.byte	0x52
 11272 0754 46000000 		.4byte	.LVL159
 11273 0758 4C000000 		.4byte	.LVL160
 11274 075c 0500     		.2byte	0x5
 11275 075e 03       		.byte	0x3
 11276 075f FC010000 		.4byte	pxOverflowDelayedTaskList
 11277 0763 00000000 		.4byte	0
 11278 0767 00000000 		.4byte	0
 11279              	.LLST54:
 11280 076b 00000000 		.4byte	.LVL175
 11281 076f 40000000 		.4byte	.LVL178
 11282 0773 0200     		.2byte	0x2
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 301


 11283 0775 30       		.byte	0x30
 11284 0776 9F       		.byte	0x9f
 11285 0777 40000000 		.4byte	.LVL178
 11286 077b 8C000000 		.4byte	.LVL183
 11287 077f 0100     		.2byte	0x1
 11288 0781 54       		.byte	0x54
 11289 0782 8C000000 		.4byte	.LVL183
 11290 0786 8E000000 		.4byte	.LVL184
 11291 078a 0200     		.2byte	0x2
 11292 078c 30       		.byte	0x30
 11293 078d 9F       		.byte	0x9f
 11294 078e 8E000000 		.4byte	.LVL184
 11295 0792 A2000000 		.4byte	.LVL186
 11296 0796 0100     		.2byte	0x1
 11297 0798 54       		.byte	0x54
 11298 0799 DA000000 		.4byte	.LVL192
 11299 079d DE000000 		.4byte	.LVL193
 11300 07a1 0200     		.2byte	0x2
 11301 07a3 30       		.byte	0x30
 11302 07a4 9F       		.byte	0x9f
 11303 07a5 00000000 		.4byte	0
 11304 07a9 00000000 		.4byte	0
 11305              	.LLST55:
 11306 07ad 00000000 		.4byte	.LVL175
 11307 07b1 C6000000 		.4byte	.LVL190
 11308 07b5 0200     		.2byte	0x2
 11309 07b7 30       		.byte	0x30
 11310 07b8 9F       		.byte	0x9f
 11311 07b9 C6000000 		.4byte	.LVL190
 11312 07bd DA000000 		.4byte	.LVL192
 11313 07c1 0200     		.2byte	0x2
 11314 07c3 31       		.byte	0x31
 11315 07c4 9F       		.byte	0x9f
 11316 07c5 DA000000 		.4byte	.LVL192
 11317 07c9 E0000000 		.4byte	.LVL194
 11318 07cd 0200     		.2byte	0x2
 11319 07cf 30       		.byte	0x30
 11320 07d0 9F       		.byte	0x9f
 11321 07d1 E0000000 		.4byte	.LVL194
 11322 07d5 E8000000 		.4byte	.LVL196
 11323 07d9 0100     		.2byte	0x1
 11324 07db 54       		.byte	0x54
 11325 07dc E8000000 		.4byte	.LVL196
 11326 07e0 F0000000 		.4byte	.LFE611
 11327 07e4 0100     		.2byte	0x1
 11328 07e6 50       		.byte	0x50
 11329 07e7 00000000 		.4byte	0
 11330 07eb 00000000 		.4byte	0
 11331              	.LLST56:
 11332 07ef A2000000 		.4byte	.LVL186
 11333 07f3 B2000000 		.4byte	.LVL188
 11334 07f7 0100     		.2byte	0x1
 11335 07f9 54       		.byte	0x54
 11336 07fa B2000000 		.4byte	.LVL188
 11337 07fe B4000000 		.4byte	.LVL189
 11338 0802 0300     		.2byte	0x3
 11339 0804 74       		.byte	0x74
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 302


 11340 0805 7F       		.sleb128 -1
 11341 0806 9F       		.byte	0x9f
 11342 0807 B4000000 		.4byte	.LVL189
 11343 080b D8000000 		.4byte	.LVL191
 11344 080f 0100     		.2byte	0x1
 11345 0811 54       		.byte	0x54
 11346 0812 DE000000 		.4byte	.LVL193
 11347 0816 E0000000 		.4byte	.LVL194
 11348 081a 0100     		.2byte	0x1
 11349 081c 54       		.byte	0x54
 11350 081d 00000000 		.4byte	0
 11351 0821 00000000 		.4byte	0
 11352              	.LLST57:
 11353 0825 00000000 		.4byte	.LVL197
 11354 0829 4B000000 		.4byte	.LVL202-1
 11355 082d 0100     		.2byte	0x1
 11356 082f 50       		.byte	0x50
 11357 0830 4B000000 		.4byte	.LVL202-1
 11358 0834 A4000000 		.4byte	.LVL209
 11359 0838 0100     		.2byte	0x1
 11360 083a 55       		.byte	0x55
 11361 083b A4000000 		.4byte	.LVL209
 11362 083f AC000000 		.4byte	.LFE599
 11363 0843 0400     		.2byte	0x4
 11364 0845 F3       		.byte	0xf3
 11365 0846 01       		.uleb128 0x1
 11366 0847 50       		.byte	0x50
 11367 0848 9F       		.byte	0x9f
 11368 0849 00000000 		.4byte	0
 11369 084d 00000000 		.4byte	0
 11370              	.LLST58:
 11371 0851 00000000 		.4byte	.LVL197
 11372 0855 4B000000 		.4byte	.LVL202-1
 11373 0859 0100     		.2byte	0x1
 11374 085b 51       		.byte	0x51
 11375 085c 4B000000 		.4byte	.LVL202-1
 11376 0860 A4000000 		.4byte	.LVL209
 11377 0864 0100     		.2byte	0x1
 11378 0866 54       		.byte	0x54
 11379 0867 A4000000 		.4byte	.LVL209
 11380 086b AC000000 		.4byte	.LFE599
 11381 086f 0400     		.2byte	0x4
 11382 0871 F3       		.byte	0xf3
 11383 0872 01       		.uleb128 0x1
 11384 0873 51       		.byte	0x51
 11385 0874 9F       		.byte	0x9f
 11386 0875 00000000 		.4byte	0
 11387 0879 00000000 		.4byte	0
 11388              	.LLST59:
 11389 087d 56000000 		.4byte	.LVL204
 11390 0881 8B000000 		.4byte	.LVL207-1
 11391 0885 0100     		.2byte	0x1
 11392 0887 53       		.byte	0x53
 11393 0888 00000000 		.4byte	0
 11394 088c 00000000 		.4byte	0
 11395              	.LLST60:
 11396 0890 02000000 		.4byte	.LVL198
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 303


 11397 0894 80000000 		.4byte	.LVL205
 11398 0898 0200     		.2byte	0x2
 11399 089a 30       		.byte	0x30
 11400 089b 9F       		.byte	0x9f
 11401 089c 80000000 		.4byte	.LVL205
 11402 08a0 8B000000 		.4byte	.LVL207-1
 11403 08a4 0100     		.2byte	0x1
 11404 08a6 52       		.byte	0x52
 11405 08a7 00000000 		.4byte	0
 11406 08ab 00000000 		.4byte	0
 11407              	.LLST61:
 11408 08af 52000000 		.4byte	.LVL203
 11409 08b3 88000000 		.4byte	.LVL206
 11410 08b7 0100     		.2byte	0x1
 11411 08b9 50       		.byte	0x50
 11412 08ba 00000000 		.4byte	0
 11413 08be 00000000 		.4byte	0
 11414              	.LLST62:
 11415 08c2 00000000 		.4byte	.LVL210
 11416 08c6 23000000 		.4byte	.LVL213-1
 11417 08ca 0100     		.2byte	0x1
 11418 08cc 50       		.byte	0x50
 11419 08cd 23000000 		.4byte	.LVL213-1
 11420 08d1 32000000 		.4byte	.LVL216
 11421 08d5 0100     		.2byte	0x1
 11422 08d7 54       		.byte	0x54
 11423 08d8 32000000 		.4byte	.LVL216
 11424 08dc 34000000 		.4byte	.LVL217
 11425 08e0 0100     		.2byte	0x1
 11426 08e2 50       		.byte	0x50
 11427 08e3 34000000 		.4byte	.LVL217
 11428 08e7 50000000 		.4byte	.LFE600
 11429 08eb 0400     		.2byte	0x4
 11430 08ed F3       		.byte	0xf3
 11431 08ee 01       		.uleb128 0x1
 11432 08ef 50       		.byte	0x50
 11433 08f0 9F       		.byte	0x9f
 11434 08f1 00000000 		.4byte	0
 11435 08f5 00000000 		.4byte	0
 11436              	.LLST63:
 11437 08f9 02000000 		.4byte	.LVL211
 11438 08fd 30000000 		.4byte	.LVL215
 11439 0901 0200     		.2byte	0x2
 11440 0903 30       		.byte	0x30
 11441 0904 9F       		.byte	0x9f
 11442 0905 30000000 		.4byte	.LVL215
 11443 0909 32000000 		.4byte	.LVL216
 11444 090d 0100     		.2byte	0x1
 11445 090f 50       		.byte	0x50
 11446 0910 32000000 		.4byte	.LVL216
 11447 0914 34000000 		.4byte	.LVL217
 11448 0918 0200     		.2byte	0x2
 11449 091a 30       		.byte	0x30
 11450 091b 9F       		.byte	0x9f
 11451 091c 34000000 		.4byte	.LVL217
 11452 0920 50000000 		.4byte	.LFE600
 11453 0924 0100     		.2byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 304


 11454 0926 50       		.byte	0x50
 11455 0927 00000000 		.4byte	0
 11456 092b 00000000 		.4byte	0
 11457              	.LLST64:
 11458 092f 22000000 		.4byte	.LVL218
 11459 0933 3C000000 		.4byte	.LVL219
 11460 0937 0100     		.2byte	0x1
 11461 0939 53       		.byte	0x53
 11462 093a 00000000 		.4byte	0
 11463 093e 00000000 		.4byte	0
 11464              	.LLST65:
 11465 0942 58000000 		.4byte	.LVL221
 11466 0946 6C000000 		.4byte	.LVL222
 11467 094a 0100     		.2byte	0x1
 11468 094c 53       		.byte	0x53
 11469 094d 6E000000 		.4byte	.LVL223
 11470 0951 C8000000 		.4byte	.LFE617
 11471 0955 0100     		.2byte	0x1
 11472 0957 53       		.byte	0x53
 11473 0958 00000000 		.4byte	0
 11474 095c 00000000 		.4byte	0
 11475              	.LLST66:
 11476 0960 00000000 		.4byte	.LVL226
 11477 0964 07000000 		.4byte	.LVL227-1
 11478 0968 0100     		.2byte	0x1
 11479 096a 50       		.byte	0x50
 11480 096b 07000000 		.4byte	.LVL227-1
 11481 096f 10000000 		.4byte	.LVL228
 11482 0973 0100     		.2byte	0x1
 11483 0975 54       		.byte	0x54
 11484 0976 00000000 		.4byte	0
 11485 097a 00000000 		.4byte	0
 11486              	.LLST67:
 11487 097e 10000000 		.4byte	.LVL228
 11488 0982 AE000000 		.4byte	.LVL240
 11489 0986 0100     		.2byte	0x1
 11490 0988 54       		.byte	0x54
 11491 0989 00000000 		.4byte	0
 11492 098d 00000000 		.4byte	0
 11493              	.LLST68:
 11494 0991 00000000 		.4byte	.LVL241
 11495 0995 23000000 		.4byte	.LVL244-1
 11496 0999 0100     		.2byte	0x1
 11497 099b 50       		.byte	0x50
 11498 099c 23000000 		.4byte	.LVL244-1
 11499 09a0 34000000 		.4byte	.LFE618
 11500 09a4 0400     		.2byte	0x4
 11501 09a6 F3       		.byte	0xf3
 11502 09a7 01       		.uleb128 0x1
 11503 09a8 50       		.byte	0x50
 11504 09a9 9F       		.byte	0x9f
 11505 09aa 00000000 		.4byte	0
 11506 09ae 00000000 		.4byte	0
 11507              	.LLST69:
 11508 09b2 00000000 		.4byte	.LVL241
 11509 09b6 1E000000 		.4byte	.LVL243
 11510 09ba 0100     		.2byte	0x1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 305


 11511 09bc 51       		.byte	0x51
 11512 09bd 1E000000 		.4byte	.LVL243
 11513 09c1 2E000000 		.4byte	.LVL246
 11514 09c5 0100     		.2byte	0x1
 11515 09c7 54       		.byte	0x54
 11516 09c8 2E000000 		.4byte	.LVL246
 11517 09cc 34000000 		.4byte	.LFE618
 11518 09d0 0400     		.2byte	0x4
 11519 09d2 F3       		.byte	0xf3
 11520 09d3 01       		.uleb128 0x1
 11521 09d4 51       		.byte	0x51
 11522 09d5 9F       		.byte	0x9f
 11523 09d6 00000000 		.4byte	0
 11524 09da 00000000 		.4byte	0
 11525              	.LLST70:
 11526 09de 00000000 		.4byte	.LVL247
 11527 09e2 18000000 		.4byte	.LVL249
 11528 09e6 0100     		.2byte	0x1
 11529 09e8 50       		.byte	0x50
 11530 09e9 18000000 		.4byte	.LVL249
 11531 09ed 2E000000 		.4byte	.LVL250
 11532 09f1 0100     		.2byte	0x1
 11533 09f3 53       		.byte	0x53
 11534 09f4 2E000000 		.4byte	.LVL250
 11535 09f8 30000000 		.4byte	.LVL251
 11536 09fc 0400     		.2byte	0x4
 11537 09fe F3       		.byte	0xf3
 11538 09ff 01       		.uleb128 0x1
 11539 0a00 50       		.byte	0x50
 11540 0a01 9F       		.byte	0x9f
 11541 0a02 30000000 		.4byte	.LVL251
 11542 0a06 38000000 		.4byte	.LVL252
 11543 0a0a 0100     		.2byte	0x1
 11544 0a0c 53       		.byte	0x53
 11545 0a0d 38000000 		.4byte	.LVL252
 11546 0a11 4D000000 		.4byte	.LVL256-1
 11547 0a15 0100     		.2byte	0x1
 11548 0a17 50       		.byte	0x50
 11549 0a18 4D000000 		.4byte	.LVL256-1
 11550 0a1c 5C000000 		.4byte	.LFE619
 11551 0a20 0400     		.2byte	0x4
 11552 0a22 F3       		.byte	0xf3
 11553 0a23 01       		.uleb128 0x1
 11554 0a24 50       		.byte	0x50
 11555 0a25 9F       		.byte	0x9f
 11556 0a26 00000000 		.4byte	0
 11557 0a2a 00000000 		.4byte	0
 11558              	.LLST71:
 11559 0a2e 00000000 		.4byte	.LVL247
 11560 0a32 3E000000 		.4byte	.LVL254
 11561 0a36 0100     		.2byte	0x1
 11562 0a38 51       		.byte	0x51
 11563 0a39 3E000000 		.4byte	.LVL254
 11564 0a3d 42000000 		.4byte	.LVL255
 11565 0a41 0100     		.2byte	0x1
 11566 0a43 53       		.byte	0x53
 11567 0a44 42000000 		.4byte	.LVL255
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 306


 11568 0a48 5C000000 		.4byte	.LFE619
 11569 0a4c 0400     		.2byte	0x4
 11570 0a4e F3       		.byte	0xf3
 11571 0a4f 01       		.uleb128 0x1
 11572 0a50 51       		.byte	0x51
 11573 0a51 9F       		.byte	0x9f
 11574 0a52 00000000 		.4byte	0
 11575 0a56 00000000 		.4byte	0
 11576              	.LLST72:
 11577 0a5a 00000000 		.4byte	.LVL247
 11578 0a5e 3A000000 		.4byte	.LVL253
 11579 0a62 0100     		.2byte	0x1
 11580 0a64 52       		.byte	0x52
 11581 0a65 3A000000 		.4byte	.LVL253
 11582 0a69 58000000 		.4byte	.LVL258
 11583 0a6d 0100     		.2byte	0x1
 11584 0a6f 54       		.byte	0x54
 11585 0a70 58000000 		.4byte	.LVL258
 11586 0a74 5C000000 		.4byte	.LFE619
 11587 0a78 0400     		.2byte	0x4
 11588 0a7a F3       		.byte	0xf3
 11589 0a7b 01       		.uleb128 0x1
 11590 0a7c 52       		.byte	0x52
 11591 0a7d 9F       		.byte	0x9f
 11592 0a7e 00000000 		.4byte	0
 11593 0a82 00000000 		.4byte	0
 11594              	.LLST73:
 11595 0a86 00000000 		.4byte	.LVL259
 11596 0a8a 25000000 		.4byte	.LVL263-1
 11597 0a8e 0100     		.2byte	0x1
 11598 0a90 50       		.byte	0x50
 11599 0a91 25000000 		.4byte	.LVL263-1
 11600 0a95 3C000000 		.4byte	.LFE620
 11601 0a99 0400     		.2byte	0x4
 11602 0a9b F3       		.byte	0xf3
 11603 0a9c 01       		.uleb128 0x1
 11604 0a9d 50       		.byte	0x50
 11605 0a9e 9F       		.byte	0x9f
 11606 0a9f 00000000 		.4byte	0
 11607 0aa3 00000000 		.4byte	0
 11608              	.LLST74:
 11609 0aa7 00000000 		.4byte	.LVL259
 11610 0aab 20000000 		.4byte	.LVL262
 11611 0aaf 0100     		.2byte	0x1
 11612 0ab1 51       		.byte	0x51
 11613 0ab2 20000000 		.4byte	.LVL262
 11614 0ab6 36000000 		.4byte	.LVL266
 11615 0aba 0100     		.2byte	0x1
 11616 0abc 54       		.byte	0x54
 11617 0abd 00000000 		.4byte	0
 11618 0ac1 00000000 		.4byte	0
 11619              	.LLST75:
 11620 0ac5 00000000 		.4byte	.LVL259
 11621 0ac9 1C000000 		.4byte	.LVL261
 11622 0acd 0100     		.2byte	0x1
 11623 0acf 52       		.byte	0x52
 11624 0ad0 1C000000 		.4byte	.LVL261
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 307


 11625 0ad4 36000000 		.4byte	.LVL266
 11626 0ad8 0100     		.2byte	0x1
 11627 0ada 55       		.byte	0x55
 11628 0adb 36000000 		.4byte	.LVL266
 11629 0adf 3C000000 		.4byte	.LFE620
 11630 0ae3 0400     		.2byte	0x4
 11631 0ae5 F3       		.byte	0xf3
 11632 0ae6 01       		.uleb128 0x1
 11633 0ae7 52       		.byte	0x52
 11634 0ae8 9F       		.byte	0x9f
 11635 0ae9 00000000 		.4byte	0
 11636 0aed 00000000 		.4byte	0
 11637              	.LLST76:
 11638 0af1 00000000 		.4byte	.LVL267
 11639 0af5 20000000 		.4byte	.LVL270
 11640 0af9 0100     		.2byte	0x1
 11641 0afb 50       		.byte	0x50
 11642 0afc 20000000 		.4byte	.LVL270
 11643 0b00 88000000 		.4byte	.LFE621
 11644 0b04 0400     		.2byte	0x4
 11645 0b06 F3       		.byte	0xf3
 11646 0b07 01       		.uleb128 0x1
 11647 0b08 50       		.byte	0x50
 11648 0b09 9F       		.byte	0x9f
 11649 0b0a 00000000 		.4byte	0
 11650 0b0e 00000000 		.4byte	0
 11651              	.LLST77:
 11652 0b12 06000000 		.4byte	.LVL268
 11653 0b16 7C000000 		.4byte	.LVL278
 11654 0b1a 0100     		.2byte	0x1
 11655 0b1c 54       		.byte	0x54
 11656 0b1d 00000000 		.4byte	0
 11657 0b21 00000000 		.4byte	0
 11658              	.LLST78:
 11659 0b25 6E000000 		.4byte	.LVL275
 11660 0b29 78000000 		.4byte	.LVL276
 11661 0b2d 0200     		.2byte	0x2
 11662 0b2f 31       		.byte	0x31
 11663 0b30 9F       		.byte	0x9f
 11664 0b31 7A000000 		.4byte	.LVL277
 11665 0b35 88000000 		.4byte	.LFE621
 11666 0b39 0100     		.2byte	0x1
 11667 0b3b 50       		.byte	0x50
 11668 0b3c 00000000 		.4byte	0
 11669 0b40 00000000 		.4byte	0
 11670              	.LLST79:
 11671 0b44 00000000 		.4byte	.LVL279
 11672 0b48 3B000000 		.4byte	.LVL283-1
 11673 0b4c 0100     		.2byte	0x1
 11674 0b4e 50       		.byte	0x50
 11675 0b4f 3B000000 		.4byte	.LVL283-1
 11676 0b53 84000000 		.4byte	.LFE622
 11677 0b57 0400     		.2byte	0x4
 11678 0b59 F3       		.byte	0xf3
 11679 0b5a 01       		.uleb128 0x1
 11680 0b5b 50       		.byte	0x50
 11681 0b5c 9F       		.byte	0x9f
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 308


 11682 0b5d 00000000 		.4byte	0
 11683 0b61 00000000 		.4byte	0
 11684              	.LLST80:
 11685 0b65 00000000 		.4byte	.LVL279
 11686 0b69 3B000000 		.4byte	.LVL283-1
 11687 0b6d 0100     		.2byte	0x1
 11688 0b6f 51       		.byte	0x51
 11689 0b70 3B000000 		.4byte	.LVL283-1
 11690 0b74 84000000 		.4byte	.LFE622
 11691 0b78 0400     		.2byte	0x4
 11692 0b7a F3       		.byte	0xf3
 11693 0b7b 01       		.uleb128 0x1
 11694 0b7c 51       		.byte	0x51
 11695 0b7d 9F       		.byte	0x9f
 11696 0b7e 00000000 		.4byte	0
 11697 0b82 00000000 		.4byte	0
 11698              	.LLST81:
 11699 0b86 24000000 		.4byte	.LVL281
 11700 0b8a 7E000000 		.4byte	.LVL286
 11701 0b8e 0100     		.2byte	0x1
 11702 0b90 54       		.byte	0x54
 11703 0b91 00000000 		.4byte	0
 11704 0b95 00000000 		.4byte	0
 11705              	.LLST82:
 11706 0b99 00000000 		.4byte	.LVL287
 11707 0b9d 1B000000 		.4byte	.LVL289-1
 11708 0ba1 0100     		.2byte	0x1
 11709 0ba3 50       		.byte	0x50
 11710 0ba4 1B000000 		.4byte	.LVL289-1
 11711 0ba8 30000000 		.4byte	.LVL291
 11712 0bac 0100     		.2byte	0x1
 11713 0bae 54       		.byte	0x54
 11714 0baf 30000000 		.4byte	.LVL291
 11715 0bb3 34000000 		.4byte	.LFE623
 11716 0bb7 0400     		.2byte	0x4
 11717 0bb9 F3       		.byte	0xf3
 11718 0bba 01       		.uleb128 0x1
 11719 0bbb 50       		.byte	0x50
 11720 0bbc 9F       		.byte	0x9f
 11721 0bbd 00000000 		.4byte	0
 11722 0bc1 00000000 		.4byte	0
 11723              	.LLST83:
 11724 0bc5 00000000 		.4byte	.LVL293
 11725 0bc9 31000000 		.4byte	.LVL296-1
 11726 0bcd 0100     		.2byte	0x1
 11727 0bcf 50       		.byte	0x50
 11728 0bd0 31000000 		.4byte	.LVL296-1
 11729 0bd4 7C000000 		.4byte	.LVL310
 11730 0bd8 0100     		.2byte	0x1
 11731 0bda 55       		.byte	0x55
 11732 0bdb 7C000000 		.4byte	.LVL310
 11733 0bdf 80000000 		.4byte	.LFE625
 11734 0be3 0400     		.2byte	0x4
 11735 0be5 F3       		.byte	0xf3
 11736 0be6 01       		.uleb128 0x1
 11737 0be7 50       		.byte	0x50
 11738 0be8 9F       		.byte	0x9f
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 309


 11739 0be9 00000000 		.4byte	0
 11740 0bed 00000000 		.4byte	0
 11741              	.LLST84:
 11742 0bf1 00000000 		.4byte	.LVL293
 11743 0bf5 31000000 		.4byte	.LVL296-1
 11744 0bf9 0100     		.2byte	0x1
 11745 0bfb 51       		.byte	0x51
 11746 0bfc 31000000 		.4byte	.LVL296-1
 11747 0c00 64000000 		.4byte	.LVL301
 11748 0c04 0100     		.2byte	0x1
 11749 0c06 54       		.byte	0x54
 11750 0c07 64000000 		.4byte	.LVL301
 11751 0c0b 66000000 		.4byte	.LVL302
 11752 0c0f 0400     		.2byte	0x4
 11753 0c11 F3       		.byte	0xf3
 11754 0c12 01       		.uleb128 0x1
 11755 0c13 51       		.byte	0x51
 11756 0c14 9F       		.byte	0x9f
 11757 0c15 66000000 		.4byte	.LVL302
 11758 0c19 6C000000 		.4byte	.LVL304
 11759 0c1d 0100     		.2byte	0x1
 11760 0c1f 54       		.byte	0x54
 11761 0c20 6C000000 		.4byte	.LVL304
 11762 0c24 6E000000 		.4byte	.LVL305
 11763 0c28 0400     		.2byte	0x4
 11764 0c2a F3       		.byte	0xf3
 11765 0c2b 01       		.uleb128 0x1
 11766 0c2c 51       		.byte	0x51
 11767 0c2d 9F       		.byte	0x9f
 11768 0c2e 6E000000 		.4byte	.LVL305
 11769 0c32 70000000 		.4byte	.LVL306
 11770 0c36 0100     		.2byte	0x1
 11771 0c38 54       		.byte	0x54
 11772 0c39 70000000 		.4byte	.LVL306
 11773 0c3d 72000000 		.4byte	.LVL307
 11774 0c41 0400     		.2byte	0x4
 11775 0c43 F3       		.byte	0xf3
 11776 0c44 01       		.uleb128 0x1
 11777 0c45 51       		.byte	0x51
 11778 0c46 9F       		.byte	0x9f
 11779 0c47 72000000 		.4byte	.LVL307
 11780 0c4b 74000000 		.4byte	.LVL308
 11781 0c4f 0100     		.2byte	0x1
 11782 0c51 54       		.byte	0x54
 11783 0c52 74000000 		.4byte	.LVL308
 11784 0c56 80000000 		.4byte	.LFE625
 11785 0c5a 0400     		.2byte	0x4
 11786 0c5c F3       		.byte	0xf3
 11787 0c5d 01       		.uleb128 0x1
 11788 0c5e 51       		.byte	0x51
 11789 0c5f 9F       		.byte	0x9f
 11790 0c60 00000000 		.4byte	0
 11791 0c64 00000000 		.4byte	0
 11792              	.LLST85:
 11793 0c68 62000000 		.4byte	.LVL300
 11794 0c6c 66000000 		.4byte	.LVL302
 11795 0c70 0200     		.2byte	0x2
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 310


 11796 0c72 30       		.byte	0x30
 11797 0c73 9F       		.byte	0x9f
 11798 0c74 6A000000 		.4byte	.LVL303
 11799 0c78 6E000000 		.4byte	.LVL305
 11800 0c7c 0200     		.2byte	0x2
 11801 0c7e 31       		.byte	0x31
 11802 0c7f 9F       		.byte	0x9f
 11803 0c80 74000000 		.4byte	.LVL308
 11804 0c84 7C000000 		.4byte	.LVL310
 11805 0c88 0100     		.2byte	0x1
 11806 0c8a 54       		.byte	0x54
 11807 0c8b 7C000000 		.4byte	.LVL310
 11808 0c8f 80000000 		.4byte	.LFE625
 11809 0c93 0100     		.2byte	0x1
 11810 0c95 50       		.byte	0x50
 11811 0c96 00000000 		.4byte	0
 11812 0c9a 00000000 		.4byte	0
 11813              	.LLST86:
 11814 0c9e 38000000 		.4byte	.LVL297
 11815 0ca2 5E000000 		.4byte	.LVL299
 11816 0ca6 0100     		.2byte	0x1
 11817 0ca8 50       		.byte	0x50
 11818 0ca9 66000000 		.4byte	.LVL302
 11819 0cad 74000000 		.4byte	.LVL308
 11820 0cb1 0100     		.2byte	0x1
 11821 0cb3 50       		.byte	0x50
 11822 0cb4 00000000 		.4byte	0
 11823 0cb8 00000000 		.4byte	0
 11824              	.LLST87:
 11825 0cbc 3C000000 		.4byte	.LVL298
 11826 0cc0 61000000 		.4byte	.LVL300-1
 11827 0cc4 0100     		.2byte	0x1
 11828 0cc6 52       		.byte	0x52
 11829 0cc7 66000000 		.4byte	.LVL302
 11830 0ccb 74000000 		.4byte	.LVL308
 11831 0ccf 0100     		.2byte	0x1
 11832 0cd1 52       		.byte	0x52
 11833 0cd2 00000000 		.4byte	0
 11834 0cd6 00000000 		.4byte	0
 11835              	.LLST88:
 11836 0cda 00000000 		.4byte	.LVL311
 11837 0cde 0C000000 		.4byte	.LVL312
 11838 0ce2 0100     		.2byte	0x1
 11839 0ce4 50       		.byte	0x50
 11840 0ce5 00000000 		.4byte	0
 11841 0ce9 00000000 		.4byte	0
 11842              	.LLST89:
 11843 0ced 00000000 		.4byte	.LVL311
 11844 0cf1 0E000000 		.4byte	.LVL313
 11845 0cf5 0100     		.2byte	0x1
 11846 0cf7 51       		.byte	0x51
 11847 0cf8 0E000000 		.4byte	.LVL313
 11848 0cfc 12000000 		.4byte	.LVL314
 11849 0d00 0300     		.2byte	0x3
 11850 0d02 71       		.byte	0x71
 11851 0d03 70       		.sleb128 -16
 11852 0d04 9F       		.byte	0x9f
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 311


 11853 0d05 12000000 		.4byte	.LVL314
 11854 0d09 1C000000 		.4byte	.LFE628
 11855 0d0d 0400     		.2byte	0x4
 11856 0d0f F3       		.byte	0xf3
 11857 0d10 01       		.uleb128 0x1
 11858 0d11 51       		.byte	0x51
 11859 0d12 9F       		.byte	0x9f
 11860 0d13 00000000 		.4byte	0
 11861 0d17 00000000 		.4byte	0
 11862              	.LLST90:
 11863 0d1b 0C000000 		.4byte	.LVL312
 11864 0d1f 14000000 		.4byte	.LVL315
 11865 0d23 0100     		.2byte	0x1
 11866 0d25 50       		.byte	0x50
 11867 0d26 00000000 		.4byte	0
 11868 0d2a 00000000 		.4byte	0
 11869              	.LLST91:
 11870 0d2e 00000000 		.4byte	.LVL316
 11871 0d32 0C000000 		.4byte	.LVL317
 11872 0d36 0100     		.2byte	0x1
 11873 0d38 50       		.byte	0x50
 11874 0d39 16000000 		.4byte	.LVL321
 11875 0d3d 18000000 		.4byte	.LVL322
 11876 0d41 0100     		.2byte	0x1
 11877 0d43 50       		.byte	0x50
 11878 0d44 18000000 		.4byte	.LVL322
 11879 0d48 20000000 		.4byte	.LFE629
 11880 0d4c 0400     		.2byte	0x4
 11881 0d4e F3       		.byte	0xf3
 11882 0d4f 01       		.uleb128 0x1
 11883 0d50 50       		.byte	0x50
 11884 0d51 9F       		.byte	0x9f
 11885 0d52 00000000 		.4byte	0
 11886 0d56 00000000 		.4byte	0
 11887              	.LLST92:
 11888 0d5a 00000000 		.4byte	.LVL316
 11889 0d5e 0E000000 		.4byte	.LVL318
 11890 0d62 0100     		.2byte	0x1
 11891 0d64 51       		.byte	0x51
 11892 0d65 0E000000 		.4byte	.LVL318
 11893 0d69 16000000 		.4byte	.LVL321
 11894 0d6d 0300     		.2byte	0x3
 11895 0d6f 71       		.byte	0x71
 11896 0d70 70       		.sleb128 -16
 11897 0d71 9F       		.byte	0x9f
 11898 0d72 16000000 		.4byte	.LVL321
 11899 0d76 20000000 		.4byte	.LFE629
 11900 0d7a 0100     		.2byte	0x1
 11901 0d7c 51       		.byte	0x51
 11902 0d7d 00000000 		.4byte	0
 11903 0d81 00000000 		.4byte	0
 11904              	.LLST93:
 11905 0d85 00000000 		.4byte	.LVL316
 11906 0d89 14000000 		.4byte	.LVL320
 11907 0d8d 0200     		.2byte	0x2
 11908 0d8f 30       		.byte	0x30
 11909 0d90 9F       		.byte	0x9f
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 312


 11910 0d91 14000000 		.4byte	.LVL320
 11911 0d95 16000000 		.4byte	.LVL321
 11912 0d99 0100     		.2byte	0x1
 11913 0d9b 50       		.byte	0x50
 11914 0d9c 16000000 		.4byte	.LVL321
 11915 0da0 18000000 		.4byte	.LVL322
 11916 0da4 0200     		.2byte	0x2
 11917 0da6 30       		.byte	0x30
 11918 0da7 9F       		.byte	0x9f
 11919 0da8 18000000 		.4byte	.LVL322
 11920 0dac 20000000 		.4byte	.LFE629
 11921 0db0 0100     		.2byte	0x1
 11922 0db2 50       		.byte	0x50
 11923 0db3 00000000 		.4byte	0
 11924 0db7 00000000 		.4byte	0
 11925              	.LLST94:
 11926 0dbb 0C000000 		.4byte	.LVL317
 11927 0dbf 12000000 		.4byte	.LVL319
 11928 0dc3 0100     		.2byte	0x1
 11929 0dc5 50       		.byte	0x50
 11930 0dc6 00000000 		.4byte	0
 11931 0dca 00000000 		.4byte	0
 11932              	.LLST95:
 11933 0dce 00000000 		.4byte	.LVL326
 11934 0dd2 09000000 		.4byte	.LVL327-1
 11935 0dd6 0100     		.2byte	0x1
 11936 0dd8 50       		.byte	0x50
 11937 0dd9 09000000 		.4byte	.LVL327-1
 11938 0ddd 78000000 		.4byte	.LVL333
 11939 0de1 0100     		.2byte	0x1
 11940 0de3 55       		.byte	0x55
 11941 0de4 78000000 		.4byte	.LVL333
 11942 0de8 80000000 		.4byte	.LFE637
 11943 0dec 0400     		.2byte	0x4
 11944 0dee F3       		.byte	0xf3
 11945 0def 01       		.uleb128 0x1
 11946 0df0 50       		.byte	0x50
 11947 0df1 9F       		.byte	0x9f
 11948 0df2 00000000 		.4byte	0
 11949 0df6 00000000 		.4byte	0
 11950              	.LLST96:
 11951 0dfa 00000000 		.4byte	.LVL326
 11952 0dfe 09000000 		.4byte	.LVL327-1
 11953 0e02 0100     		.2byte	0x1
 11954 0e04 51       		.byte	0x51
 11955 0e05 09000000 		.4byte	.LVL327-1
 11956 0e09 4A000000 		.4byte	.LVL331
 11957 0e0d 0100     		.2byte	0x1
 11958 0e0f 54       		.byte	0x54
 11959 0e10 4A000000 		.4byte	.LVL331
 11960 0e14 80000000 		.4byte	.LFE637
 11961 0e18 0400     		.2byte	0x4
 11962 0e1a F3       		.byte	0xf3
 11963 0e1b 01       		.uleb128 0x1
 11964 0e1c 51       		.byte	0x51
 11965 0e1d 9F       		.byte	0x9f
 11966 0e1e 00000000 		.4byte	0
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 313


 11967 0e22 00000000 		.4byte	0
 11968              	.LLST97:
 11969 0e26 4A000000 		.4byte	.LVL331
 11970 0e2a 78000000 		.4byte	.LVL333
 11971 0e2e 0100     		.2byte	0x1
 11972 0e30 54       		.byte	0x54
 11973 0e31 78000000 		.4byte	.LVL333
 11974 0e35 80000000 		.4byte	.LFE637
 11975 0e39 0100     		.2byte	0x1
 11976 0e3b 50       		.byte	0x50
 11977 0e3c 00000000 		.4byte	0
 11978 0e40 00000000 		.4byte	0
 11979              	.LLST98:
 11980 0e44 00000000 		.4byte	.LVL334
 11981 0e48 0D000000 		.4byte	.LVL335-1
 11982 0e4c 0100     		.2byte	0x1
 11983 0e4e 50       		.byte	0x50
 11984 0e4f 0D000000 		.4byte	.LVL335-1
 11985 0e53 9C000000 		.4byte	.LVL345
 11986 0e57 0100     		.2byte	0x1
 11987 0e59 57       		.byte	0x57
 11988 0e5a 9C000000 		.4byte	.LVL345
 11989 0e5e A4000000 		.4byte	.LFE638
 11990 0e62 0400     		.2byte	0x4
 11991 0e64 F3       		.byte	0xf3
 11992 0e65 01       		.uleb128 0x1
 11993 0e66 50       		.byte	0x50
 11994 0e67 9F       		.byte	0x9f
 11995 0e68 00000000 		.4byte	0
 11996 0e6c 00000000 		.4byte	0
 11997              	.LLST99:
 11998 0e70 00000000 		.4byte	.LVL334
 11999 0e74 0D000000 		.4byte	.LVL335-1
 12000 0e78 0100     		.2byte	0x1
 12001 0e7a 51       		.byte	0x51
 12002 0e7b 0D000000 		.4byte	.LVL335-1
 12003 0e7f 80000000 		.4byte	.LVL339
 12004 0e83 0100     		.2byte	0x1
 12005 0e85 55       		.byte	0x55
 12006 0e86 80000000 		.4byte	.LVL339
 12007 0e8a 86000000 		.4byte	.LVL342
 12008 0e8e 0400     		.2byte	0x4
 12009 0e90 F3       		.byte	0xf3
 12010 0e91 01       		.uleb128 0x1
 12011 0e92 51       		.byte	0x51
 12012 0e93 9F       		.byte	0x9f
 12013 0e94 86000000 		.4byte	.LVL342
 12014 0e98 88000000 		.4byte	.LVL343
 12015 0e9c 0100     		.2byte	0x1
 12016 0e9e 55       		.byte	0x55
 12017 0e9f 88000000 		.4byte	.LVL343
 12018 0ea3 A4000000 		.4byte	.LFE638
 12019 0ea7 0400     		.2byte	0x4
 12020 0ea9 F3       		.byte	0xf3
 12021 0eaa 01       		.uleb128 0x1
 12022 0eab 51       		.byte	0x51
 12023 0eac 9F       		.byte	0x9f
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 314


 12024 0ead 00000000 		.4byte	0
 12025 0eb1 00000000 		.4byte	0
 12026              	.LLST100:
 12027 0eb5 00000000 		.4byte	.LVL334
 12028 0eb9 0D000000 		.4byte	.LVL335-1
 12029 0ebd 0100     		.2byte	0x1
 12030 0ebf 52       		.byte	0x52
 12031 0ec0 0D000000 		.4byte	.LVL335-1
 12032 0ec4 84000000 		.4byte	.LVL341
 12033 0ec8 0100     		.2byte	0x1
 12034 0eca 54       		.byte	0x54
 12035 0ecb 84000000 		.4byte	.LVL341
 12036 0ecf 86000000 		.4byte	.LVL342
 12037 0ed3 0400     		.2byte	0x4
 12038 0ed5 F3       		.byte	0xf3
 12039 0ed6 01       		.uleb128 0x1
 12040 0ed7 52       		.byte	0x52
 12041 0ed8 9F       		.byte	0x9f
 12042 0ed9 86000000 		.4byte	.LVL342
 12043 0edd 88000000 		.4byte	.LVL343
 12044 0ee1 0100     		.2byte	0x1
 12045 0ee3 54       		.byte	0x54
 12046 0ee4 88000000 		.4byte	.LVL343
 12047 0ee8 A4000000 		.4byte	.LFE638
 12048 0eec 0400     		.2byte	0x4
 12049 0eee F3       		.byte	0xf3
 12050 0eef 01       		.uleb128 0x1
 12051 0ef0 52       		.byte	0x52
 12052 0ef1 9F       		.byte	0x9f
 12053 0ef2 00000000 		.4byte	0
 12054 0ef6 00000000 		.4byte	0
 12055              	.LLST101:
 12056 0efa 00000000 		.4byte	.LVL334
 12057 0efe 0D000000 		.4byte	.LVL335-1
 12058 0f02 0100     		.2byte	0x1
 12059 0f04 53       		.byte	0x53
 12060 0f05 0D000000 		.4byte	.LVL335-1
 12061 0f09 9C000000 		.4byte	.LVL345
 12062 0f0d 0100     		.2byte	0x1
 12063 0f0f 56       		.byte	0x56
 12064 0f10 9C000000 		.4byte	.LVL345
 12065 0f14 A4000000 		.4byte	.LFE638
 12066 0f18 0400     		.2byte	0x4
 12067 0f1a F3       		.byte	0xf3
 12068 0f1b 01       		.uleb128 0x1
 12069 0f1c 53       		.byte	0x53
 12070 0f1d 9F       		.byte	0x9f
 12071 0f1e 00000000 		.4byte	0
 12072 0f22 00000000 		.4byte	0
 12073              	.LLST102:
 12074 0f26 82000000 		.4byte	.LVL340
 12075 0f2a 86000000 		.4byte	.LVL342
 12076 0f2e 0200     		.2byte	0x2
 12077 0f30 31       		.byte	0x31
 12078 0f31 9F       		.byte	0x9f
 12079 0f32 88000000 		.4byte	.LVL343
 12080 0f36 9C000000 		.4byte	.LVL345
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 315


 12081 0f3a 0100     		.2byte	0x1
 12082 0f3c 54       		.byte	0x54
 12083 0f3d 9C000000 		.4byte	.LVL345
 12084 0f41 A4000000 		.4byte	.LFE638
 12085 0f45 0100     		.2byte	0x1
 12086 0f47 50       		.byte	0x50
 12087 0f48 00000000 		.4byte	0
 12088 0f4c 00000000 		.4byte	0
 12089              	.LLST103:
 12090 0f50 00000000 		.4byte	.LVL346
 12091 0f54 21000000 		.4byte	.LVL351-1
 12092 0f58 0100     		.2byte	0x1
 12093 0f5a 50       		.byte	0x50
 12094 0f5b 21000000 		.4byte	.LVL351-1
 12095 0f5f D6000000 		.4byte	.LVL360
 12096 0f63 0100     		.2byte	0x1
 12097 0f65 54       		.byte	0x54
 12098 0f66 D6000000 		.4byte	.LVL360
 12099 0f6a E4000000 		.4byte	.LFE639
 12100 0f6e 0400     		.2byte	0x4
 12101 0f70 F3       		.byte	0xf3
 12102 0f71 01       		.uleb128 0x1
 12103 0f72 50       		.byte	0x50
 12104 0f73 9F       		.byte	0x9f
 12105 0f74 00000000 		.4byte	0
 12106 0f78 00000000 		.4byte	0
 12107              	.LLST104:
 12108 0f7c 00000000 		.4byte	.LVL346
 12109 0f80 21000000 		.4byte	.LVL351-1
 12110 0f84 0100     		.2byte	0x1
 12111 0f86 51       		.byte	0x51
 12112 0f87 21000000 		.4byte	.LVL351-1
 12113 0f8b 46000000 		.4byte	.LVL353
 12114 0f8f 0100     		.2byte	0x1
 12115 0f91 56       		.byte	0x56
 12116 0f92 46000000 		.4byte	.LVL353
 12117 0f96 4C000000 		.4byte	.LVL354
 12118 0f9a 0400     		.2byte	0x4
 12119 0f9c F3       		.byte	0xf3
 12120 0f9d 01       		.uleb128 0x1
 12121 0f9e 51       		.byte	0x51
 12122 0f9f 9F       		.byte	0x9f
 12123 0fa0 4C000000 		.4byte	.LVL354
 12124 0fa4 6C000000 		.4byte	.LVL355
 12125 0fa8 0100     		.2byte	0x1
 12126 0faa 56       		.byte	0x56
 12127 0fab 6C000000 		.4byte	.LVL355
 12128 0faf E4000000 		.4byte	.LFE639
 12129 0fb3 0400     		.2byte	0x4
 12130 0fb5 F3       		.byte	0xf3
 12131 0fb6 01       		.uleb128 0x1
 12132 0fb7 51       		.byte	0x51
 12133 0fb8 9F       		.byte	0x9f
 12134 0fb9 00000000 		.4byte	0
 12135 0fbd 00000000 		.4byte	0
 12136              	.LLST105:
 12137 0fc1 00000000 		.4byte	.LVL346
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 316


 12138 0fc5 21000000 		.4byte	.LVL351-1
 12139 0fc9 0100     		.2byte	0x1
 12140 0fcb 52       		.byte	0x52
 12141 0fcc 21000000 		.4byte	.LVL351-1
 12142 0fd0 E4000000 		.4byte	.LFE639
 12143 0fd4 0400     		.2byte	0x4
 12144 0fd6 F3       		.byte	0xf3
 12145 0fd7 01       		.uleb128 0x1
 12146 0fd8 52       		.byte	0x52
 12147 0fd9 9F       		.byte	0x9f
 12148 0fda 00000000 		.4byte	0
 12149 0fde 00000000 		.4byte	0
 12150              	.LLST106:
 12151 0fe2 00000000 		.4byte	.LVL346
 12152 0fe6 14000000 		.4byte	.LVL348
 12153 0fea 0100     		.2byte	0x1
 12154 0fec 53       		.byte	0x53
 12155 0fed 14000000 		.4byte	.LVL348
 12156 0ff1 16000000 		.4byte	.LVL349
 12157 0ff5 0400     		.2byte	0x4
 12158 0ff7 F3       		.byte	0xf3
 12159 0ff8 01       		.uleb128 0x1
 12160 0ff9 53       		.byte	0x53
 12161 0ffa 9F       		.byte	0x9f
 12162 0ffb 16000000 		.4byte	.LVL349
 12163 0fff 21000000 		.4byte	.LVL351-1
 12164 1003 0100     		.2byte	0x1
 12165 1005 53       		.byte	0x53
 12166 1006 21000000 		.4byte	.LVL351-1
 12167 100a D6000000 		.4byte	.LVL360
 12168 100e 0100     		.2byte	0x1
 12169 1010 57       		.byte	0x57
 12170 1011 D6000000 		.4byte	.LVL360
 12171 1015 E4000000 		.4byte	.LFE639
 12172 1019 0400     		.2byte	0x4
 12173 101b F3       		.byte	0xf3
 12174 101c 01       		.uleb128 0x1
 12175 101d 53       		.byte	0x53
 12176 101e 9F       		.byte	0x9f
 12177 101f 00000000 		.4byte	0
 12178 1023 00000000 		.4byte	0
 12179              	.LLST107:
 12180 1027 1E000000 		.4byte	.LVL350
 12181 102b D6000000 		.4byte	.LVL360
 12182 102f 0100     		.2byte	0x1
 12183 1031 54       		.byte	0x54
 12184 1032 D6000000 		.4byte	.LVL360
 12185 1036 E4000000 		.4byte	.LFE639
 12186 103a 0400     		.2byte	0x4
 12187 103c F3       		.byte	0xf3
 12188 103d 01       		.uleb128 0x1
 12189 103e 50       		.byte	0x50
 12190 103f 9F       		.byte	0x9f
 12191 1040 00000000 		.4byte	0
 12192 1044 00000000 		.4byte	0
 12193              	.LLST108:
 12194 1048 02000000 		.4byte	.LVL347
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 317


 12195 104c 6C000000 		.4byte	.LVL355
 12196 1050 0200     		.2byte	0x2
 12197 1052 31       		.byte	0x31
 12198 1053 9F       		.byte	0x9f
 12199 1054 6C000000 		.4byte	.LVL355
 12200 1058 D6000000 		.4byte	.LVL360
 12201 105c 0100     		.2byte	0x1
 12202 105e 55       		.byte	0x55
 12203 105f D6000000 		.4byte	.LVL360
 12204 1063 E4000000 		.4byte	.LFE639
 12205 1067 0100     		.2byte	0x1
 12206 1069 50       		.byte	0x50
 12207 106a 00000000 		.4byte	0
 12208 106e 00000000 		.4byte	0
 12209              	.LLST109:
 12210 1072 2E000000 		.4byte	.LVL352
 12211 1076 77000000 		.4byte	.LVL356-1
 12212 107a 0100     		.2byte	0x1
 12213 107c 53       		.byte	0x53
 12214 107d 00000000 		.4byte	0
 12215 1081 00000000 		.4byte	0
 12216              	.LLST110:
 12217 1085 00000000 		.4byte	.LVL361
 12218 1089 25000000 		.4byte	.LVL365-1
 12219 108d 0100     		.2byte	0x1
 12220 108f 50       		.byte	0x50
 12221 1090 25000000 		.4byte	.LVL365-1
 12222 1094 12010000 		.4byte	.LVL377
 12223 1098 0100     		.2byte	0x1
 12224 109a 54       		.byte	0x54
 12225 109b 12010000 		.4byte	.LVL377
 12226 109f 20010000 		.4byte	.LFE640
 12227 10a3 0400     		.2byte	0x4
 12228 10a5 F3       		.byte	0xf3
 12229 10a6 01       		.uleb128 0x1
 12230 10a7 50       		.byte	0x50
 12231 10a8 9F       		.byte	0x9f
 12232 10a9 00000000 		.4byte	0
 12233 10ad 00000000 		.4byte	0
 12234              	.LLST111:
 12235 10b1 00000000 		.4byte	.LVL361
 12236 10b5 25000000 		.4byte	.LVL365-1
 12237 10b9 0100     		.2byte	0x1
 12238 10bb 51       		.byte	0x51
 12239 10bc 25000000 		.4byte	.LVL365-1
 12240 10c0 B6000000 		.4byte	.LVL370
 12241 10c4 0100     		.2byte	0x1
 12242 10c6 58       		.byte	0x58
 12243 10c7 B6000000 		.4byte	.LVL370
 12244 10cb E0000000 		.4byte	.LVL373
 12245 10cf 0400     		.2byte	0x4
 12246 10d1 F3       		.byte	0xf3
 12247 10d2 01       		.uleb128 0x1
 12248 10d3 51       		.byte	0x51
 12249 10d4 9F       		.byte	0x9f
 12250 10d5 E0000000 		.4byte	.LVL373
 12251 10d9 EA000000 		.4byte	.LVL374
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 318


 12252 10dd 0100     		.2byte	0x1
 12253 10df 58       		.byte	0x58
 12254 10e0 EA000000 		.4byte	.LVL374
 12255 10e4 20010000 		.4byte	.LFE640
 12256 10e8 0400     		.2byte	0x4
 12257 10ea F3       		.byte	0xf3
 12258 10eb 01       		.uleb128 0x1
 12259 10ec 51       		.byte	0x51
 12260 10ed 9F       		.byte	0x9f
 12261 10ee 00000000 		.4byte	0
 12262 10f2 00000000 		.4byte	0
 12263              	.LLST112:
 12264 10f6 00000000 		.4byte	.LVL361
 12265 10fa 25000000 		.4byte	.LVL365-1
 12266 10fe 0100     		.2byte	0x1
 12267 1100 52       		.byte	0x52
 12268 1101 25000000 		.4byte	.LVL365-1
 12269 1105 20010000 		.4byte	.LFE640
 12270 1109 0400     		.2byte	0x4
 12271 110b F3       		.byte	0xf3
 12272 110c 01       		.uleb128 0x1
 12273 110d 52       		.byte	0x52
 12274 110e 9F       		.byte	0x9f
 12275 110f 00000000 		.4byte	0
 12276 1113 00000000 		.4byte	0
 12277              	.LLST113:
 12278 1117 00000000 		.4byte	.LVL361
 12279 111b 18000000 		.4byte	.LVL363
 12280 111f 0100     		.2byte	0x1
 12281 1121 53       		.byte	0x53
 12282 1122 18000000 		.4byte	.LVL363
 12283 1126 1A000000 		.4byte	.LVL364
 12284 112a 0400     		.2byte	0x4
 12285 112c F3       		.byte	0xf3
 12286 112d 01       		.uleb128 0x1
 12287 112e 53       		.byte	0x53
 12288 112f 9F       		.byte	0x9f
 12289 1130 1A000000 		.4byte	.LVL364
 12290 1134 25000000 		.4byte	.LVL365-1
 12291 1138 0100     		.2byte	0x1
 12292 113a 53       		.byte	0x53
 12293 113b 25000000 		.4byte	.LVL365-1
 12294 113f 12010000 		.4byte	.LVL377
 12295 1143 0100     		.2byte	0x1
 12296 1145 59       		.byte	0x59
 12297 1146 12010000 		.4byte	.LVL377
 12298 114a 20010000 		.4byte	.LFE640
 12299 114e 0400     		.2byte	0x4
 12300 1150 F3       		.byte	0xf3
 12301 1151 01       		.uleb128 0x1
 12302 1152 53       		.byte	0x53
 12303 1153 9F       		.byte	0x9f
 12304 1154 00000000 		.4byte	0
 12305 1158 00000000 		.4byte	0
 12306              	.LLST114:
 12307 115c 00000000 		.4byte	.LVL361
 12308 1160 12010000 		.4byte	.LVL377
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 319


 12309 1164 0200     		.2byte	0x2
 12310 1166 91       		.byte	0x91
 12311 1167 00       		.sleb128 0
 12312 1168 12010000 		.4byte	.LVL377
 12313 116c 20010000 		.4byte	.LFE640
 12314 1170 0200     		.2byte	0x2
 12315 1172 7D       		.byte	0x7d
 12316 1173 00       		.sleb128 0
 12317 1174 00000000 		.4byte	0
 12318 1178 00000000 		.4byte	0
 12319              	.LLST115:
 12320 117c 26000000 		.4byte	.LVL365
 12321 1180 12010000 		.4byte	.LVL377
 12322 1184 0100     		.2byte	0x1
 12323 1186 54       		.byte	0x54
 12324 1187 12010000 		.4byte	.LVL377
 12325 118b 20010000 		.4byte	.LFE640
 12326 118f 0400     		.2byte	0x4
 12327 1191 F3       		.byte	0xf3
 12328 1192 01       		.uleb128 0x1
 12329 1193 50       		.byte	0x50
 12330 1194 9F       		.byte	0x9f
 12331 1195 00000000 		.4byte	0
 12332 1199 00000000 		.4byte	0
 12333              	.LLST116:
 12334 119d 4C000000 		.4byte	.LVL366
 12335 11a1 96000000 		.4byte	.LVL368
 12336 11a5 0100     		.2byte	0x1
 12337 11a7 53       		.byte	0x53
 12338 11a8 00000000 		.4byte	0
 12339 11ac 00000000 		.4byte	0
 12340              	.LLST117:
 12341 11b0 06000000 		.4byte	.LVL362
 12342 11b4 90000000 		.4byte	.LVL367
 12343 11b8 0200     		.2byte	0x2
 12344 11ba 31       		.byte	0x31
 12345 11bb 9F       		.byte	0x9f
 12346 11bc 90000000 		.4byte	.LVL367
 12347 11c0 12010000 		.4byte	.LVL377
 12348 11c4 0100     		.2byte	0x1
 12349 11c6 55       		.byte	0x55
 12350 11c7 12010000 		.4byte	.LVL377
 12351 11cb 20010000 		.4byte	.LFE640
 12352 11cf 0100     		.2byte	0x1
 12353 11d1 50       		.byte	0x50
 12354 11d2 00000000 		.4byte	0
 12355 11d6 00000000 		.4byte	0
 12356              	.LLST118:
 12357 11da 08010000 		.4byte	.LVL375
 12358 11de 0C010000 		.4byte	.LVL376
 12359 11e2 0100     		.2byte	0x1
 12360 11e4 57       		.byte	0x57
 12361 11e5 00000000 		.4byte	0
 12362 11e9 00000000 		.4byte	0
 12363              	.LLST119:
 12364 11ed 00000000 		.4byte	.LVL378
 12365 11f1 1D000000 		.4byte	.LVL380-1
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 320


 12366 11f5 0100     		.2byte	0x1
 12367 11f7 50       		.byte	0x50
 12368 11f8 1D000000 		.4byte	.LVL380-1
 12369 11fc C0000000 		.4byte	.LVL389
 12370 1200 0100     		.2byte	0x1
 12371 1202 54       		.byte	0x54
 12372 1203 C0000000 		.4byte	.LVL389
 12373 1207 CC000000 		.4byte	.LFE641
 12374 120b 0400     		.2byte	0x4
 12375 120d F3       		.byte	0xf3
 12376 120e 01       		.uleb128 0x1
 12377 120f 50       		.byte	0x50
 12378 1210 9F       		.byte	0x9f
 12379 1211 00000000 		.4byte	0
 12380 1215 00000000 		.4byte	0
 12381              	.LLST120:
 12382 1219 00000000 		.4byte	.LVL378
 12383 121d 1D000000 		.4byte	.LVL380-1
 12384 1221 0100     		.2byte	0x1
 12385 1223 51       		.byte	0x51
 12386 1224 1D000000 		.4byte	.LVL380-1
 12387 1228 C0000000 		.4byte	.LVL389
 12388 122c 0100     		.2byte	0x1
 12389 122e 55       		.byte	0x55
 12390 122f C0000000 		.4byte	.LVL389
 12391 1233 CC000000 		.4byte	.LFE641
 12392 1237 0400     		.2byte	0x4
 12393 1239 F3       		.byte	0xf3
 12394 123a 01       		.uleb128 0x1
 12395 123b 51       		.byte	0x51
 12396 123c 9F       		.byte	0x9f
 12397 123d 00000000 		.4byte	0
 12398 1241 00000000 		.4byte	0
 12399              	.LLST121:
 12400 1245 1E000000 		.4byte	.LVL380
 12401 1249 C0000000 		.4byte	.LVL389
 12402 124d 0100     		.2byte	0x1
 12403 124f 54       		.byte	0x54
 12404 1250 C0000000 		.4byte	.LVL389
 12405 1254 CC000000 		.4byte	.LFE641
 12406 1258 0400     		.2byte	0x4
 12407 125a F3       		.byte	0xf3
 12408 125b 01       		.uleb128 0x1
 12409 125c 50       		.byte	0x50
 12410 125d 9F       		.byte	0x9f
 12411 125e 00000000 		.4byte	0
 12412 1262 00000000 		.4byte	0
 12413              	.LLST122:
 12414 1266 38000000 		.4byte	.LVL381
 12415 126a 4A000000 		.4byte	.LVL382
 12416 126e 0100     		.2byte	0x1
 12417 1270 53       		.byte	0x53
 12418 1271 00000000 		.4byte	0
 12419 1275 00000000 		.4byte	0
 12420              	.LLST123:
 12421 1279 BA000000 		.4byte	.LVL387
 12422 127d BE000000 		.4byte	.LVL388
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 321


 12423 1281 0100     		.2byte	0x1
 12424 1283 56       		.byte	0x56
 12425 1284 00000000 		.4byte	0
 12426 1288 00000000 		.4byte	0
 12427              	.LLST124:
 12428 128c 00000000 		.4byte	.LVL390
 12429 1290 0C000000 		.4byte	.LVL391
 12430 1294 0100     		.2byte	0x1
 12431 1296 50       		.byte	0x50
 12432 1297 00000000 		.4byte	0
 12433 129b 00000000 		.4byte	0
 12434              	.LLST125:
 12435 129f 0C000000 		.4byte	.LVL391
 12436 12a3 22000000 		.4byte	.LVL394
 12437 12a7 0100     		.2byte	0x1
 12438 12a9 54       		.byte	0x54
 12439 12aa 24000000 		.4byte	.LVL395
 12440 12ae 26000000 		.4byte	.LVL396
 12441 12b2 0100     		.2byte	0x1
 12442 12b4 54       		.byte	0x54
 12443 12b5 00000000 		.4byte	0
 12444 12b9 00000000 		.4byte	0
 12445              	.LLST126:
 12446 12bd 20000000 		.4byte	.LVL393
 12447 12c1 24000000 		.4byte	.LVL395
 12448 12c5 0200     		.2byte	0x2
 12449 12c7 31       		.byte	0x31
 12450 12c8 9F       		.byte	0x9f
 12451 12c9 26000000 		.4byte	.LVL396
 12452 12cd 2E000000 		.4byte	.LVL398
 12453 12d1 0100     		.2byte	0x1
 12454 12d3 54       		.byte	0x54
 12455 12d4 2E000000 		.4byte	.LVL398
 12456 12d8 34000000 		.4byte	.LFE642
 12457 12dc 0100     		.2byte	0x1
 12458 12de 50       		.byte	0x50
 12459 12df 00000000 		.4byte	0
 12460 12e3 00000000 		.4byte	0
 12461              		.section	.debug_aranges,"",%progbits
 12462 0000 9C010000 		.4byte	0x19c
 12463 0004 0200     		.2byte	0x2
 12464 0006 00000000 		.4byte	.Ldebug_info0
 12465 000a 04       		.byte	0x4
 12466 000b 00       		.byte	0
 12467 000c 0000     		.2byte	0
 12468 000e 0000     		.2byte	0
 12469 0010 00000000 		.4byte	.LFB605
 12470 0014 4C000000 		.4byte	.LFE605-.LFB605
 12471 0018 00000000 		.4byte	.LFB633
 12472 001c 2C000000 		.4byte	.LFE633-.LFB633
 12473 0020 00000000 		.4byte	.LFB632
 12474 0024 12000000 		.4byte	.LFE632-.LFB632
 12475 0028 00000000 		.4byte	.LFB596
 12476 002c 9E000000 		.4byte	.LFE596-.LFB596
 12477 0030 00000000 		.4byte	.LFB630
 12478 0034 58000000 		.4byte	.LFE630-.LFB630
 12479 0038 00000000 		.4byte	.LFB597
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 322


 12480 003c AC000000 		.4byte	.LFE597-.LFB597
 12481 0040 00000000 		.4byte	.LFB631
 12482 0044 44000000 		.4byte	.LFE631-.LFB631
 12483 0048 00000000 		.4byte	.LFB643
 12484 004c 68000000 		.4byte	.LFE643-.LFB643
 12485 0050 00000000 		.4byte	.LFB627
 12486 0054 2C000000 		.4byte	.LFE627-.LFB627
 12487 0058 00000000 		.4byte	.LFB595
 12488 005c 62000000 		.4byte	.LFE595-.LFB595
 12489 0060 00000000 		.4byte	.LFB598
 12490 0064 B0000000 		.4byte	.LFE598-.LFB598
 12491 0068 00000000 		.4byte	.LFB601
 12492 006c 20000000 		.4byte	.LFE601-.LFB601
 12493 0070 00000000 		.4byte	.LFB602
 12494 0074 30000000 		.4byte	.LFE602-.LFB602
 12495 0078 00000000 		.4byte	.LFB603
 12496 007c DC000000 		.4byte	.LFE603-.LFB603
 12497 0080 00000000 		.4byte	.LFB606
 12498 0084 88000000 		.4byte	.LFE606-.LFB606
 12499 0088 00000000 		.4byte	.LFB607
 12500 008c A4000000 		.4byte	.LFE607-.LFB607
 12501 0090 00000000 		.4byte	.LFB608
 12502 0094 7C000000 		.4byte	.LFE608-.LFB608
 12503 0098 00000000 		.4byte	.LFB609
 12504 009c 24000000 		.4byte	.LFE609-.LFB609
 12505 00a0 00000000 		.4byte	.LFB610
 12506 00a4 14000000 		.4byte	.LFE610-.LFB610
 12507 00a8 00000000 		.4byte	.LFB612
 12508 00ac 0C000000 		.4byte	.LFE612-.LFB612
 12509 00b0 00000000 		.4byte	.LFB613
 12510 00b4 14000000 		.4byte	.LFE613-.LFB613
 12511 00b8 00000000 		.4byte	.LFB614
 12512 00bc 0C000000 		.4byte	.LFE614-.LFB614
 12513 00c0 00000000 		.4byte	.LFB615
 12514 00c4 28000000 		.4byte	.LFE615-.LFB615
 12515 00c8 00000000 		.4byte	.LFB616
 12516 00cc FC000000 		.4byte	.LFE616-.LFB616
 12517 00d0 00000000 		.4byte	.LFB611
 12518 00d4 F0000000 		.4byte	.LFE611-.LFB611
 12519 00d8 00000000 		.4byte	.LFB599
 12520 00dc AC000000 		.4byte	.LFE599-.LFB599
 12521 00e0 00000000 		.4byte	.LFB600
 12522 00e4 50000000 		.4byte	.LFE600-.LFB600
 12523 00e8 00000000 		.4byte	.LFB617
 12524 00ec C8000000 		.4byte	.LFE617-.LFB617
 12525 00f0 00000000 		.4byte	.LFB604
 12526 00f4 B8000000 		.4byte	.LFE604-.LFB604
 12527 00f8 00000000 		.4byte	.LFB618
 12528 00fc 34000000 		.4byte	.LFE618-.LFB618
 12529 0100 00000000 		.4byte	.LFB619
 12530 0104 5C000000 		.4byte	.LFE619-.LFB619
 12531 0108 00000000 		.4byte	.LFB620
 12532 010c 3C000000 		.4byte	.LFE620-.LFB620
 12533 0110 00000000 		.4byte	.LFB621
 12534 0114 88000000 		.4byte	.LFE621-.LFB621
 12535 0118 00000000 		.4byte	.LFB622
 12536 011c 84000000 		.4byte	.LFE622-.LFB622
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 323


 12537 0120 00000000 		.4byte	.LFB623
 12538 0124 34000000 		.4byte	.LFE623-.LFB623
 12539 0128 00000000 		.4byte	.LFB624
 12540 012c 14000000 		.4byte	.LFE624-.LFB624
 12541 0130 00000000 		.4byte	.LFB625
 12542 0134 80000000 		.4byte	.LFE625-.LFB625
 12543 0138 00000000 		.4byte	.LFB626
 12544 013c 10000000 		.4byte	.LFE626-.LFB626
 12545 0140 00000000 		.4byte	.LFB628
 12546 0144 1C000000 		.4byte	.LFE628-.LFB628
 12547 0148 00000000 		.4byte	.LFB629
 12548 014c 20000000 		.4byte	.LFE629-.LFB629
 12549 0150 00000000 		.4byte	.LFB634
 12550 0154 0C000000 		.4byte	.LFE634-.LFB634
 12551 0158 00000000 		.4byte	.LFB635
 12552 015c 20000000 		.4byte	.LFE635-.LFB635
 12553 0160 00000000 		.4byte	.LFB636
 12554 0164 20000000 		.4byte	.LFE636-.LFB636
 12555 0168 00000000 		.4byte	.LFB637
 12556 016c 80000000 		.4byte	.LFE637-.LFB637
 12557 0170 00000000 		.4byte	.LFB638
 12558 0174 A4000000 		.4byte	.LFE638-.LFB638
 12559 0178 00000000 		.4byte	.LFB639
 12560 017c E4000000 		.4byte	.LFE639-.LFB639
 12561 0180 00000000 		.4byte	.LFB640
 12562 0184 20010000 		.4byte	.LFE640-.LFB640
 12563 0188 00000000 		.4byte	.LFB641
 12564 018c CC000000 		.4byte	.LFE641-.LFB641
 12565 0190 00000000 		.4byte	.LFB642
 12566 0194 34000000 		.4byte	.LFE642-.LFB642
 12567 0198 00000000 		.4byte	0
 12568 019c 00000000 		.4byte	0
 12569              		.section	.debug_ranges,"",%progbits
 12570              	.Ldebug_ranges0:
 12571 0000 0E000000 		.4byte	.LBB123
 12572 0004 58000000 		.4byte	.LBE123
 12573 0008 5C000000 		.4byte	.LBB127
 12574 000c DA000000 		.4byte	.LBE127
 12575 0010 00000000 		.4byte	0
 12576 0014 00000000 		.4byte	0
 12577 0018 4C000000 		.4byte	.LBB137
 12578 001c 62000000 		.4byte	.LBE137
 12579 0020 66000000 		.4byte	.LBB138
 12580 0024 6E000000 		.4byte	.LBE138
 12581 0028 76000000 		.4byte	.LBB139
 12582 002c 8C000000 		.4byte	.LBE139
 12583 0030 00000000 		.4byte	0
 12584 0034 00000000 		.4byte	0
 12585 0038 00000000 		.4byte	.LFB605
 12586 003c 4C000000 		.4byte	.LFE605
 12587 0040 00000000 		.4byte	.LFB633
 12588 0044 2C000000 		.4byte	.LFE633
 12589 0048 00000000 		.4byte	.LFB632
 12590 004c 12000000 		.4byte	.LFE632
 12591 0050 00000000 		.4byte	.LFB596
 12592 0054 9E000000 		.4byte	.LFE596
 12593 0058 00000000 		.4byte	.LFB630
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 324


 12594 005c 58000000 		.4byte	.LFE630
 12595 0060 00000000 		.4byte	.LFB597
 12596 0064 AC000000 		.4byte	.LFE597
 12597 0068 00000000 		.4byte	.LFB631
 12598 006c 44000000 		.4byte	.LFE631
 12599 0070 00000000 		.4byte	.LFB643
 12600 0074 68000000 		.4byte	.LFE643
 12601 0078 00000000 		.4byte	.LFB627
 12602 007c 2C000000 		.4byte	.LFE627
 12603 0080 00000000 		.4byte	.LFB595
 12604 0084 62000000 		.4byte	.LFE595
 12605 0088 00000000 		.4byte	.LFB598
 12606 008c B0000000 		.4byte	.LFE598
 12607 0090 00000000 		.4byte	.LFB601
 12608 0094 20000000 		.4byte	.LFE601
 12609 0098 00000000 		.4byte	.LFB602
 12610 009c 30000000 		.4byte	.LFE602
 12611 00a0 00000000 		.4byte	.LFB603
 12612 00a4 DC000000 		.4byte	.LFE603
 12613 00a8 00000000 		.4byte	.LFB606
 12614 00ac 88000000 		.4byte	.LFE606
 12615 00b0 00000000 		.4byte	.LFB607
 12616 00b4 A4000000 		.4byte	.LFE607
 12617 00b8 00000000 		.4byte	.LFB608
 12618 00bc 7C000000 		.4byte	.LFE608
 12619 00c0 00000000 		.4byte	.LFB609
 12620 00c4 24000000 		.4byte	.LFE609
 12621 00c8 00000000 		.4byte	.LFB610
 12622 00cc 14000000 		.4byte	.LFE610
 12623 00d0 00000000 		.4byte	.LFB612
 12624 00d4 0C000000 		.4byte	.LFE612
 12625 00d8 00000000 		.4byte	.LFB613
 12626 00dc 14000000 		.4byte	.LFE613
 12627 00e0 00000000 		.4byte	.LFB614
 12628 00e4 0C000000 		.4byte	.LFE614
 12629 00e8 00000000 		.4byte	.LFB615
 12630 00ec 28000000 		.4byte	.LFE615
 12631 00f0 00000000 		.4byte	.LFB616
 12632 00f4 FC000000 		.4byte	.LFE616
 12633 00f8 00000000 		.4byte	.LFB611
 12634 00fc F0000000 		.4byte	.LFE611
 12635 0100 00000000 		.4byte	.LFB599
 12636 0104 AC000000 		.4byte	.LFE599
 12637 0108 00000000 		.4byte	.LFB600
 12638 010c 50000000 		.4byte	.LFE600
 12639 0110 00000000 		.4byte	.LFB617
 12640 0114 C8000000 		.4byte	.LFE617
 12641 0118 00000000 		.4byte	.LFB604
 12642 011c B8000000 		.4byte	.LFE604
 12643 0120 00000000 		.4byte	.LFB618
 12644 0124 34000000 		.4byte	.LFE618
 12645 0128 00000000 		.4byte	.LFB619
 12646 012c 5C000000 		.4byte	.LFE619
 12647 0130 00000000 		.4byte	.LFB620
 12648 0134 3C000000 		.4byte	.LFE620
 12649 0138 00000000 		.4byte	.LFB621
 12650 013c 88000000 		.4byte	.LFE621
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 325


 12651 0140 00000000 		.4byte	.LFB622
 12652 0144 84000000 		.4byte	.LFE622
 12653 0148 00000000 		.4byte	.LFB623
 12654 014c 34000000 		.4byte	.LFE623
 12655 0150 00000000 		.4byte	.LFB624
 12656 0154 14000000 		.4byte	.LFE624
 12657 0158 00000000 		.4byte	.LFB625
 12658 015c 80000000 		.4byte	.LFE625
 12659 0160 00000000 		.4byte	.LFB626
 12660 0164 10000000 		.4byte	.LFE626
 12661 0168 00000000 		.4byte	.LFB628
 12662 016c 1C000000 		.4byte	.LFE628
 12663 0170 00000000 		.4byte	.LFB629
 12664 0174 20000000 		.4byte	.LFE629
 12665 0178 00000000 		.4byte	.LFB634
 12666 017c 0C000000 		.4byte	.LFE634
 12667 0180 00000000 		.4byte	.LFB635
 12668 0184 20000000 		.4byte	.LFE635
 12669 0188 00000000 		.4byte	.LFB636
 12670 018c 20000000 		.4byte	.LFE636
 12671 0190 00000000 		.4byte	.LFB637
 12672 0194 80000000 		.4byte	.LFE637
 12673 0198 00000000 		.4byte	.LFB638
 12674 019c A4000000 		.4byte	.LFE638
 12675 01a0 00000000 		.4byte	.LFB639
 12676 01a4 E4000000 		.4byte	.LFE639
 12677 01a8 00000000 		.4byte	.LFB640
 12678 01ac 20010000 		.4byte	.LFE640
 12679 01b0 00000000 		.4byte	.LFB641
 12680 01b4 CC000000 		.4byte	.LFE641
 12681 01b8 00000000 		.4byte	.LFB642
 12682 01bc 34000000 		.4byte	.LFE642
 12683 01c0 00000000 		.4byte	0
 12684 01c4 00000000 		.4byte	0
 12685              		.section	.debug_line,"",%progbits
 12686              	.Ldebug_line0:
 12687 0000 7E0E0000 		.section	.debug_str,"MS",%progbits,1
 12687      0200FE04 
 12687      00000201 
 12687      FB0E0D00 
 12687      01010101 
 12688              	.LASF429:
 12689 0000 764C6973 		.ascii	"vListInsert\000"
 12689      74496E73 
 12689      65727400 
 12690              	.LASF213:
 12691 000c 43595F42 		.ascii	"CY_BLE_CTS_CURRENT_TIME\000"
 12691      4C455F43 
 12691      54535F43 
 12691      55525245 
 12691      4E545F54 
 12692              	.LASF411:
 12693 0024 63795F62 		.ascii	"cy_ble_connState\000"
 12693      6C655F63 
 12693      6F6E6E53 
 12693      74617465 
 12693      00
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 326


 12694              	.LASF427:
 12695 0035 76506F72 		.ascii	"vPortExitCritical\000"
 12695      74457869 
 12695      74437269 
 12695      74696361 
 12695      6C00
 12696              	.LASF242:
 12697 0047 75784E75 		.ascii	"uxNumberOfItems\000"
 12697      6D626572 
 12697      4F664974 
 12697      656D7300 
 12698              	.LASF191:
 12699 0057 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_READ\000"
 12699      4C455F45 
 12699      56545F4C 
 12699      32434150 
 12699      5F434246 
 12700              	.LASF37:
 12701 0077 63795F63 		.ascii	"cy_cb_scb_spi_handle_events_t\000"
 12701      625F7363 
 12701      625F7370 
 12701      695F6861 
 12701      6E646C65 
 12702              	.LASF169:
 12703 0095 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BLOB_RSP\000"
 12703      4C455F45 
 12703      56545F47 
 12703      41545443 
 12703      5F524541 
 12704              	.LASF138:
 12705 00b4 43595F42 		.ascii	"CY_BLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 12705      4C455F45 
 12705      56545F47 
 12705      4150505F 
 12705      41445645 
 12706              	.LASF220:
 12707 00dd 43595F42 		.ascii	"CY_BLE_SRVI_COUNT\000"
 12707      4C455F53 
 12707      5256495F 
 12707      434F554E 
 12707      5400
 12708              	.LASF193:
 12709 00ef 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 12709      4C455F45 
 12709      56545F4C 
 12709      32434150 
 12709      5F434246 
 12710              	.LASF85:
 12711 0113 43595F42 		.ascii	"CY_BLE_EVT_PENDING_FLASH_WRITE\000"
 12711      4C455F45 
 12711      56545F50 
 12711      454E4449 
 12711      4E475F46 
 12712              	.LASF123:
 12713 0132 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_DECRYPT_COMPLETE\000"
 12713      4C455F45 
 12713      56545F41 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 327


 12713      45535F43 
 12713      434D5F44 
 12714              	.LASF177:
 12715 0156 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 12715      4C455F45 
 12715      56545F47 
 12715      41545443 
 12715      5F48414E 
 12716              	.LASF416:
 12717 0178 43595F45 		.ascii	"CY_EINK_SPIM_context\000"
 12717      494E4B5F 
 12717      5350494D 
 12717      5F636F6E 
 12717      74657874 
 12718              	.LASF434:
 12719 018d 78506F72 		.ascii	"xPortStartScheduler\000"
 12719      74537461 
 12719      72745363 
 12719      68656475 
 12719      6C657200 
 12720              	.LASF27:
 12721 01a1 666F726D 		.ascii	"format\000"
 12721      617400
 12722              	.LASF266:
 12723 01a8 75785072 		.ascii	"uxPriority\000"
 12723      696F7269 
 12723      747900
 12724              	.LASF341:
 12725 01b3 7078436F 		.ascii	"pxConstList\000"
 12725      6E73744C 
 12725      69737400 
 12726              	.LASF51:
 12727 01bf 74785374 		.ascii	"txStatus\000"
 12727      61747573 
 12727      00
 12728              	.LASF262:
 12729 01c8 74736B54 		.ascii	"tskTaskControlBlock\000"
 12729      61736B43 
 12729      6F6E7472 
 12729      6F6C426C 
 12729      6F636B00 
 12730              	.LASF117:
 12731 01dc 43595F42 		.ascii	"CY_BLE_EVT_SET_TX_PWR_COMPLETE\000"
 12731      4C455F45 
 12731      56545F53 
 12731      45545F54 
 12731      585F5057 
 12732              	.LASF330:
 12733 01fb 75785065 		.ascii	"uxPendedCounts\000"
 12733      6E646564 
 12733      436F756E 
 12733      747300
 12734              	.LASF361:
 12735 020a 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 12735      6B536574 
 12735      54687265 
 12735      61644C6F 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 328


 12735      63616C53 
 12736              	.LASF154:
 12737 022c 43595F42 		.ascii	"CY_BLE_EVT_GAP_GEN_SET_LOCAL_P256_KEYS_COMPLETE\000"
 12737      4C455F45 
 12737      56545F47 
 12737      41505F47 
 12737      454E5F53 
 12738              	.LASF375:
 12739 025c 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 12739      7473546F 
 12739      436C6561 
 12739      724F6E45 
 12739      78697400 
 12740              	.LASF66:
 12741 0270 73616D70 		.ascii	"sampleTime01\000"
 12741      6C655469 
 12741      6D653031 
 12741      00
 12742              	.LASF442:
 12743 027d 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 12743      736B4765 
 12743      744E756D 
 12743      6265724F 
 12743      66546173 
 12744              	.LASF368:
 12745 0294 78546173 		.ascii	"xTaskGetSchedulerState\000"
 12745      6B476574 
 12745      53636865 
 12745      64756C65 
 12745      72537461 
 12746              	.LASF384:
 12747 02ab 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 12747      67686572 
 12747      5072696F 
 12747      72697479 
 12747      5461736B 
 12748              	.LASF247:
 12749 02c5 654E6F41 		.ascii	"eNoAction\000"
 12749      6374696F 
 12749      6E00
 12750              	.LASF29:
 12751 02cf 6461794F 		.ascii	"dayOfMonth\000"
 12751      664D6F6E 
 12751      746800
 12752              	.LASF192:
 12753 02da 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 12753      4C455F45 
 12753      56545F4C 
 12753      32434150 
 12753      5F434246 
 12754              	.LASF0:
 12755 02fe 756E7369 		.ascii	"unsigned int\000"
 12755      676E6564 
 12755      20696E74 
 12755      00
 12756              	.LASF345:
 12757 030b 70784576 		.ascii	"pxEventList\000"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 329


 12757      656E744C 
 12757      69737400 
 12758              	.LASF399:
 12759 0317 78536368 		.ascii	"xSchedulerRunning\000"
 12759      6564756C 
 12759      65725275 
 12759      6E6E696E 
 12759      6700
 12760              	.LASF410:
 12761 0329 63795F62 		.ascii	"cy_ble_connHandle\000"
 12761      6C655F63 
 12761      6F6E6E48 
 12761      616E646C 
 12761      6500
 12762              	.LASF243:
 12763 033b 7078496E 		.ascii	"pxIndex\000"
 12763      64657800 
 12764              	.LASF20:
 12765 0343 75696E74 		.ascii	"uint32_t\000"
 12765      33325F74 
 12765      00
 12766              	.LASF228:
 12767 034c 53746163 		.ascii	"StackType_t\000"
 12767      6B547970 
 12767      655F7400 
 12768              	.LASF62:
 12769 0358 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 12769      41525F52 
 12769      414E4745 
 12769      5F434F4E 
 12769      445F4F55 
 12770              	.LASF33:
 12771 0372 63795F73 		.ascii	"cy_stc_rtc_dst_format_t\000"
 12771      74635F72 
 12771      74635F64 
 12771      73745F66 
 12771      6F726D61 
 12772              	.LASF260:
 12773 038a 756C5061 		.ascii	"ulParameters\000"
 12773      72616D65 
 12773      74657273 
 12773      00
 12774              	.LASF44:
 12775 0397 74784275 		.ascii	"txBufIdx\000"
 12775      66496478 
 12775      00
 12776              	.LASF394:
 12777 03a0 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 12777      6C657465 
 12777      64546173 
 12777      6B735761 
 12777      6974696E 
 12778              	.LASF86:
 12779 03bd 43595F42 		.ascii	"CY_BLE_EVT_FLASH_CORRUPT\000"
 12779      4C455F45 
 12779      56545F46 
 12779      4C415348 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 330


 12779      5F434F52 
 12780              	.LASF10:
 12781 03d6 5F5F696E 		.ascii	"__int32_t\000"
 12781      7433325F 
 12781      7400
 12782              	.LASF36:
 12783 03e0 63795F73 		.ascii	"cy_stc_rtc_dst_t\000"
 12783      74635F72 
 12783      74635F64 
 12783      73745F74 
 12783      00
 12784              	.LASF387:
 12785 03f1 70785265 		.ascii	"pxReadyTasksLists\000"
 12785      61647954 
 12785      61736B73 
 12785      4C697374 
 12785      7300
 12786              	.LASF58:
 12787 0403 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
 12787      74635F73 
 12787      63625F75 
 12787      6172745F 
 12787      636F6E74 
 12788              	.LASF133:
 12789 041d 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_REQ\000"
 12789      4C455F45 
 12789      56545F47 
 12789      41505F41 
 12789      5554485F 
 12790              	.LASF221:
 12791 0435 6368616E 		.ascii	"channelBase\000"
 12791      6E656C42 
 12791      61736500 
 12792              	.LASF212:
 12793 0441 63795F65 		.ascii	"cy_en_ble_conn_state_t\000"
 12793      6E5F626C 
 12793      655F636F 
 12793      6E6E5F73 
 12793      74617465 
 12794              	.LASF166:
 12795 0458 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_INFO_RSP\000"
 12795      4C455F45 
 12795      56545F47 
 12795      41545443 
 12795      5F46494E 
 12796              	.LASF351:
 12797 0477 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 12797      6B52656D 
 12797      6F766546 
 12797      726F6D55 
 12797      6E6F7264 
 12798              	.LASF110:
 12799 0499 43595F42 		.ascii	"CY_BLE_EVT_SET_PRIVACY_MODE_COMPLETE\000"
 12799      4C455F45 
 12799      56545F53 
 12799      45545F50 
 12799      52495641 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 331


 12800              	.LASF223:
 12801 04be 6877436F 		.ascii	"hwConfigStc\000"
 12801      6E666967 
 12801      53746300 
 12802              	.LASF135:
 12803 04ca 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 12803      4C455F45 
 12803      56545F47 
 12803      41505F50 
 12803      4153534B 
 12804              	.LASF241:
 12805 04f1 784C4953 		.ascii	"xLIST\000"
 12805      5400
 12806              	.LASF382:
 12807 04f7 75634F72 		.ascii	"ucOriginalNotifyState\000"
 12807      6967696E 
 12807      616C4E6F 
 12807      74696679 
 12807      53746174 
 12808              	.LASF353:
 12809 050d 76546173 		.ascii	"vTaskSetTimeOutState\000"
 12809      6B536574 
 12809      54696D65 
 12809      4F757453 
 12809      74617465 
 12810              	.LASF393:
 12811 0522 78546173 		.ascii	"xTasksWaitingTermination\000"
 12811      6B735761 
 12811      6974696E 
 12811      67546572 
 12811      6D696E61 
 12812              	.LASF325:
 12813 053b 78546173 		.ascii	"xTaskIncrementTick\000"
 12813      6B496E63 
 12813      72656D65 
 12813      6E745469 
 12813      636B00
 12814              	.LASF170:
 12815 054e 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_MULTI_RSP\000"
 12815      4C455F45 
 12815      56545F47 
 12815      41545443 
 12815      5F524541 
 12816              	.LASF160:
 12817 056e 43595F42 		.ascii	"CY_BLE_EVT_GATT_CONNECT_IND\000"
 12817      4C455F45 
 12817      56545F47 
 12817      4154545F 
 12817      434F4E4E 
 12818              	.LASF199:
 12819 058a 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOPPED\000"
 12819      4C455F41 
 12819      44565F53 
 12819      54415445 
 12819      5F53544F 
 12820              	.LASF389:
 12821 05a3 7844656C 		.ascii	"xDelayedTaskList2\000"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 332


 12821      61796564 
 12821      5461736B 
 12821      4C697374 
 12821      3200
 12822              	.LASF73:
 12823 05b5 73617449 		.ascii	"satIntrMask\000"
 12823      6E74724D 
 12823      61736B00 
 12824              	.LASF254:
 12825 05c1 784F7665 		.ascii	"xOverflowCount\000"
 12825      72666C6F 
 12825      77436F75 
 12825      6E7400
 12826              	.LASF277:
 12827 05d0 76506F72 		.ascii	"vPortSetBASEPRI\000"
 12827      74536574 
 12827      42415345 
 12827      50524900 
 12828              	.LASF425:
 12829 05e0 76506F72 		.ascii	"vPortEnterCritical\000"
 12829      74456E74 
 12829      65724372 
 12829      69746963 
 12829      616C00
 12830              	.LASF264:
 12831 05f3 78537461 		.ascii	"xStateListItem\000"
 12831      74654C69 
 12831      73744974 
 12831      656D00
 12832              	.LASF108:
 12833 0602 43595F42 		.ascii	"CY_BLE_EVT_SET_PHY_COMPLETE\000"
 12833      4C455F45 
 12833      56545F53 
 12833      45545F50 
 12833      48595F43 
 12834              	.LASF182:
 12835 061e 43595F42 		.ascii	"CY_BLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 12835      4C455F45 
 12835      56545F47 
 12835      41545453 
 12835      5F524541 
 12836              	.LASF430:
 12837 0648 76417070 		.ascii	"vApplicationIdleHook\000"
 12837      6C696361 
 12837      74696F6E 
 12837      49646C65 
 12837      486F6F6B 
 12838              	.LASF437:
 12839 065d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 12839      43313120 
 12839      352E342E 
 12839      31203230 
 12839      31363036 
 12840 0690 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 12840      20726576 
 12840      6973696F 
 12840      6E203233 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 333


 12840      37373135 
 12841 06c3 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 12841      70202D6D 
 12841      6670753D 
 12841      66707634 
 12841      2D73702D 
 12842 06f6 65637469 		.ascii	"ections -ffat-lto-objects\000"
 12842      6F6E7320 
 12842      2D666661 
 12842      742D6C74 
 12842      6F2D6F62 
 12843              	.LASF153:
 12844 0710 43595F42 		.ascii	"CY_BLE_EVT_GAP_RESOLVE_DEVICE_COMPLETE\000"
 12844      4C455F45 
 12844      56545F47 
 12844      41505F52 
 12844      45534F4C 
 12845              	.LASF59:
 12846 0737 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 12846      41525F52 
 12846      414E4745 
 12846      5F434F4E 
 12846      445F4245 
 12847              	.LASF205:
 12848 074f 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCONNECTED_DISCOVERED\000"
 12848      4C455F43 
 12848      4F4E4E5F 
 12848      53544154 
 12848      455F434C 
 12849              	.LASF315:
 12850 0780 78546173 		.ascii	"xTaskToResume\000"
 12850      6B546F52 
 12850      6573756D 
 12850      6500
 12851              	.LASF357:
 12852 078e 70785469 		.ascii	"pxTicksToWait\000"
 12852      636B7354 
 12852      6F576169 
 12852      7400
 12853              	.LASF163:
 12854 079c 43595F42 		.ascii	"CY_BLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 12854      4C455F45 
 12854      56545F47 
 12854      41545443 
 12854      5F584348 
 12855              	.LASF179:
 12856 07bb 43595F42 		.ascii	"CY_BLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 12856      4C455F45 
 12856      56545F47 
 12856      41545453 
 12856      5F48414E 
 12857              	.LASF52:
 12858 07dd 72785374 		.ascii	"rxStatus\000"
 12858      61747573 
 12858      00
 12859              	.LASF298:
 12860 07e6 78436F6E 		.ascii	"xConstTickCount\000"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 334


 12860      73745469 
 12860      636B436F 
 12860      756E7400 
 12861              	.LASF433:
 12862 07f6 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 12862      65724372 
 12862      65617465 
 12862      54696D65 
 12862      72546173 
 12863              	.LASF168:
 12864 080c 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_RSP\000"
 12864      4C455F45 
 12864      56545F47 
 12864      41545443 
 12864      5F524541 
 12865              	.LASF272:
 12866 0826 74736B54 		.ascii	"tskTCB\000"
 12866      434200
 12867              	.LASF383:
 12868 082d 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 12868      6B47656E 
 12868      65726963 
 12868      4E6F7469 
 12868      66794672 
 12869              	.LASF230:
 12870 0847 55426173 		.ascii	"UBaseType_t\000"
 12870      65547970 
 12870      655F7400 
 12871              	.LASF204:
 12872 0853 43595F42 		.ascii	"CY_BLE_CONN_STATE_DISCONNECTED\000"
 12872      4C455F43 
 12872      4F4E4E5F 
 12872      53544154 
 12872      455F4449 
 12873              	.LASF100:
 12874 0872 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_ENABLE_COMPLETE\000"
 12874      4C455F45 
 12874      56545F53 
 12874      45545F52 
 12874      50415F45 
 12875              	.LASF313:
 12876 0895 78596965 		.ascii	"xYieldRequired\000"
 12876      6C645265 
 12876      71756972 
 12876      656400
 12877              	.LASF81:
 12878 08a4 43595F42 		.ascii	"CY_BLE_EVT_STACK_ON\000"
 12878      4C455F45 
 12878      56545F53 
 12878      5441434B 
 12878      5F4F4E00 
 12879              	.LASF111:
 12880 08b8 43595F42 		.ascii	"CY_BLE_EVT_LL_CNTRL_PROC_PENDING_COMPLETE\000"
 12880      4C455F45 
 12880      56545F4C 
 12880      4C5F434E 
 12880      54524C5F 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 335


 12881              	.LASF275:
 12882 08e2 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 12882      6967696E 
 12882      616C4241 
 12882      53455052 
 12882      4900
 12883              	.LASF377:
 12884 08f4 78546173 		.ascii	"xTaskGenericNotify\000"
 12884      6B47656E 
 12884      65726963 
 12884      4E6F7469 
 12884      667900
 12885              	.LASF178:
 12886 0907 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 12886      4C455F45 
 12886      56545F47 
 12886      41545443 
 12886      5F48414E 
 12887              	.LASF14:
 12888 0929 6C6F6E67 		.ascii	"long long unsigned int\000"
 12888      206C6F6E 
 12888      6720756E 
 12888      7369676E 
 12888      65642069 
 12889              	.LASF97:
 12890 0940 43595F42 		.ascii	"CY_BLE_EVT_GET_PEER_RPA_COMPLETE\000"
 12890      4C455F45 
 12890      56545F47 
 12890      45545F50 
 12890      4545525F 
 12891              	.LASF415:
 12892 0961 5254435F 		.ascii	"RTC_dstConfig\000"
 12892      64737443 
 12892      6F6E6669 
 12892      6700
 12893              	.LASF350:
 12894 096f 7078556E 		.ascii	"pxUnblockedTCB\000"
 12894      626C6F63 
 12894      6B656454 
 12894      434200
 12895              	.LASF80:
 12896 097e 43595F42 		.ascii	"CY_BLE_EVT_INVALID\000"
 12896      4C455F45 
 12896      56545F49 
 12896      4E56414C 
 12896      494400
 12897              	.LASF301:
 12898 0991 75735374 		.ascii	"usStackDepth\000"
 12898      61636B44 
 12898      65707468 
 12898      00
 12899              	.LASF371:
 12900 099e 78436C65 		.ascii	"xClearCountOnExit\000"
 12900      6172436F 
 12900      756E744F 
 12900      6E457869 
 12900      7400
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 336


 12901              	.LASF83:
 12902 09b0 43595F42 		.ascii	"CY_BLE_EVT_STACK_BUSY_STATUS\000"
 12902      4C455F45 
 12902      56545F53 
 12902      5441434B 
 12902      5F425553 
 12903              	.LASF50:
 12904 09cd 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 12904      74635F73 
 12904      63625F75 
 12904      6172745F 
 12904      636F6E74 
 12905              	.LASF98:
 12906 09e5 43595F42 		.ascii	"CY_BLE_EVT_GET_LOCAL_RPA_COMPLETE\000"
 12906      4C455F45 
 12906      56545F47 
 12906      45545F4C 
 12906      4F43414C 
 12907              	.LASF358:
 12908 0a07 78456C61 		.ascii	"xElapsedTime\000"
 12908      70736564 
 12908      54696D65 
 12908      00
 12909              	.LASF222:
 12910 0a14 6E756D43 		.ascii	"numChannels\000"
 12910      68616E6E 
 12910      656C7300 
 12911              	.LASF250:
 12912 0a20 65536574 		.ascii	"eSetValueWithOverwrite\000"
 12912      56616C75 
 12912      65576974 
 12912      684F7665 
 12912      72777269 
 12913              	.LASF180:
 12914 0a37 43595F42 		.ascii	"CY_BLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 12914      4C455F45 
 12914      56545F47 
 12914      41545453 
 12914      5F444154 
 12915              	.LASF95:
 12916 0a5c 43595F42 		.ascii	"CY_BLE_EVT_GET_DATA_LENGTH_COMPLETE\000"
 12916      4C455F45 
 12916      56545F47 
 12916      45545F44 
 12916      4154415F 
 12917              	.LASF322:
 12918 0a80 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 12918      6B476574 
 12918      5469636B 
 12918      436F756E 
 12918      7446726F 
 12919              	.LASF307:
 12920 0a99 75785361 		.ascii	"uxSavedInterruptState\000"
 12920      76656449 
 12920      6E746572 
 12920      72757074 
 12920      53746174 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 337


 12921              	.LASF374:
 12922 0aaf 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 12922      7473546F 
 12922      436C6561 
 12922      724F6E45 
 12922      6E747279 
 12923              	.LASF203:
 12924 0ac4 63795F65 		.ascii	"cy_en_ble_adv_state_t\000"
 12924      6E5F626C 
 12924      655F6164 
 12924      765F7374 
 12924      6174655F 
 12925              	.LASF115:
 12926 0ada 43595F42 		.ascii	"CY_BLE_EVT_GET_RSSI_COMPLETE\000"
 12926      4C455F45 
 12926      56545F47 
 12926      45545F52 
 12926      5353495F 
 12927              	.LASF392:
 12928 0af7 7850656E 		.ascii	"xPendingReadyList\000"
 12928      64696E67 
 12928      52656164 
 12928      794C6973 
 12928      7400
 12929              	.LASF232:
 12930 0b09 784C4953 		.ascii	"xLIST_ITEM\000"
 12930      545F4954 
 12930      454D00
 12931              	.LASF316:
 12932 0b14 78546173 		.ascii	"xTaskResumeFromISR\000"
 12932      6B526573 
 12932      756D6546 
 12932      726F6D49 
 12932      535200
 12933              	.LASF68:
 12934 0b27 72616E67 		.ascii	"rangeThres\000"
 12934      65546872 
 12934      657300
 12935              	.LASF200:
 12936 0b32 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADV_INITIATED\000"
 12936      4C455F41 
 12936      44565F53 
 12936      54415445 
 12936      5F414456 
 12937              	.LASF8:
 12938 0b51 5F5F7569 		.ascii	"__uint16_t\000"
 12938      6E743136 
 12938      5F7400
 12939              	.LASF26:
 12940 0b5c 63795F65 		.ascii	"cy_en_rtc_dst_format_t\000"
 12940      6E5F7274 
 12940      635F6473 
 12940      745F666F 
 12940      726D6174 
 12941              	.LASF365:
 12942 0b73 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 12942      736B4765 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 338


 12942      74546872 
 12942      6561644C 
 12942      6F63616C 
 12943              	.LASF366:
 12944 0b96 70765265 		.ascii	"pvReturn\000"
 12944      7475726E 
 12944      00
 12945              	.LASF327:
 12946 0b9f 70785465 		.ascii	"pxTemp\000"
 12946      6D7000
 12947              	.LASF141:
 12948 0ba6 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENCRYPT_CHANGE\000"
 12948      4C455F45 
 12948      56545F47 
 12948      41505F45 
 12948      4E435259 
 12949              	.LASF113:
 12950 0bc4 43595F42 		.ascii	"CY_BLE_EVT_SET_DEVICE_ADDR_COMPLETE\000"
 12950      4C455F45 
 12950      56545F53 
 12950      45545F44 
 12950      45564943 
 12951              	.LASF79:
 12952 0be8 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 12952      74635F73 
 12952      61725F63 
 12952      6F6E6669 
 12952      675F7400 
 12953              	.LASF197:
 12954 0bfc 61747449 		.ascii	"attId\000"
 12954      6400
 12955              	.LASF64:
 12956 0c02 6374726C 		.ascii	"ctrl\000"
 12956      00
 12957              	.LASF359:
 12958 0c07 76546173 		.ascii	"vTaskSuspendAll\000"
 12958      6B537573 
 12958      70656E64 
 12958      416C6C00 
 12959              	.LASF208:
 12960 0c17 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_INCL_DISCOVERING\000"
 12960      4C455F43 
 12960      4F4E4E5F 
 12960      53544154 
 12960      455F434C 
 12961              	.LASF147:
 12962 0c41 43595F42 		.ascii	"CY_BLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 12962      4C455F45 
 12962      56545F47 
 12962      41505F4F 
 12962      4F425F47 
 12963              	.LASF269:
 12964 0c6b 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 12964      72656164 
 12964      4C6F6361 
 12964      6C53746F 
 12964      72616765 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 339


 12965              	.LASF256:
 12966 0c88 54696D65 		.ascii	"TimeOut_t\000"
 12966      4F75745F 
 12966      7400
 12967              	.LASF60:
 12968 0c92 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 12968      41525F52 
 12968      414E4745 
 12968      5F434F4E 
 12968      445F494E 
 12969              	.LASF39:
 12970 0cab 72784275 		.ascii	"rxBuf\000"
 12970      6600
 12971              	.LASF215:
 12972 0cb1 43595F42 		.ascii	"CY_BLE_CTS_REFERENCE_TIME_INFO\000"
 12972      4C455F43 
 12972      54535F52 
 12972      45464552 
 12972      454E4345 
 12973              	.LASF139:
 12974 0cd0 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_CONNECTED\000"
 12974      4C455F45 
 12974      56545F47 
 12974      41505F44 
 12974      45564943 
 12975              	.LASF112:
 12976 0cf0 43595F42 		.ascii	"CY_BLE_EVT_SOFT_RESET_COMPLETE\000"
 12976      4C455F45 
 12976      56545F53 
 12976      4F46545F 
 12976      52455345 
 12977              	.LASF252:
 12978 0d0f 654E6F74 		.ascii	"eNotifyAction\000"
 12978      69667941 
 12978      6374696F 
 12978      6E00
 12979              	.LASF174:
 12980 0d1d 43595F42 		.ascii	"CY_BLE_EVT_GATTS_PREP_WRITE_REQ\000"
 12980      4C455F45 
 12980      56545F47 
 12980      41545453 
 12980      5F505245 
 12981              	.LASF4:
 12982 0d3d 73697A65 		.ascii	"size_t\000"
 12982      5F7400
 12983              	.LASF45:
 12984 0d44 63624576 		.ascii	"cbEvents\000"
 12984      656E7473 
 12984      00
 12985              	.LASF249:
 12986 0d4d 65496E63 		.ascii	"eIncrement\000"
 12986      72656D65 
 12986      6E7400
 12987              	.LASF22:
 12988 0d58 646F7562 		.ascii	"double\000"
 12988      6C6500
 12989              	.LASF239:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 340


 12990 0d5f 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 12990      495F4C49 
 12990      53545F49 
 12990      54454D00 
 12991              	.LASF348:
 12992 0d6f 78576169 		.ascii	"xWaitIndefinitely\000"
 12992      74496E64 
 12992      6566696E 
 12992      6974656C 
 12992      7900
 12993              	.LASF145:
 12994 0d81 43595F42 		.ascii	"CY_BLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 12994      4C455F45 
 12994      56545F47 
 12994      41505F4E 
 12994      554D4552 
 12995              	.LASF35:
 12996 0dab 73746F70 		.ascii	"stopDst\000"
 12996      44737400 
 12997              	.LASF195:
 12998 0db3 43595F42 		.ascii	"CY_BLE_EVT_MAX\000"
 12998      4C455F45 
 12998      56545F4D 
 12998      415800
 12999              	.LASF397:
 13000 0dc2 78546963 		.ascii	"xTickCount\000"
 13000      6B436F75 
 13000      6E7400
 13001              	.LASF167:
 13002 0dcd 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 13002      4C455F45 
 13002      56545F47 
 13002      41545443 
 13002      5F46494E 
 13003              	.LASF30:
 13004 0df5 7765656B 		.ascii	"weekOfMonth\000"
 13004      4F664D6F 
 13004      6E746800 
 13005              	.LASF190:
 13006 0e01 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 13006      4C455F45 
 13006      56545F4C 
 13006      32434150 
 13006      5F434246 
 13007              	.LASF319:
 13008 0e23 76546173 		.ascii	"vTaskEndScheduler\000"
 13008      6B456E64 
 13008      53636865 
 13008      64756C65 
 13008      7200
 13009              	.LASF304:
 13010 0e35 75785461 		.ascii	"uxTaskPriorityGet\000"
 13010      736B5072 
 13010      696F7269 
 13010      74794765 
 13010      7400
 13011              	.LASF120:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 341


 13012 0e47 43595F42 		.ascii	"CY_BLE_EVT_RANDOM_NUM_GEN_COMPLETE\000"
 13012      4C455F45 
 13012      56545F52 
 13012      414E444F 
 13012      4D5F4E55 
 13013              	.LASF201:
 13014 0e6a 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADVERTISING\000"
 13014      4C455F41 
 13014      44565F53 
 13014      54415445 
 13014      5F414456 
 13015              	.LASF426:
 13016 0e87 764C6973 		.ascii	"vListInsertEnd\000"
 13016      74496E73 
 13016      65727445 
 13016      6E6400
 13017              	.LASF150:
 13018 0e96 43595F42 		.ascii	"CY_BLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 13018      4C455F45 
 13018      56545F47 
 13018      41505F53 
 13018      4D505F4E 
 13019              	.LASF395:
 13020 0ebe 78537573 		.ascii	"xSuspendedTaskList\000"
 13020      70656E64 
 13020      65645461 
 13020      736B4C69 
 13020      737400
 13021              	.LASF93:
 13022 0ed1 43595F42 		.ascii	"CY_BLE_EVT_SET_DATA_LENGTH_COMPLETE\000"
 13022      4C455F45 
 13022      56545F53 
 13022      45545F44 
 13022      4154415F 
 13023              	.LASF285:
 13024 0ef5 70634E61 		.ascii	"pcName\000"
 13024      6D6500
 13025              	.LASF172:
 13026 0efc 43595F42 		.ascii	"CY_BLE_EVT_GATTC_WRITE_RSP\000"
 13026      4C455F45 
 13026      56545F47 
 13026      41545443 
 13026      5F575249 
 13027              	.LASF362:
 13028 0f17 78546173 		.ascii	"xTaskToSet\000"
 13028      6B546F53 
 13028      657400
 13029              	.LASF391:
 13030 0f22 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 13030      6572666C 
 13030      6F774465 
 13030      6C617965 
 13030      64546173 
 13031              	.LASF211:
 13032 0f3c 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCOVERED\000"
 13032      4C455F43 
 13032      4F4E4E5F 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 342


 13032      53544154 
 13032      455F434C 
 13033              	.LASF54:
 13034 0f60 72785269 		.ascii	"rxRingBufSize\000"
 13034      6E674275 
 13034      6653697A 
 13034      6500
 13035              	.LASF344:
 13036 0f6e 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 13036      6B506C61 
 13036      63654F6E 
 13036      4576656E 
 13036      744C6973 
 13037              	.LASF335:
 13038 0f84 76546173 		.ascii	"vTaskDelay\000"
 13038      6B44656C 
 13038      617900
 13039              	.LASF186:
 13040 0f8f 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_COMMAND_REJ\000"
 13040      4C455F45 
 13040      56545F4C 
 13040      32434150 
 13040      5F434F4D 
 13041              	.LASF90:
 13042 0fac 43595F42 		.ascii	"CY_BLE_EVT_GET_CHANNEL_MAP_COMPLETE\000"
 13042      4C455F45 
 13042      56545F47 
 13042      45545F43 
 13042      48414E4E 
 13043              	.LASF28:
 13044 0fd0 686F7572 		.ascii	"hour\000"
 13044      00
 13045              	.LASF23:
 13046 0fd5 5F426F6F 		.ascii	"_Bool\000"
 13046      6C00
 13047              	.LASF281:
 13048 0fdb 70727644 		.ascii	"prvDeleteTCB\000"
 13048      656C6574 
 13048      65544342 
 13048      00
 13049              	.LASF84:
 13050 0fe8 43595F42 		.ascii	"CY_BLE_EVT_MEMORY_REQUEST\000"
 13050      4C455F45 
 13050      56545F4D 
 13050      454D4F52 
 13050      595F5245 
 13051              	.LASF78:
 13052 1002 76726566 		.ascii	"vrefMvValue\000"
 13052      4D765661 
 13052      6C756500 
 13053              	.LASF270:
 13054 100e 756C4E6F 		.ascii	"ulNotifiedValue\000"
 13054      74696669 
 13054      65645661 
 13054      6C756500 
 13055              	.LASF131:
 13056 101e 43595F42 		.ascii	"CY_BLE_EVT_SET_CONN_PRIORITY_COMPLETE\000"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 343


 13056      4C455F45 
 13056      56545F53 
 13056      45545F43 
 13056      4F4E4E5F 
 13057              	.LASF253:
 13058 1044 7854494D 		.ascii	"xTIME_OUT\000"
 13058      455F4F55 
 13058      5400
 13059              	.LASF202:
 13060 104e 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOP_INITIATED\000"
 13060      4C455F41 
 13060      44565F53 
 13060      54415445 
 13060      5F53544F 
 13061              	.LASF217:
 13062 106e 43595F42 		.ascii	"CY_BLE_SRVI_GAP\000"
 13062      4C455F53 
 13062      5256495F 
 13062      47415000 
 13063              	.LASF209:
 13064 107e 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_CHAR_DISCOVERING\000"
 13064      4C455F43 
 13064      4F4E4E5F 
 13064      53544154 
 13064      455F434C 
 13065              	.LASF61:
 13066 10a8 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 13066      41525F52 
 13066      414E4745 
 13066      5F434F4E 
 13066      445F4142 
 13067              	.LASF349:
 13068 10c0 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 13068      6B52656D 
 13068      6F766546 
 13068      726F6D45 
 13068      76656E74 
 13069              	.LASF16:
 13070 10d9 63686172 		.ascii	"char\000"
 13070      00
 13071              	.LASF122:
 13072 10de 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_ENCRYPT_COMPLETE\000"
 13072      4C455F45 
 13072      56545F41 
 13072      45535F43 
 13072      434D5F45 
 13073              	.LASF238:
 13074 1102 4C697374 		.ascii	"ListItem_t\000"
 13074      4974656D 
 13074      5F7400
 13075              	.LASF70:
 13076 110d 6368616E 		.ascii	"chanEn\000"
 13076      456E00
 13077              	.LASF251:
 13078 1114 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 13078      56616C75 
 13078      65576974 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 344


 13078      686F7574 
 13078      4F766572 
 13079              	.LASF56:
 13080 112e 72785269 		.ascii	"rxRingBufTail\000"
 13080      6E674275 
 13080      66546169 
 13080      6C00
 13081              	.LASF373:
 13082 113c 78546173 		.ascii	"xTaskNotifyWait\000"
 13082      6B4E6F74 
 13082      69667957 
 13082      61697400 
 13083              	.LASF271:
 13084 114c 75634E6F 		.ascii	"ucNotifyState\000"
 13084      74696679 
 13084      53746174 
 13084      6500
 13085              	.LASF286:
 13086 115a 756C5374 		.ascii	"ulStackDepth\000"
 13086      61636B44 
 13086      65707468 
 13086      00
 13087              	.LASF334:
 13088 1167 7853686F 		.ascii	"xShouldDelay\000"
 13088      756C6444 
 13088      656C6179 
 13088      00
 13089              	.LASF143:
 13090 1174 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_START_STOP\000"
 13090      4C455F45 
 13090      56545F47 
 13090      4150435F 
 13090      5343414E 
 13091              	.LASF300:
 13092 1194 70727649 		.ascii	"prvIdleTask\000"
 13092      646C6554 
 13092      61736B00 
 13093              	.LASF165:
 13094 11a0 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 13094      4C455F45 
 13094      56545F47 
 13094      41545443 
 13094      5F524541 
 13095              	.LASF244:
 13096 11c2 784C6973 		.ascii	"xListEnd\000"
 13096      74456E64 
 13096      00
 13097              	.LASF414:
 13098 11cb 5254435F 		.ascii	"RTC_rtcDstStatus\000"
 13098      72746344 
 13098      73745374 
 13098      61747573 
 13098      00
 13099              	.LASF101:
 13100 11dc 43595F42 		.ascii	"CY_BLE_EVT_SET_HOST_CHANNEL_COMPLETE\000"
 13100      4C455F45 
 13100      56545F53 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 345


 13100      45545F48 
 13100      4F53545F 
 13101              	.LASF91:
 13102 1201 43595F42 		.ascii	"CY_BLE_EVT_LE_SET_EVENT_MASK_COMPLETE\000"
 13102      4C455F45 
 13102      56545F4C 
 13102      455F5345 
 13102      545F4556 
 13103              	.LASF41:
 13104 1227 72784275 		.ascii	"rxBufIdx\000"
 13104      66496478 
 13104      00
 13105              	.LASF240:
 13106 1230 4D696E69 		.ascii	"MiniListItem_t\000"
 13106      4C697374 
 13106      4974656D 
 13106      5F7400
 13107              	.LASF347:
 13108 123f 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 13108      6B506C61 
 13108      63654F6E 
 13108      4576656E 
 13108      744C6973 
 13109              	.LASF231:
 13110 125f 5469636B 		.ascii	"TickType_t\000"
 13110      54797065 
 13110      5F7400
 13111              	.LASF46:
 13112 126a 696E6974 		.ascii	"initKey\000"
 13112      4B657900 
 13113              	.LASF292:
 13114 1272 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 13114      64644E65 
 13114      77546173 
 13114      6B546F52 
 13114      65616479 
 13115              	.LASF17:
 13116 128b 75696E74 		.ascii	"uint8_t\000"
 13116      385F7400 
 13117              	.LASF38:
 13118 1293 73746174 		.ascii	"status\000"
 13118      757300
 13119              	.LASF24:
 13120 129a 43595F52 		.ascii	"CY_RTC_DST_RELATIVE\000"
 13120      54435F44 
 13120      53545F52 
 13120      454C4154 
 13120      49564500 
 13121              	.LASF124:
 13122 12ae 43595F42 		.ascii	"CY_BLE_EVT_SET_SLAVE_LATENCY_MODE_COMPLETE\000"
 13122      4C455F45 
 13122      56545F53 
 13122      45545F53 
 13122      4C415645 
 13123              	.LASF289:
 13124 12d9 70784E65 		.ascii	"pxNewTCB\000"
 13124      77544342 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 346


 13124      00
 13125              	.LASF216:
 13126 12e2 43595F42 		.ascii	"CY_BLE_CTS_CHAR_COUNT\000"
 13126      4C455F43 
 13126      54535F43 
 13126      4841525F 
 13126      434F554E 
 13127              	.LASF148:
 13128 12f8 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 13128      4C455F45 
 13128      56545F47 
 13128      41505F45 
 13128      4E48414E 
 13129              	.LASF284:
 13130 131d 70785461 		.ascii	"pxTaskCode\000"
 13130      736B436F 
 13130      646500
 13131              	.LASF136:
 13132 1328 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_COMPLETE\000"
 13132      4C455F45 
 13132      56545F47 
 13132      41505F41 
 13132      5554485F 
 13133              	.LASF107:
 13134 1345 43595F42 		.ascii	"CY_BLE_EVT_SET_DEFAULT_PHY_COMPLETE\000"
 13134      4C455F45 
 13134      56545F53 
 13134      45545F44 
 13134      45464155 
 13135              	.LASF76:
 13136 1369 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 13136      77697463 
 13136      68537143 
 13136      74726C00 
 13137              	.LASF409:
 13138 1379 63795F62 		.ascii	"cy_ble_advState\000"
 13138      6C655F61 
 13138      64765374 
 13138      61746500 
 13139              	.LASF261:
 13140 1389 4D656D6F 		.ascii	"MemoryRegion_t\000"
 13140      72795265 
 13140      67696F6E 
 13140      5F7400
 13141              	.LASF404:
 13142 1398 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 13142      74546173 
 13142      6B556E62 
 13142      6C6F636B 
 13142      54696D65 
 13143              	.LASF48:
 13144 13ad 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 13144      625F7363 
 13144      625F7561 
 13144      72745F68 
 13144      616E646C 
 13145              	.LASF440:
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 347


 13146 13cc 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 13146      72745261 
 13146      69736542 
 13146      41534550 
 13146      524900
 13147              	.LASF69:
 13148 13df 72616E67 		.ascii	"rangeCond\000"
 13148      65436F6E 
 13148      6400
 13149              	.LASF423:
 13150 13e9 7078506F 		.ascii	"pxPortInitialiseStack\000"
 13150      7274496E 
 13150      69746961 
 13150      6C697365 
 13150      53746163 
 13151              	.LASF130:
 13152 13ff 43595F42 		.ascii	"CY_BLE_EVT_SET_CE_LENGTH_COMPLETE\000"
 13152      4C455F45 
 13152      56545F53 
 13152      45545F43 
 13152      455F4C45 
 13153              	.LASF129:
 13154 1421 43595F42 		.ascii	"CY_BLE_EVT_SET_EVENT_MASK_COMPLETE\000"
 13154      4C455F45 
 13154      56545F53 
 13154      45545F45 
 13154      56454E54 
 13155              	.LASF1:
 13156 1444 6C6F6E67 		.ascii	"long long int\000"
 13156      206C6F6E 
 13156      6720696E 
 13156      7400
 13157              	.LASF188:
 13158 1452 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 13158      4C455F45 
 13158      56545F4C 
 13158      32434150 
 13158      5F434246 
 13159              	.LASF305:
 13160 1471 75785265 		.ascii	"uxReturn\000"
 13160      7475726E 
 13160      00
 13161              	.LASF214:
 13162 147a 43595F42 		.ascii	"CY_BLE_CTS_LOCAL_TIME_INFO\000"
 13162      4C455F43 
 13162      54535F4C 
 13162      4F43414C 
 13162      5F54494D 
 13163              	.LASF372:
 13164 1495 756C5265 		.ascii	"ulReturn\000"
 13164      7475726E 
 13164      00
 13165              	.LASF156:
 13166 149e 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONN_ESTB\000"
 13166      4C455F45 
 13166      56545F47 
 13166      41505F43 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 348


 13166      4F4E4E5F 
 13167              	.LASF103:
 13168 14b7 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_RPA_LIST_COMPLETE\000"
 13168      4C455F45 
 13168      56545F52 
 13168      454D4F56 
 13168      455F4445 
 13169              	.LASF274:
 13170 14e7 756C4E65 		.ascii	"ulNewBASEPRI\000"
 13170      77424153 
 13170      45505249 
 13170      00
 13171              	.LASF92:
 13172 14f4 43595F42 		.ascii	"CY_BLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 13172      4C455F45 
 13172      56545F4C 
 13172      455F5049 
 13172      4E475F41 
 13173              	.LASF259:
 13174 1514 756C4C65 		.ascii	"ulLengthInBytes\000"
 13174      6E677468 
 13174      496E4279 
 13174      74657300 
 13175              	.LASF229:
 13176 1524 42617365 		.ascii	"BaseType_t\000"
 13176      54797065 
 13176      5F7400
 13177              	.LASF339:
 13178 152f 756C4368 		.ascii	"ulCheckValue\000"
 13178      65636B56 
 13178      616C7565 
 13178      00
 13179              	.LASF280:
 13180 153c 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 13180      65736574 
 13180      4E657874 
 13180      5461736B 
 13180      556E626C 
 13181              	.LASF255:
 13182 1558 7854696D 		.ascii	"xTimeOnEntering\000"
 13182      654F6E45 
 13182      6E746572 
 13182      696E6700 
 13183              	.LASF310:
 13184 1568 75784E65 		.ascii	"uxNewPriority\000"
 13184      77507269 
 13184      6F726974 
 13184      7900
 13185              	.LASF119:
 13186 1576 43595F42 		.ascii	"CY_BLE_EVT_SET_CLK_CONFIG_COMPLETE\000"
 13186      4C455F45 
 13186      56545F53 
 13186      45545F43 
 13186      4C4B5F43 
 13187              	.LASF227:
 13188 1599 5461736B 		.ascii	"TaskFunction_t\000"
 13188      46756E63 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 349


 13188      74696F6E 
 13188      5F7400
 13189              	.LASF234:
 13190 15a8 70784E65 		.ascii	"pxNext\000"
 13190      787400
 13191              	.LASF381:
 13192 15af 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 13192      72657669 
 13192      6F75734E 
 13192      6F746966 
 13192      69636174 
 13193              	.LASF421:
 13194 15cc 6D656D73 		.ascii	"memset\000"
 13194      657400
 13195              	.LASF354:
 13196 15d3 70785469 		.ascii	"pxTimeOut\000"
 13196      6D654F75 
 13196      7400
 13197              	.LASF306:
 13198 15dd 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 13198      736B5072 
 13198      696F7269 
 13198      74794765 
 13198      7446726F 
 13199              	.LASF47:
 13200 15f6 63795F73 		.ascii	"cy_stc_scb_spi_context_t\000"
 13200      74635F73 
 13200      63625F73 
 13200      70695F63 
 13200      6F6E7465 
 13201              	.LASF379:
 13202 160f 756C5661 		.ascii	"ulValue\000"
 13202      6C756500 
 13203              	.LASF55:
 13204 1617 72785269 		.ascii	"rxRingBufHead\000"
 13204      6E674275 
 13204      66486561 
 13204      6400
 13205              	.LASF320:
 13206 1625 78546173 		.ascii	"xTaskGetTickCount\000"
 13206      6B476574 
 13206      5469636B 
 13206      436F756E 
 13206      7400
 13207              	.LASF96:
 13208 1637 43595F42 		.ascii	"CY_BLE_EVT_DATA_LENGTH_CHANGE\000"
 13208      4C455F45 
 13208      56545F44 
 13208      4154415F 
 13208      4C454E47 
 13209              	.LASF71:
 13210 1655 6368616E 		.ascii	"chanConfig\000"
 13210      436F6E66 
 13210      696700
 13211              	.LASF144:
 13212 1660 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 13212      4C455F45 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 350


 13212      56545F47 
 13212      41505F4B 
 13212      4559494E 
 13213              	.LASF104:
 13214 1685 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_WHITE_LIST_COMPLETE\000"
 13214      4C455F45 
 13214      56545F41 
 13214      44445F44 
 13214      45564943 
 13215              	.LASF43:
 13216 16b2 74784275 		.ascii	"txBufSize\000"
 13216      6653697A 
 13216      6500
 13217              	.LASF355:
 13218 16bc 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 13218      6B496E74 
 13218      65726E61 
 13218      6C536574 
 13218      54696D65 
 13219              	.LASF403:
 13220 16d9 75785461 		.ascii	"uxTaskNumber\000"
 13220      736B4E75 
 13220      6D626572 
 13220      00
 13221              	.LASF158:
 13222 16e6 43595F42 		.ascii	"CY_BLE_EVT_GAP_ADV_TX\000"
 13222      4C455F45 
 13222      56545F47 
 13222      41505F41 
 13222      44565F54 
 13223              	.LASF194:
 13224 16fc 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 13224      4C455F45 
 13224      56545F4C 
 13224      32434150 
 13224      5F434246 
 13225              	.LASF246:
 13226 1721 5461736B 		.ascii	"TaskHandle_t\000"
 13226      48616E64 
 13226      6C655F74 
 13226      00
 13227              	.LASF380:
 13228 172e 65416374 		.ascii	"eAction\000"
 13228      696F6E00 
 13229              	.LASF441:
 13230 1736 756C4E65 		.ascii	"ulNewMaskValue\000"
 13230      774D6173 
 13230      6B56616C 
 13230      756500
 13231              	.LASF226:
 13232 1745 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 13232      434F4E46 
 13232      49475F53 
 13232      54525543 
 13232      5400
 13233              	.LASF369:
 13234 1757 75785461 		.ascii	"uxTaskResetEventItemValue\000"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 351


 13234      736B5265 
 13234      73657445 
 13234      76656E74 
 13234      4974656D 
 13235              	.LASF309:
 13236 1771 76546173 		.ascii	"vTaskPrioritySet\000"
 13236      6B507269 
 13236      6F726974 
 13236      79536574 
 13236      00
 13237              	.LASF106:
 13238 1782 43595F42 		.ascii	"CY_BLE_EVT_GET_PHY_COMPLETE\000"
 13238      4C455F45 
 13238      56545F47 
 13238      45545F50 
 13238      48595F43 
 13239              	.LASF132:
 13240 179e 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 13240      4C455F45 
 13240      56545F47 
 13240      4150435F 
 13240      5343414E 
 13241              	.LASF187:
 13242 17c3 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_IND\000"
 13242      4C455F45 
 13242      56545F4C 
 13242      32434150 
 13242      5F434246 
 13243              	.LASF152:
 13244 17e2 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYS_GEN_COMPLETE\000"
 13244      4C455F45 
 13244      56545F47 
 13244      41505F4B 
 13244      4559535F 
 13245              	.LASF146:
 13246 1803 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 13246      4C455F45 
 13246      56545F47 
 13246      41505F4B 
 13246      45595052 
 13247              	.LASF245:
 13248 1828 4C697374 		.ascii	"List_t\000"
 13248      5F7400
 13249              	.LASF210:
 13250 182f 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DESCR_DISCOVERING\000"
 13250      4C455F43 
 13250      4F4E4E5F 
 13250      53544154 
 13250      455F434C 
 13251              	.LASF206:
 13252 185a 43595F42 		.ascii	"CY_BLE_CONN_STATE_CONNECTED\000"
 13252      4C455F43 
 13252      4F4E4E5F 
 13252      53544154 
 13252      455F434F 
 13253              	.LASF42:
 13254 1876 74784275 		.ascii	"txBuf\000"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 352


 13254      6600
 13255              	.LASF324:
 13256 187c 78546173 		.ascii	"xTaskToQuery\000"
 13256      6B546F51 
 13256      75657279 
 13256      00
 13257              	.LASF378:
 13258 1889 78546173 		.ascii	"xTaskToNotify\000"
 13258      6B546F4E 
 13258      6F746966 
 13258      7900
 13259              	.LASF282:
 13260 1897 78546173 		.ascii	"xTask\000"
 13260      6B00
 13261              	.LASF413:
 13262 189d 44454255 		.ascii	"DEBUG_UART_context\000"
 13262      475F5541 
 13262      52545F63 
 13262      6F6E7465 
 13262      787400
 13263              	.LASF248:
 13264 18b0 65536574 		.ascii	"eSetBits\000"
 13264      42697473 
 13264      00
 13265              	.LASF53:
 13266 18b9 72785269 		.ascii	"rxRingBuf\000"
 13266      6E674275 
 13266      6600
 13267              	.LASF2:
 13268 18c3 6C6F6E67 		.ascii	"long double\000"
 13268      20646F75 
 13268      626C6500 
 13269              	.LASF89:
 13270 18cf 43595F42 		.ascii	"CY_BLE_EVT_READ_AUTH_PAYLOAD_TO_COMPLETE\000"
 13270      4C455F45 
 13270      56545F52 
 13270      4541445F 
 13270      41555448 
 13271              	.LASF257:
 13272 18f8 784D454D 		.ascii	"xMEMORY_REGION\000"
 13272      4F52595F 
 13272      52454749 
 13272      4F4E00
 13273              	.LASF18:
 13274 1907 75696E74 		.ascii	"uint16_t\000"
 13274      31365F74 
 13274      00
 13275              	.LASF308:
 13276 1910 76546173 		.ascii	"vTaskDelete\000"
 13276      6B44656C 
 13276      65746500 
 13277              	.LASF99:
 13278 191c 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_TO_COMPLETE\000"
 13278      4C455F45 
 13278      56545F53 
 13278      45545F52 
 13278      50415F54 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 353


 13279              	.LASF337:
 13280 193b 76546173 		.ascii	"vTaskSwitchContext\000"
 13280      6B537769 
 13280      74636843 
 13280      6F6E7465 
 13280      787400
 13281              	.LASF402:
 13282 194e 784E756D 		.ascii	"xNumOfOverflows\000"
 13282      4F664F76 
 13282      6572666C 
 13282      6F777300 
 13283              	.LASF87:
 13284 195e 43595F42 		.ascii	"CY_BLE_EVT_HARDWARE_ERROR\000"
 13284      4C455F45 
 13284      56545F48 
 13284      41524457 
 13284      4152455F 
 13285              	.LASF155:
 13286 1978 43595F42 		.ascii	"CY_BLE_EVT_GAP_CREATE_CONN_CANCEL_COMPLETE\000"
 13286      4C455F45 
 13286      56545F47 
 13286      41505F43 
 13286      52454154 
 13287              	.LASF75:
 13288 19a3 6D757853 		.ascii	"muxSwitch\000"
 13288      77697463 
 13288      6800
 13289              	.LASF419:
 13290 19ad 70784375 		.ascii	"pxCurrentTCB\000"
 13290      7272656E 
 13290      74544342 
 13290      00
 13291              	.LASF6:
 13292 19ba 756E7369 		.ascii	"unsigned char\000"
 13292      676E6564 
 13292      20636861 
 13292      7200
 13293              	.LASF159:
 13294 19c8 43595F42 		.ascii	"CY_BLE_EVT_GATTC_ERROR_RSP\000"
 13294      4C455F45 
 13294      56545F47 
 13294      41545443 
 13294      5F455252 
 13295              	.LASF164:
 13296 19e3 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 13296      4C455F45 
 13296      56545F47 
 13296      41545443 
 13296      5F524541 
 13297              	.LASF102:
 13298 1a0b 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_RPA_LIST_COMPLETE\000"
 13298      4C455F45 
 13298      56545F41 
 13298      44445F44 
 13298      45564943 
 13299              	.LASF328:
 13300 1a36 78546173 		.ascii	"xTaskResumeAll\000"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 354


 13300      6B526573 
 13300      756D6541 
 13300      6C6C00
 13301              	.LASF171:
 13302 1a45 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_REQ\000"
 13302      4C455F45 
 13302      56545F47 
 13302      41545453 
 13302      5F575249 
 13303              	.LASF125:
 13304 1a60 43595F42 		.ascii	"CY_BLE_EVT_STACK_SHUTDOWN_COMPLETE\000"
 13304      4C455F45 
 13304      56545F53 
 13304      5441434B 
 13304      5F534855 
 13305              	.LASF198:
 13306 1a83 63795F73 		.ascii	"cy_stc_ble_conn_handle_t\000"
 13306      74635F62 
 13306      6C655F63 
 13306      6F6E6E5F 
 13306      68616E64 
 13307              	.LASF436:
 13308 1a9c 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 13308      6C696361 
 13308      74696F6E 
 13308      53746163 
 13308      6B4F7665 
 13309              	.LASF157:
 13310 1aba 43595F42 		.ascii	"CY_BLE_EVT_GAPP_UPDATE_ADV_SCAN_DATA_COMPLETE\000"
 13310      4C455F45 
 13310      56545F47 
 13310      4150505F 
 13310      55504441 
 13311              	.LASF7:
 13312 1ae8 73686F72 		.ascii	"short int\000"
 13312      7420696E 
 13312      7400
 13313              	.LASF418:
 13314 1af2 4144435F 		.ascii	"ADC_allConfigs\000"
 13314      616C6C43 
 13314      6F6E6669 
 13314      677300
 13315              	.LASF422:
 13316 1b01 764C6973 		.ascii	"vListInitialiseItem\000"
 13316      74496E69 
 13316      7469616C 
 13316      69736549 
 13316      74656D00 
 13317              	.LASF283:
 13318 1b15 70727649 		.ascii	"prvInitialiseNewTask\000"
 13318      6E697469 
 13318      616C6973 
 13318      654E6577 
 13318      5461736B 
 13319              	.LASF140:
 13320 1b2a 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 13320      4C455F45 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 355


 13320      56545F47 
 13320      41505F44 
 13320      45564943 
 13321              	.LASF287:
 13322 1b4d 70765061 		.ascii	"pvParameters\000"
 13322      72616D65 
 13322      74657273 
 13322      00
 13323              	.LASF233:
 13324 1b5a 78497465 		.ascii	"xItemValue\000"
 13324      6D56616C 
 13324      756500
 13325              	.LASF11:
 13326 1b65 6C6F6E67 		.ascii	"long int\000"
 13326      20696E74 
 13326      00
 13327              	.LASF25:
 13328 1b6e 43595F52 		.ascii	"CY_RTC_DST_FIXED\000"
 13328      54435F44 
 13328      53545F46 
 13328      49584544 
 13328      00
 13329              	.LASF407:
 13330 1b7f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 13330      52784275 
 13330      66666572 
 13330      00
 13331              	.LASF128:
 13332 1b8c 43595F42 		.ascii	"CY_BLE_EVT_AES_CMAC_GEN_COMPLETE\000"
 13332      4C455F45 
 13332      56545F41 
 13332      45535F43 
 13332      4D41435F 
 13333              	.LASF385:
 13334 1bad 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 13334      6B4E6F74 
 13334      69667947 
 13334      69766546 
 13334      726F6D49 
 13335              	.LASF390:
 13336 1bc4 70784465 		.ascii	"pxDelayedTaskList\000"
 13336      6C617965 
 13336      64546173 
 13336      6B4C6973 
 13336      7400
 13337              	.LASF237:
 13338 1bd6 7076436F 		.ascii	"pvContainer\000"
 13338      6E746169 
 13338      6E657200 
 13339              	.LASF219:
 13340 1be2 43595F42 		.ascii	"CY_BLE_SRVI_CTS\000"
 13340      4C455F53 
 13340      5256495F 
 13340      43545300 
 13341              	.LASF299:
 13342 1bf2 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 13342      61736B49 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 356


 13342      73546173 
 13342      6B537573 
 13342      70656E64 
 13343              	.LASF57:
 13344 1c09 74784C65 		.ascii	"txLeftToTransmit\000"
 13344      6674546F 
 13344      5472616E 
 13344      736D6974 
 13344      00
 13345              	.LASF326:
 13346 1c1a 78537769 		.ascii	"xSwitchRequired\000"
 13346      74636852 
 13346      65717569 
 13346      72656400 
 13347              	.LASF151:
 13348 1c2a 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_ADDR_GEN_COMPLETE\000"
 13348      4C455F45 
 13348      56545F47 
 13348      41505F44 
 13348      45564943 
 13349              	.LASF267:
 13350 1c52 70785374 		.ascii	"pxStack\000"
 13350      61636B00 
 13351              	.LASF34:
 13352 1c5a 73746172 		.ascii	"startDst\000"
 13352      74447374 
 13352      00
 13353              	.LASF302:
 13354 1c63 78546173 		.ascii	"xTaskToDelete\000"
 13354      6B546F44 
 13354      656C6574 
 13354      6500
 13355              	.LASF370:
 13356 1c71 756C5461 		.ascii	"ulTaskNotifyTake\000"
 13356      736B4E6F 
 13356      74696679 
 13356      54616B65 
 13356      00
 13357              	.LASF31:
 13358 1c82 6461794F 		.ascii	"dayOfWeek\000"
 13358      66576565 
 13358      6B00
 13359              	.LASF343:
 13360 1c8c 78546173 		.ascii	"xTaskToSuspend\000"
 13360      6B546F53 
 13360      75737065 
 13360      6E6400
 13361              	.LASF189:
 13362 1c9b 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 13362      4C455F45 
 13362      56545F4C 
 13362      32434150 
 13362      5F434246 
 13363              	.LASF356:
 13364 1cbd 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 13364      6B436865 
 13364      636B466F 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 357


 13364      7254696D 
 13364      654F7574 
 13365              	.LASF435:
 13366 1cd2 76506F72 		.ascii	"vPortEndScheduler\000"
 13366      74456E64 
 13366      53636865 
 13366      64756C65 
 13366      7200
 13367              	.LASF420:
 13368 1ce4 76506F72 		.ascii	"vPortFree\000"
 13368      74467265 
 13368      6500
 13369              	.LASF175:
 13370 1cee 43595F42 		.ascii	"CY_BLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 13370      4C455F45 
 13370      56545F47 
 13370      41545453 
 13370      5F455845 
 13371              	.LASF88:
 13372 1d0e 43595F42 		.ascii	"CY_BLE_EVT_WRITE_AUTH_PAYLOAD_TO_COMPLETE\000"
 13372      4C455F45 
 13372      56545F57 
 13372      52495445 
 13372      5F415554 
 13373              	.LASF398:
 13374 1d38 7578546F 		.ascii	"uxTopReadyPriority\000"
 13374      70526561 
 13374      64795072 
 13374      696F7269 
 13374      747900
 13375              	.LASF127:
 13376 1d4b 43595F42 		.ascii	"CY_BLE_EVT_RADIO_VOLTAGE_LEVEL\000"
 13376      4C455F45 
 13376      56545F52 
 13376      4144494F 
 13376      5F564F4C 
 13377              	.LASF332:
 13378 1d6a 70785072 		.ascii	"pxPreviousWakeTime\000"
 13378      6576696F 
 13378      75735761 
 13378      6B655469 
 13378      6D6500
 13379              	.LASF5:
 13380 1d7d 5F5F7569 		.ascii	"__uint8_t\000"
 13380      6E74385F 
 13380      7400
 13381              	.LASF408:
 13382 1d87 63795F52 		.ascii	"cy_RTC_daysInMonthTbl\000"
 13382      54435F64 
 13382      61797349 
 13382      6E4D6F6E 
 13382      74685462 
 13383              	.LASF363:
 13384 1d9d 78496E64 		.ascii	"xIndex\000"
 13384      657800
 13385              	.LASF405:
 13386 1da4 7849646C 		.ascii	"xIdleTaskHandle\000"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 358


 13386      65546173 
 13386      6B48616E 
 13386      646C6500 
 13387              	.LASF388:
 13388 1db4 7844656C 		.ascii	"xDelayedTaskList1\000"
 13388      61796564 
 13388      5461736B 
 13388      4C697374 
 13388      3100
 13389              	.LASF94:
 13390 1dc6 43595F42 		.ascii	"CY_BLE_EVT_SET_SUGGESTED_DATA_LENGTH_COMPLETE\000"
 13390      4C455F45 
 13390      56545F53 
 13390      45545F53 
 13390      55474745 
 13391              	.LASF114:
 13392 1df4 43595F42 		.ascii	"CY_BLE_EVT_GET_DEVICE_ADDR_COMPLETE\000"
 13392      4C455F45 
 13392      56545F47 
 13392      45545F44 
 13392      45564943 
 13393              	.LASF121:
 13394 1e18 43595F42 		.ascii	"CY_BLE_EVT_AES_ENCRYPT_COMPLETE\000"
 13394      4C455F45 
 13394      56545F41 
 13394      45535F45 
 13394      4E435259 
 13395              	.LASF116:
 13396 1e38 43595F42 		.ascii	"CY_BLE_EVT_GET_TX_PWR_COMPLETE\000"
 13396      4C455F45 
 13396      56545F47 
 13396      45545F54 
 13396      585F5057 
 13397              	.LASF49:
 13398 1e57 63795F73 		.ascii	"cy_stc_scb_spi_context\000"
 13398      74635F73 
 13398      63625F73 
 13398      70695F63 
 13398      6F6E7465 
 13399              	.LASF376:
 13400 1e6e 70756C4E 		.ascii	"pulNotificationValue\000"
 13400      6F746966 
 13400      69636174 
 13400      696F6E56 
 13400      616C7565 
 13401              	.LASF67:
 13402 1e83 73616D70 		.ascii	"sampleTime23\000"
 13402      6C655469 
 13402      6D653233 
 13402      00
 13403              	.LASF278:
 13404 1e90 78526574 		.ascii	"xReturn\000"
 13404      75726E00 
 13405              	.LASF82:
 13406 1e98 43595F42 		.ascii	"CY_BLE_EVT_TIMEOUT\000"
 13406      4C455F45 
 13406      56545F54 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 359


 13406      494D454F 
 13406      555400
 13407              	.LASF218:
 13408 1eab 43595F42 		.ascii	"CY_BLE_SRVI_GATT\000"
 13408      4C455F53 
 13408      5256495F 
 13408      47415454 
 13408      00
 13409              	.LASF15:
 13410 1ebc 73697A65 		.ascii	"sizetype\000"
 13410      74797065 
 13410      00
 13411              	.LASF360:
 13412 1ec5 76546173 		.ascii	"vTaskMissedYield\000"
 13412      6B4D6973 
 13412      73656459 
 13412      69656C64 
 13412      00
 13413              	.LASF400:
 13414 1ed6 75785065 		.ascii	"uxPendedTicks\000"
 13414      6E646564 
 13414      5469636B 
 13414      7300
 13415              	.LASF13:
 13416 1ee4 6C6F6E67 		.ascii	"long unsigned int\000"
 13416      20756E73 
 13416      69676E65 
 13416      6420696E 
 13416      7400
 13417              	.LASF276:
 13418 1ef6 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 13418      74526169 
 13418      73654241 
 13418      53455052 
 13418      4900
 13419              	.LASF428:
 13420 1f08 75784C69 		.ascii	"uxListRemove\000"
 13420      73745265 
 13420      6D6F7665 
 13420      00
 13421              	.LASF21:
 13422 1f15 666C6F61 		.ascii	"float\000"
 13422      7400
 13423              	.LASF323:
 13424 1f1b 70635461 		.ascii	"pcTaskGetName\000"
 13424      736B4765 
 13424      744E616D 
 13424      6500
 13425              	.LASF19:
 13426 1f29 696E7433 		.ascii	"int32_t\000"
 13426      325F7400 
 13427              	.LASF126:
 13428 1f31 43595F42 		.ascii	"CY_BLE_EVT_RADIO_TEMPERATURE\000"
 13428      4C455F45 
 13428      56545F52 
 13428      4144494F 
 13428      5F54454D 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 360


 13429              	.LASF321:
 13430 1f4e 78546963 		.ascii	"xTicks\000"
 13430      6B7300
 13431              	.LASF318:
 13432 1f55 76546173 		.ascii	"vTaskStartScheduler\000"
 13432      6B537461 
 13432      72745363 
 13432      68656475 
 13432      6C657200 
 13433              	.LASF296:
 13434 1f69 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 13434      426C6F63 
 13434      6B496E64 
 13434      6566696E 
 13434      6974656C 
 13435              	.LASF338:
 13436 1f7f 70756C53 		.ascii	"pulStack\000"
 13436      7461636B 
 13436      00
 13437              	.LASF65:
 13438 1f88 73616D70 		.ascii	"sampleCtrl\000"
 13438      6C654374 
 13438      726C00
 13439              	.LASF258:
 13440 1f93 70764261 		.ascii	"pvBaseAddress\000"
 13440      73654164 
 13440      64726573 
 13440      7300
 13441              	.LASF336:
 13442 1fa1 78546963 		.ascii	"xTicksToDelay\000"
 13442      6B73546F 
 13442      44656C61 
 13442      7900
 13443              	.LASF268:
 13444 1faf 70635461 		.ascii	"pcTaskName\000"
 13444      736B4E61 
 13444      6D6500
 13445              	.LASF346:
 13446 1fba 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 13446      6B506C61 
 13446      63654F6E 
 13446      556E6F72 
 13446      64657265 
 13447              	.LASF12:
 13448 1fd9 5F5F7569 		.ascii	"__uint32_t\000"
 13448      6E743332 
 13448      5F7400
 13449              	.LASF424:
 13450 1fe4 764C6973 		.ascii	"vListInitialise\000"
 13450      74496E69 
 13450      7469616C 
 13450      69736500 
 13451              	.LASF432:
 13452 1ff4 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 13452      7456616C 
 13452      69646174 
 13452      65496E74 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 361


 13452      65727275 
 13453              	.LASF183:
 13454 2013 43595F42 		.ascii	"CY_BLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 13454      4C455F45 
 13454      56545F47 
 13454      41545443 
 13454      5F4C4F4E 
 13455              	.LASF340:
 13456 2037 7578546F 		.ascii	"uxTopPriority\000"
 13456      70507269 
 13456      6F726974 
 13456      7900
 13457              	.LASF105:
 13458 2045 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_WHITE_LIST_COMPLETE\000"
 13458      4C455F45 
 13458      56545F52 
 13458      454D4F56 
 13458      455F4445 
 13459              	.LASF331:
 13460 2077 76546173 		.ascii	"vTaskDelayUntil\000"
 13460      6B44656C 
 13460      6179556E 
 13460      74696C00 
 13461              	.LASF149:
 13462 2087 43595F42 		.ascii	"CY_BLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 13462      4C455F45 
 13462      56545F47 
 13462      4150435F 
 13462      44495245 
 13463              	.LASF265:
 13464 20a9 78457665 		.ascii	"xEventListItem\000"
 13464      6E744C69 
 13464      73744974 
 13464      656D00
 13465              	.LASF185:
 13466 20b8 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 13466      4C455F45 
 13466      56545F4C 
 13466      32434150 
 13466      5F434F4E 
 13467              	.LASF312:
 13468 20df 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 13468      696F7269 
 13468      74795573 
 13468      65644F6E 
 13468      456E7472 
 13469              	.LASF273:
 13470 20f5 5443425F 		.ascii	"TCB_t\000"
 13470      7400
 13471              	.LASF295:
 13472 20fb 78546963 		.ascii	"xTicksToWait\000"
 13472      6B73546F 
 13472      57616974 
 13472      00
 13473              	.LASF236:
 13474 2108 70764F77 		.ascii	"pvOwner\000"
 13474      6E657200 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 362


 13475              	.LASF225:
 13476 2110 636C6B44 		.ascii	"clkDivider\000"
 13476      69766964 
 13476      657200
 13477              	.LASF342:
 13478 211b 76546173 		.ascii	"vTaskSuspend\000"
 13478      6B537573 
 13478      70656E64 
 13478      00
 13479              	.LASF438:
 13480 2128 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0."
 13480      72617465 
 13480      645F536F 
 13480      75726365 
 13480      5C50536F 
 13481 2156 315C536F 		.ascii	"1\\Source\\tasks.c\000"
 13481      75726365 
 13481      5C746173 
 13481      6B732E63 
 13481      00
 13482              	.LASF329:
 13483 2167 78416C72 		.ascii	"xAlreadyYielded\000"
 13483      65616479 
 13483      5969656C 
 13483      64656400 
 13484              	.LASF367:
 13485 2177 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 13485      6B476574 
 13485      43757272 
 13485      656E7454 
 13485      61736B48 
 13486              	.LASF303:
 13487 2191 78546173 		.ascii	"xTaskCreate\000"
 13487      6B437265 
 13487      61746500 
 13488              	.LASF161:
 13489 219d 43595F42 		.ascii	"CY_BLE_EVT_GATT_DISCONNECT_IND\000"
 13489      4C455F45 
 13489      56545F47 
 13489      4154545F 
 13489      44495343 
 13490              	.LASF417:
 13491 21bc 4144435F 		.ascii	"ADC_currentConfig\000"
 13491      63757272 
 13491      656E7443 
 13491      6F6E6669 
 13491      6700
 13492              	.LASF176:
 13493 21ce 43595F42 		.ascii	"CY_BLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 13493      4C455F45 
 13493      56545F47 
 13493      41545443 
 13493      5F455845 
 13494              	.LASF311:
 13495 21ee 75784375 		.ascii	"uxCurrentBasePriority\000"
 13495      7272656E 
 13495      74426173 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 363


 13495      65507269 
 13495      6F726974 
 13496              	.LASF290:
 13497 2204 78526567 		.ascii	"xRegions\000"
 13497      696F6E73 
 13497      00
 13498              	.LASF162:
 13499 220d 43595F42 		.ascii	"CY_BLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 13499      4C455F45 
 13499      56545F47 
 13499      41545453 
 13499      5F58434E 
 13500              	.LASF439:
 13501 222c 433A5C55 		.ascii	"C:\\Users\\kateb\\Documents\\PSoC Creator\\CE218136"
 13501      73657273 
 13501      5C6B6174 
 13501      65625C44 
 13501      6F63756D 
 13502 225a 5F45494E 		.ascii	"_EINK_CapSense_RTOS02\\CE222604_RTC_CTS_RTOS01.cyds"
 13502      4B5F4361 
 13502      7053656E 
 13502      73655F52 
 13502      544F5330 
 13503 228c 6E00     		.ascii	"n\000"
 13504              	.LASF181:
 13505 228e 43595F42 		.ascii	"CY_BLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 13505      4C455F45 
 13505      56545F47 
 13505      41545443 
 13505      5F53544F 
 13506              	.LASF134:
 13507 22b1 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 13507      4C455F45 
 13507      56545F47 
 13507      41505F50 
 13507      4153534B 
 13508              	.LASF196:
 13509 22d6 62644861 		.ascii	"bdHandle\000"
 13509      6E646C65 
 13509      00
 13510              	.LASF235:
 13511 22df 70785072 		.ascii	"pxPrevious\000"
 13511      6576696F 
 13511      757300
 13512              	.LASF396:
 13513 22ea 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 13513      7272656E 
 13513      744E756D 
 13513      6265724F 
 13513      66546173 
 13514              	.LASF333:
 13515 2301 7854696D 		.ascii	"xTimeIncrement\000"
 13515      65496E63 
 13515      72656D65 
 13515      6E7400
 13516              	.LASF3:
 13517 2310 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 364


 13517      65642063 
 13517      68617200 
 13518              	.LASF9:
 13519 231c 73686F72 		.ascii	"short unsigned int\000"
 13519      7420756E 
 13519      7369676E 
 13519      65642069 
 13519      6E7400
 13520              	.LASF297:
 13521 232f 7854696D 		.ascii	"xTimeToWake\000"
 13521      65546F57 
 13521      616B6500 
 13522              	.LASF386:
 13523 233b 78546173 		.ascii	"xTaskNotifyStateClear\000"
 13523      6B4E6F74 
 13523      69667953 
 13523      74617465 
 13523      436C6561 
 13524              	.LASF173:
 13525 2351 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_CMD_REQ\000"
 13525      4C455F45 
 13525      56545F47 
 13525      41545453 
 13525      5F575249 
 13526              	.LASF118:
 13527 2370 43595F42 		.ascii	"CY_BLE_EVT_GET_CLK_CONFIG_COMPLETE\000"
 13527      4C455F45 
 13527      56545F47 
 13527      45545F43 
 13527      4C4B5F43 
 13528              	.LASF279:
 13529 2393 70785443 		.ascii	"pxTCB\000"
 13529      4200
 13530              	.LASF224:
 13531 2399 6D697363 		.ascii	"miscConfig\000"
 13531      436F6E66 
 13531      696700
 13532              	.LASF184:
 13533 23a4 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 13533      4C455F45 
 13533      56545F4C 
 13533      32434150 
 13533      5F434F4E 
 13534              	.LASF77:
 13535 23cb 636F6E66 		.ascii	"configRouting\000"
 13535      6967526F 
 13535      7574696E 
 13535      6700
 13536              	.LASF32:
 13537 23d9 6D6F6E74 		.ascii	"month\000"
 13537      6800
 13538              	.LASF406:
 13539 23df 75785363 		.ascii	"uxSchedulerSuspended\000"
 13539      68656475 
 13539      6C657253 
 13539      75737065 
 13539      6E646564 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 365


 13540              	.LASF294:
 13541 23f4 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 13541      64644375 
 13541      7272656E 
 13541      74546173 
 13541      6B546F44 
 13542              	.LASF74:
 13543 2413 72616E67 		.ascii	"rangeIntrMask\000"
 13543      65496E74 
 13543      724D6173 
 13543      6B00
 13544              	.LASF63:
 13545 2421 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 13545      6E5F7361 
 13545      725F7261 
 13545      6E67655F 
 13545      64657465 
 13546              	.LASF263:
 13547 2444 7078546F 		.ascii	"pxTopOfStack\000"
 13547      704F6653 
 13547      7461636B 
 13547      00
 13548              	.LASF314:
 13549 2451 76546173 		.ascii	"vTaskResume\000"
 13549      6B526573 
 13549      756D6500 
 13550              	.LASF431:
 13551 245d 7076506F 		.ascii	"pvPortMalloc\000"
 13551      72744D61 
 13551      6C6C6F63 
 13551      00
 13552              	.LASF291:
 13553 246a 70727649 		.ascii	"prvInitialiseTaskLists\000"
 13553      6E697469 
 13553      616C6973 
 13553      65546173 
 13553      6B4C6973 
 13554              	.LASF137:
 13555 2481 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_FAILED\000"
 13555      4C455F45 
 13555      56545F47 
 13555      41505F41 
 13555      5554485F 
 13556              	.LASF352:
 13557 249c 70784576 		.ascii	"pxEventListItem\000"
 13557      656E744C 
 13557      69737449 
 13557      74656D00 
 13558              	.LASF364:
 13559 24ac 70765661 		.ascii	"pvValue\000"
 13559      6C756500 
 13560              	.LASF109:
 13561 24b4 43595F42 		.ascii	"CY_BLE_EVT_PHY_UPDATE_COMPLETE\000"
 13561      4C455F45 
 13561      56545F50 
 13561      48595F55 
 13561      50444154 
ARM GAS  C:\Users\kateb\AppData\Local\Temp\ccbZCI7w.s 			page 366


 13562              	.LASF288:
 13563 24d3 70784372 		.ascii	"pxCreatedTask\000"
 13563      65617465 
 13563      64546173 
 13563      6B00
 13564              	.LASF293:
 13565 24e1 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 13565      6865636B 
 13565      5461736B 
 13565      73576169 
 13565      74696E67 
 13566              	.LASF317:
 13567 2501 75785361 		.ascii	"uxSavedInterruptStatus\000"
 13567      76656449 
 13567      6E746572 
 13567      72757074 
 13567      53746174 
 13568              	.LASF207:
 13569 2518 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_SRVC_DISCOVERING\000"
 13569      4C455F43 
 13569      4F4E4E5F 
 13569      53544154 
 13569      455F434C 
 13570              	.LASF72:
 13571 2542 696E7472 		.ascii	"intrMask\000"
 13571      4D61736B 
 13571      00
 13572              	.LASF40:
 13573 254b 72784275 		.ascii	"rxBufSize\000"
 13573      6653697A 
 13573      6500
 13574              	.LASF412:
 13575 2555 63795F62 		.ascii	"cy_ble_pendingFlashWrite\000"
 13575      6C655F70 
 13575      656E6469 
 13575      6E67466C 
 13575      61736857 
 13576              	.LASF142:
 13577 256e 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 13577      4C455F45 
 13577      56545F47 
 13577      41505F43 
 13577      4F4E4E45 
 13578              	.LASF401:
 13579 2598 78596965 		.ascii	"xYieldPending\000"
 13579      6C645065 
 13579      6E64696E 
 13579      6700
 13580              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
